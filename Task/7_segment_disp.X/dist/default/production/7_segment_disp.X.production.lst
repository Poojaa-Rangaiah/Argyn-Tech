

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Jun 01 18:03:22 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 22/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168                           
   169                           	psect	idataBANK0
   170     079B                     __pidataBANK0:
   171                           
   172                           ;initializer for _arr
   173     079B  34FC               	retlw	252
   174     079C  3460               	retlw	96
   175     079D  34DA               	retlw	218
   176     079E  34F2               	retlw	242
   177     079F  3466               	retlw	102
   178     07A0  34B6               	retlw	182
   179     07A1  34BE               	retlw	190
   180     07A2  34E0               	retlw	224
   181     07A3  34FE               	retlw	254
   182     07A4  34F6               	retlw	246
   183     07A5  3400               	retlw	0
   184     0006                     _PORTB	set	6
   185     0081                     _OPTION_REG	set	129
   186     0086                     _TRISB	set	134
   187                           
   188                           	psect	cinit
   189     07ED                     start_initialization:	
   190                           ; #config settings
   191                           
   192     07ED                     __initialization:
   193                           
   194                           ; Initialize objects allocated to BANK0
   195     07ED  1383               	bcf	3,7	;select IRP bank0
   196     07EE  302B               	movlw	low (__pdataBANK0+11)
   197     07EF  00FD               	movwf	btemp+-1
   198     07F0  3007               	movlw	high __pidataBANK0
   199     07F1  00FE               	movwf	btemp
   200     07F2  309B               	movlw	low __pidataBANK0
   201     07F3  00FF               	movwf	btemp+1
   202     07F4  3020               	movlw	low __pdataBANK0
   203     07F5  0084               	movwf	4
   204     07F6  120A  118A  27AA  120A  118A  	fcall	init_ram0
   205                           
   206                           ; Clear objects allocated to COMMON
   207     07FB  01F3               	clrf	__pbssCOMMON& (0+127)
   208     07FC                     end_of_initialization:	
   209                           ;End of C runtime variable initialization code
   210                           
   211     07FC                     __end_of__initialization:
   212     07FC  0183               	clrf	3
   213     07FD  120A  118A  2FB9   	ljmp	_main	;jump to C main() function
   214                           
   215                           	psect	bssCOMMON
   216     0073                     __pbssCOMMON:
   217     0073                     _i:
   218     0073                     	ds	1
   219                           
   220                           	psect	dataBANK0
   221     0020                     __pdataBANK0:
   222     0020                     _arr:
   223     0020                     	ds	11
   224                           
   225                           	psect	inittext
   226     07A6                     init_fetch0:	
   227                           ;	Called with low address in FSR and high address in W
   228                           
   229     07A6  087E               	movf	btemp,w
   230     07A7  008A               	movwf	10
   231     07A8  087F               	movf	btemp+1,w
   232     07A9  0082               	movwf	2
   233     07AA                     init_ram0:	
   234                           ;Called with:
   235                           ;	high address of idata address in btemp 
   236                           ;	low address of idata address in btemp+1 
   237                           ;	low address of data in FSR
   238                           ;	high address + 1 of data in btemp-1
   239                           
   240     07AA  120A  118A  27A6  120A  118A  	fcall	init_fetch0
   241     07AF  0080               	movwf	0
   242     07B0  0A84               	incf	4,f
   243     07B1  0804               	movf	4,w
   244     07B2  067D               	xorwf	btemp+-1,w
   245     07B3  1903               	btfsc	3,2
   246     07B4  3400               	retlw	0
   247     07B5  0AFF               	incf	btemp+1,f
   248     07B6  1903               	btfsc	3,2
   249     07B7  0AFE               	incf	btemp,f
   250     07B8  2FAA               	goto	init_ram0
   251                           
   252                           	psect	cstackCOMMON
   253     0070                     __pcstackCOMMON:
   254     0070                     ?_main:
   255     0070                     ??_main:	
   256                           ; 1 bytes @ 0x0
   257                           
   258                           
   259                           ; 1 bytes @ 0x0
   260     0070                     	ds	3
   261                           
   262                           	psect	maintext
   263     07B9                     __pmaintext:	
   264 ;;
   265 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   266 ;;
   267 ;; *************** function _main *****************
   268 ;; Defined at:
   269 ;;		line 14 in file "7_segment_disp.c"
   270 ;; Parameters:    Size  Location     Type
   271 ;;		None
   272 ;; Auto vars:     Size  Location     Type
   273 ;;		None
   274 ;; Return value:  Size  Location     Type
   275 ;;                  1    wreg      void 
   276 ;; Registers used:
   277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   278 ;; Tracked objects:
   279 ;;		On entry : B00/0
   280 ;;		On exit  : 0/0
   281 ;;		Unchanged: 0/0
   282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   283 ;;      Params:         0       0       0       0       0
   284 ;;      Locals:         0       0       0       0       0
   285 ;;      Temps:          3       0       0       0       0
   286 ;;      Totals:         3       0       0       0       0
   287 ;;Total ram usage:        3 bytes
   288 ;; This function calls:
   289 ;;		Nothing
   290 ;; This function is called by:
   291 ;;		Startup code after reset
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295     07B9                     _main:	
   296                           ;psect for function _main
   297                           
   298     07B9                     l588:	
   299                           ;incstack = 0
   300                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   301                           
   302     07B9  1683               	bsf	3,5	;RP0=1, select bank1
   303     07BA  1303               	bcf	3,6	;RP1=0, select bank1
   304     07BB  0186               	clrf	6	;volatile
   305     07BC                     l590:
   306     07BC  307F               	movlw	127
   307     07BD  00FF               	movwf	btemp+1
   308     07BE  087F               	movf	btemp+1,w
   309     07BF  0581               	andwf	1,f	;volatile
   310     07C0                     l592:
   311     07C0  1283               	bcf	3,5	;RP0=0, select bank0
   312     07C1  1303               	bcf	3,6	;RP1=0, select bank0
   313     07C2  0186               	clrf	6	;volatile
   314     07C3                     l594:
   315     07C3  01F3               	clrf	_i
   316     07C4                     l600:
   317     07C4  0873               	movf	_i,w
   318     07C5  3E20               	addlw	(low (_arr| 0))& (0+255)
   319     07C6  0084               	movwf	4
   320     07C7  1383               	bcf	3,7	;select IRP bank0
   321     07C8  0800               	movf	0,w
   322     07C9  1283               	bcf	3,5	;RP0=0, select bank0
   323     07CA  1303               	bcf	3,6	;RP1=0, select bank0
   324     07CB  0086               	movwf	6	;volatile
   325     07CC                     l602:
   326     07CC  3008               	movlw	8
   327     07CD  00F2               	movwf	??_main+2
   328     07CE  309D               	movlw	157
   329     07CF  00F1               	movwf	??_main+1
   330     07D0  3005               	movlw	5
   331     07D1  00F0               	movwf	??_main
   332     07D2                     u57:
   333     07D2  0BF0               	decfsz	??_main,f
   334     07D3  2FD2               	goto	u57
   335     07D4  0BF1               	decfsz	??_main+1,f
   336     07D5  2FD2               	goto	u57
   337     07D6  0BF2               	decfsz	??_main+2,f
   338     07D7  2FD2               	goto	u57
   339     07D8  2FD9               	nop2
   340     07D9                     l604:
   341     07D9  300A               	movlw	10
   342     07DA  0673               	xorwf	_i,w
   343     07DB  1D03               	btfss	3,2
   344     07DC  2FDE               	goto	u31
   345     07DD  2FDF               	goto	u30
   346     07DE                     u31:
   347     07DE  2FE0               	goto	l608
   348     07DF                     u30:
   349     07DF                     l606:
   350     07DF  01F3               	clrf	_i
   351     07E0                     l608:
   352     07E0  3001               	movlw	1
   353     07E1  00FF               	movwf	btemp+1
   354     07E2  087F               	movf	btemp+1,w
   355     07E3  07F3               	addwf	_i,f
   356     07E4                     l610:
   357     07E4  300A               	movlw	10
   358     07E5  0273               	subwf	_i,w
   359     07E6  1C03               	skipc
   360     07E7  2FE9               	goto	u41
   361     07E8  2FEA               	goto	u40
   362     07E9                     u41:
   363     07E9  2FC4               	goto	l600
   364     07EA                     u40:
   365     07EA                     l20:
   366     07EA  120A  118A  2800   	ljmp	start
   367     07ED                     __end_of_main:
   368     007E                     btemp	set	126	;btemp
   369     007E                     wtemp0	set	126
   370                           
   371                           	psect	config
   372                           
   373                           ;Config register CONFIG @ 0x2007
   374                           ;	Oscillator Selection bits
   375                           ;	FOSC = HS, HS oscillator
   376                           ;	Watchdog Timer Enable bit
   377                           ;	WDTE = OFF, WDT disabled
   378                           ;	Power-up Timer Enable bit
   379                           ;	PWRTE = OFF, PWRT disabled
   380                           ;	Brown-out Reset Enable bit
   381                           ;	BOREN = OFF, BOR disabled
   382                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   383                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   384                           ;	Data EEPROM Memory Code Protection bit
   385                           ;	CPD = OFF, Data EEPROM code protection off
   386                           ;	Flash Program Memory Write Enable bits
   387                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   388                           ;	In-Circuit Debugger Mode bit
   389                           ;	DEBUG = 0x1, unprogrammed default
   390                           ;	Flash Program Memory Code Protection bit
   391                           ;	CP = OFF, Code protection off
   392     2007                     	org	8199
   393     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       B       5       13.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       4       1       28.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       F      12        0.0%
ABS                  0      0       F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Jun 01 18:03:22 2024

                      _i 0073                        pc 0002                       l20 07EA  
                     u30 07DF                       u31 07DE                       u40 07EA  
                     u41 07E9                       u57 07D2                       fsr 0004  
                    l600 07C4                      l610 07E4                      l602 07CC  
                    l604 07D9                      l606 07DF                      l608 07E0  
                    l590 07BC                      l592 07C0                      l594 07C3  
                    l588 07B9                      _arr 0020                      fsr0 0004  
                    indf 0000                     _main 07B9                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07ED             __end_of_main 07ED  
                 ??_main 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 079B               __pmaintext 07B9     end_of_initialization 07FC  
    start_initialization 07ED               init_fetch0 07A6              __pdataBANK0 0020  
            __pbssCOMMON 0073                ___latbits 0002                 init_ram0 07AA  
             _OPTION_REG 0081  
