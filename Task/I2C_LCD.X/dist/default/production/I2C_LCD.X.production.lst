

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon May 27 19:18:10 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38     0000                     
    39                           ; Generated 22/03/2023 GMT
    40                           ; 
    41                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F877A Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0000                     	;# 
    74     0001                     	;# 
    75     0002                     	;# 
    76     0003                     	;# 
    77     0004                     	;# 
    78     0005                     	;# 
    79     0006                     	;# 
    80     0007                     	;# 
    81     0008                     	;# 
    82     0009                     	;# 
    83     000A                     	;# 
    84     000B                     	;# 
    85     000C                     	;# 
    86     000D                     	;# 
    87     000E                     	;# 
    88     000E                     	;# 
    89     000F                     	;# 
    90     0010                     	;# 
    91     0011                     	;# 
    92     0012                     	;# 
    93     0013                     	;# 
    94     0014                     	;# 
    95     0015                     	;# 
    96     0015                     	;# 
    97     0016                     	;# 
    98     0017                     	;# 
    99     0018                     	;# 
   100     0019                     	;# 
   101     001A                     	;# 
   102     001B                     	;# 
   103     001B                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001E                     	;# 
   107     001F                     	;# 
   108     0081                     	;# 
   109     0085                     	;# 
   110     0086                     	;# 
   111     0087                     	;# 
   112     0088                     	;# 
   113     0089                     	;# 
   114     008C                     	;# 
   115     008D                     	;# 
   116     008E                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0094                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009C                     	;# 
   124     009D                     	;# 
   125     009E                     	;# 
   126     009F                     	;# 
   127     010C                     	;# 
   128     010D                     	;# 
   129     010E                     	;# 
   130     010F                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     0091                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0094                     	;# 
   181     0098                     	;# 
   182     0099                     	;# 
   183     009C                     	;# 
   184     009D                     	;# 
   185     009E                     	;# 
   186     009F                     	;# 
   187     010C                     	;# 
   188     010D                     	;# 
   189     010E                     	;# 
   190     010F                     	;# 
   191     018C                     	;# 
   192     018D                     	;# 
   193                           
   194                           	psect	idataCOMMON
   195     016A                     __pidataCOMMON:
   196                           
   197                           ;initializer for _hour
   198     016A  340B               	retlw	11
   199     016B  3400               	retlw	0
   200                           
   201                           	psect	idataBANK0
   202     017E                     __pidataBANK0:	
   203                           ;initializer for _year
   204                           
   205     017E  3418               	retlw	24
   206     017F  3400               	retlw	0
   207                           
   208                           ;initializer for _day
   209     0180  3401               	retlw	1
   210     0181  3400               	retlw	0
   211                           
   212                           ;initializer for _month
   213     0182  3404               	retlw	4
   214     0183  3400               	retlw	0
   215                           
   216                           ;initializer for _date
   217     0184  3408               	retlw	8
   218     0185  3400               	retlw	0
   219                           
   220                           ;initializer for _min
   221     0186  343B               	retlw	59
   222     0187  3400               	retlw	0
   223                           
   224                           ;initializer for _sec
   225     0188  343A               	retlw	58
   226     0189  3400               	retlw	0
   227                           
   228                           	psect	nvBANK0
   229     0034                     __pnvBANK0:
   230     0034                     _i2c_add:
   231     0034                     	ds	1
   232     0013                     _SSPBUF	set	19
   233     0014                     _SSPCON	set	20
   234     0007                     _PORTC	set	7
   235     0063                     _SSPIF	set	99
   236     003C                     _RC4	set	60
   237     003B                     _RC3	set	59
   238     0093                     _SSPADD	set	147
   239     0094                     _SSPSTAT	set	148
   240     0091                     _SSPCON2	set	145
   241     0087                     _TRISC	set	135
   242     048B                     _RCEN	set	1163
   243     048E                     _ACKSTAT	set	1166
   244     048C                     _ACKEN	set	1164
   245     048D                     _ACKDT	set	1165
   246     048A                     _PEN	set	1162
   247     0489                     _RSEN	set	1161
   248     0488                     _SEN	set	1160
   249                           
   250                           	psect	strings
   251     0003                     __pstrings:
   252     0003                     stringtab:
   253     0003                     __stringtab:
   254     0003                     stringcode:	
   255                           ;	String table - string pointers are 1 byte each
   256                           
   257     0003                     stringdir:
   258     0003  3000               	movlw	high stringdir
   259     0004  008A               	movwf	10
   260     0005  0804               	movf	4,w
   261     0006  0A84               	incf	4,f
   262     0007  0782               	addwf	2,f
   263     0008                     __stringbase:
   264     0008  3400               	retlw	0
   265     0009                     __end_of__stringtab:
   266     0009                     STR_1:
   267     0009  3454               	retlw	84	;'T'
   268     000A  3449               	retlw	73	;'I'
   269     000B  344D               	retlw	77	;'M'
   270     000C  343A               	retlw	58	;':'
   271     000D  3400               	retlw	0
   272     000E                     STR_4:
   273     000E  3444               	retlw	68	;'D'
   274     000F  3441               	retlw	65	;'A'
   275     0010  3454               	retlw	84	;'T'
   276     0011  343A               	retlw	58	;':'
   277     0012  3400               	retlw	0
   278     0013                     STR_8:
   279     0013  3420               	retlw	32	;' '
   280     0014  3457               	retlw	87	;'W'
   281     0015  3445               	retlw	69	;'E'
   282     0016  3444               	retlw	68	;'D'
   283     0017  3400               	retlw	0
   284     0018                     STR_7:
   285     0018  3420               	retlw	32	;' '
   286     0019  3454               	retlw	84	;'T'
   287     001A  3455               	retlw	85	;'U'
   288     001B  3445               	retlw	69	;'E'
   289     001C  3400               	retlw	0
   290     001D                     STR_10:
   291     001D  3420               	retlw	32	;' '
   292     001E  3446               	retlw	70	;'F'
   293     001F  3452               	retlw	82	;'R'
   294     0020  3449               	retlw	73	;'I'
   295     0021  3400               	retlw	0
   296     0022                     STR_6:
   297     0022  3420               	retlw	32	;' '
   298     0023  344D               	retlw	77	;'M'
   299     0024  344F               	retlw	79	;'O'
   300     0025  344E               	retlw	78	;'N'
   301     0026  3400               	retlw	0
   302     0027                     STR_5:
   303     0027  3420               	retlw	32	;' '
   304     0028  3453               	retlw	83	;'S'
   305     0029  3455               	retlw	85	;'U'
   306     002A  344E               	retlw	78	;'N'
   307     002B  3400               	retlw	0
   308     002C                     STR_11:
   309     002C  3420               	retlw	32	;' '
   310     002D  3453               	retlw	83	;'S'
   311     002E  3441               	retlw	65	;'A'
   312     002F  3454               	retlw	84	;'T'
   313     0030  3400               	retlw	0
   314     0031                     STR_9:
   315     0031  3420               	retlw	32	;' '
   316     0032  3454               	retlw	84	;'T'
   317     0033  3448               	retlw	72	;'H'
   318     0034  3455               	retlw	85	;'U'
   319     0035  3400               	retlw	0
   320     0036                     STR_2:
   321     0036  3420               	retlw	32	;' '
   322     0037  3441               	retlw	65	;'A'
   323     0038  344D               	retlw	77	;'M'
   324     0039  3400               	retlw	0
   325     003A                     STR_3:
   326     003A  3420               	retlw	32	;' '
   327     003B  3450               	retlw	80	;'P'
   328     003C  344D               	retlw	77	;'M'
   329     003D  3400               	retlw	0
   330                           
   331                           	psect	cinit
   332     07DD                     start_initialization:	
   333                           ; #config settings
   334                           
   335     07DD                     __initialization:
   336                           
   337                           ; Initialize objects allocated to BANK0
   338     07DD  1383               	bcf	3,7	;select IRP bank0
   339     07DE  302C               	movlw	low (__pdataBANK0+12)
   340     07DF  00FD               	movwf	btemp+-1
   341     07E0  3001               	movlw	high __pidataBANK0
   342     07E1  00FE               	movwf	btemp
   343     07E2  307E               	movlw	low __pidataBANK0
   344     07E3  00FF               	movwf	btemp+1
   345     07E4  3020               	movlw	low __pdataBANK0
   346     07E5  0084               	movwf	4
   347     07E6  120A  118A  21AB  120A  118A  	fcall	init_ram0
   348                           
   349                           ; Initialize objects allocated to COMMON
   350     07EB  120A  118A  216A  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   351     07F0  00FC               	movwf	__pdataCOMMON& (0+127)
   352     07F1  120A  118A  216B  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   353     07F6  00FD               	movwf	(__pdataCOMMON+1)& (0+127)
   354                           
   355                           ; Clear objects allocated to BANK0
   356     07F7  01AC               	clrf	__pbssBANK0& (0+127)
   357     07F8  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   358     07F9  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   359     07FA  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   360     07FB  01B0               	clrf	(__pbssBANK0+4)& (0+127)
   361     07FC                     end_of_initialization:	
   362                           ;End of C runtime variable initialization code
   363                           
   364     07FC                     __end_of__initialization:
   365     07FC  0183               	clrf	3
   366     07FD  120A  118A  2E0B   	ljmp	_main	;jump to C main() function
   367                           
   368                           	psect	dataCOMMON
   369     007C                     __pdataCOMMON:
   370     007C                     _hour:
   371     007C                     	ds	2
   372                           
   373                           	psect	bssBANK0
   374     002C                     __pbssBANK0:
   375     002C                     _hour1:
   376     002C                     	ds	2
   377     002E                     _i:
   378     002E                     	ds	2
   379     0030                     _RS:
   380     0030                     	ds	1
   381                           
   382                           	psect	dataBANK0
   383     0020                     __pdataBANK0:
   384     0020                     _year:
   385     0020                     	ds	2
   386     0022                     _day:
   387     0022                     	ds	2
   388     0024                     _month:
   389     0024                     	ds	2
   390     0026                     _date:
   391     0026                     	ds	2
   392     0028                     _min:
   393     0028                     	ds	2
   394     002A                     _sec:
   395     002A                     	ds	2
   396                           
   397                           	psect	inittext
   398     01A7                     init_fetch0:	
   399                           ;	Called with low address in FSR and high address in W
   400                           
   401     01A7  087E               	movf	btemp,w
   402     01A8  008A               	movwf	10
   403     01A9  087F               	movf	btemp+1,w
   404     01AA  0082               	movwf	2
   405     01AB                     init_ram0:	
   406                           ;Called with:
   407                           ;	high address of idata address in btemp 
   408                           ;	low address of idata address in btemp+1 
   409                           ;	low address of data in FSR
   410                           ;	high address + 1 of data in btemp-1
   411                           
   412     01AB  120A  118A  21A7  120A  118A  	fcall	init_fetch0
   413     01B0  0080               	movwf	0
   414     01B1  0A84               	incf	4,f
   415     01B2  0804               	movf	4,w
   416     01B3  067D               	xorwf	btemp+-1,w
   417     01B4  1903               	btfsc	3,2
   418     01B5  3400               	retlw	0
   419     01B6  0AFF               	incf	btemp+1,f
   420     01B7  1903               	btfsc	3,2
   421     01B8  0AFE               	incf	btemp,f
   422     01B9  29AB               	goto	init_ram0
   423                           
   424                           	psect	cstackCOMMON
   425     0070                     __pcstackCOMMON:
   426     0070                     ?_I2C_Master_Init:
   427     0070                     ??_I2C_Master_Init:	
   428                           ; 1 bytes @ 0x0
   429                           
   430     0070                     ?_LCD_Init:	
   431                           ; 1 bytes @ 0x0
   432                           
   433     0070                     ?_setup:	
   434                           ; 1 bytes @ 0x0
   435                           
   436     0070                     ?_update:	
   437                           ; 1 bytes @ 0x0
   438                           
   439     0070                     ?_LCD_Write_String:	
   440                           ; 1 bytes @ 0x0
   441                           
   442     0070                     ?_lcd_data:	
   443                           ; 1 bytes @ 0x0
   444                           
   445     0070                     ?_IO_Expander_Write:	
   446                           ; 1 bytes @ 0x0
   447                           
   448     0070                     ?_LCD_CMD:	
   449                           ; 1 bytes @ 0x0
   450                           
   451     0070                     ?_main:	
   452                           ; 1 bytes @ 0x0
   453                           
   454     0070                     ?_I2C_Master_Wait:	
   455                           ; 1 bytes @ 0x0
   456                           
   457     0070                     ??_I2C_Master_Wait:	
   458                           ; 1 bytes @ 0x0
   459                           
   460     0070                     ?_I2C_Master_Start:	
   461                           ; 1 bytes @ 0x0
   462                           
   463     0070                     ??_I2C_Master_Start:	
   464                           ; 1 bytes @ 0x0
   465                           
   466     0070                     ?_I2C_Master_Stop:	
   467                           ; 1 bytes @ 0x0
   468                           
   469     0070                     ??_I2C_Master_Stop:	
   470                           ; 1 bytes @ 0x0
   471                           
   472     0070                     ?_I2C_Master_Write:	
   473                           ; 1 bytes @ 0x0
   474                           
   475     0070                     ??_I2C_Master_Write:	
   476                           ; 1 bytes @ 0x0
   477                           
   478     0070                     ?_I2C_Read_Byte:	
   479                           ; 1 bytes @ 0x0
   480                           
   481     0070                     ??_I2C_Read_Byte:	
   482                           ; 1 bytes @ 0x0
   483                           
   484     0070                     ?_LCD_Write_4Bit:	
   485                           ; 1 bytes @ 0x0
   486                           
   487     0070                     ?___wmul:	
   488                           ; 1 bytes @ 0x0
   489                           
   490     0070                     ?___awdiv:	
   491                           ; 2 bytes @ 0x0
   492                           
   493     0070                     ?___awmod:	
   494                           ; 2 bytes @ 0x0
   495                           
   496     0070                     I2C_Master_Write@data:	
   497                           ; 2 bytes @ 0x0
   498                           
   499     0070                     ___wmul@multiplier:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0070                     ___awdiv@divisor:	
   503                           ; 2 bytes @ 0x0
   504                           
   505     0070                     ___awmod@divisor:	
   506                           ; 2 bytes @ 0x0
   507                           
   508                           
   509                           ; 2 bytes @ 0x0
   510     0070                     	ds	1
   511     0071                     ??_IO_Expander_Write:
   512     0071                     IO_Expander_Write@Data:	
   513                           ; 1 bytes @ 0x1
   514                           
   515                           
   516                           ; 1 bytes @ 0x1
   517     0071                     	ds	1
   518     0072                     ??_LCD_Write_4Bit:
   519     0072                     ___wmul@multiplicand:	
   520                           ; 1 bytes @ 0x2
   521                           
   522     0072                     ___awdiv@dividend:	
   523                           ; 2 bytes @ 0x2
   524                           
   525     0072                     ___awmod@dividend:	
   526                           ; 2 bytes @ 0x2
   527                           
   528                           
   529                           ; 2 bytes @ 0x2
   530     0072                     	ds	1
   531     0073                     LCD_Write_4Bit@Nibble:
   532                           
   533                           ; 1 bytes @ 0x3
   534     0073                     	ds	1
   535     0074                     ??_lcd_data:
   536     0074                     ??_LCD_CMD:	
   537                           ; 1 bytes @ 0x4
   538                           
   539     0074                     ??___wmul:	
   540                           ; 1 bytes @ 0x4
   541                           
   542     0074                     ??___awdiv:	
   543                           ; 1 bytes @ 0x4
   544                           
   545     0074                     ??___awmod:	
   546                           ; 1 bytes @ 0x4
   547                           
   548     0074                     ___awdiv@counter:	
   549                           ; 1 bytes @ 0x4
   550                           
   551     0074                     ___awmod@counter:	
   552                           ; 1 bytes @ 0x4
   553                           
   554     0074                     ___wmul@product:	
   555                           ; 1 bytes @ 0x4
   556                           
   557                           
   558                           ; 2 bytes @ 0x4
   559     0074                     	ds	1
   560     0075                     LCD_CMD@CMD:
   561     0075                     lcd_data@Data:	
   562                           ; 1 bytes @ 0x5
   563                           
   564     0075                     ___awdiv@sign:	
   565                           ; 1 bytes @ 0x5
   566                           
   567     0075                     ___awmod@sign:	
   568                           ; 1 bytes @ 0x5
   569                           
   570                           
   571                           ; 1 bytes @ 0x5
   572     0075                     	ds	1
   573     0076                     ??_LCD_Init:
   574     0076                     ?_LCD_Set_Cursor:	
   575                           ; 1 bytes @ 0x6
   576                           
   577     0076                     ??_LCD_Write_String:	
   578                           ; 1 bytes @ 0x6
   579                           
   580     0076                     ?_bcd2dec:	
   581                           ; 1 bytes @ 0x6
   582                           
   583     0076                     LCD_Set_Cursor@COL:	
   584                           ; 2 bytes @ 0x6
   585                           
   586     0076                     LCD_Write_String@i:	
   587                           ; 1 bytes @ 0x6
   588                           
   589     0076                     bcd2dec@temp:	
   590                           ; 2 bytes @ 0x6
   591                           
   592     0076                     ___awdiv@quotient:	
   593                           ; 2 bytes @ 0x6
   594                           
   595                           
   596                           ; 2 bytes @ 0x6
   597     0076                     	ds	1
   598     0077                     ??_LCD_Set_Cursor:
   599                           
   600                           ; 1 bytes @ 0x7
   601     0077                     	ds	1
   602     0078                     ??_bcd2dec:
   603     0078                     ?_dec2bcd:	
   604                           ; 1 bytes @ 0x8
   605                           
   606     0078                     LCD_Write_String@Str:	
   607                           ; 2 bytes @ 0x8
   608                           
   609     0078                     dec2bcd@temp:	
   610                           ; 1 bytes @ 0x8
   611                           
   612                           
   613                           ; 2 bytes @ 0x8
   614     0078                     	ds	1
   615     0079                     ?_days:
   616     0079                     LCD_Init@I2C_Add:	
   617                           ; 1 bytes @ 0x9
   618                           
   619     0079                     LCD_Set_Cursor@ROW:	
   620                           ; 1 bytes @ 0x9
   621                           
   622     0079                     days@day:	
   623                           ; 1 bytes @ 0x9
   624                           
   625                           
   626                           ; 2 bytes @ 0x9
   627     0079                     	ds	1
   628     007A                     ??_update:
   629     007A                     ??_dec2bcd:	
   630                           ; 1 bytes @ 0xA
   631                           
   632                           
   633                           ; 1 bytes @ 0xA
   634     007A                     	ds	1
   635     007B                     ??_days:
   636                           
   637                           ; 1 bytes @ 0xB
   638     007B                     	ds	1
   639     007C                     ??_setup:
   640                           
   641                           	psect	cstackBANK0
   642     0031                     __pcstackBANK0:	
   643                           ; 1 bytes @ 0xC
   644                           
   645     0031                     ??_main:
   646                           
   647                           ; 1 bytes @ 0x0
   648     0031                     	ds	3
   649                           
   650                           	psect	maintext
   651     060B                     __pmaintext:	
   652 ;;
   653 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   654 ;;
   655 ;; *************** function _main *****************
   656 ;; Defined at:
   657 ;;		line 37 in file "LCD_i2c.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : B00/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   671 ;;      Params:         0       0       0       0       0
   672 ;;      Locals:         0       0       0       0       0
   673 ;;      Temps:          0       3       0       0       0
   674 ;;      Totals:         0       3       0       0       0
   675 ;;Total ram usage:        3 bytes
   676 ;; Hardware stack levels required when called: 7
   677 ;; This function calls:
   678 ;;		_I2C_Master_Init
   679 ;;		_LCD_Init
   680 ;;		_LCD_Set_Cursor
   681 ;;		_LCD_Write_String
   682 ;;		___awdiv
   683 ;;		___awmod
   684 ;;		_days
   685 ;;		_dec2bcd
   686 ;;		_lcd_data
   687 ;;		_setup
   688 ;;		_update
   689 ;; This function is called by:
   690 ;;		Startup code after reset
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694     060B                     _main:	
   695                           ;psect for function _main
   696                           
   697     060B                     l1358:	
   698                           ;incstack = 0
   699                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   700                           
   701                           
   702                           ;LCD_i2c.c: 38:     I2C_Master_Init();
   703     060B  120A  118A  21BA  120A  118A  	fcall	_I2C_Master_Init
   704     0610                     l1360:
   705                           
   706                           ;LCD_i2c.c: 39:     LCD_Init(0x4E);
   707     0610  304E               	movlw	78
   708     0611  120A  118A  2421  120A  118A  	fcall	_LCD_Init
   709     0616                     l1362:
   710                           
   711                           ;LCD_i2c.c: 40:     setup();
   712     0616  120A  118A  24AA  120A  118A  	fcall	_setup
   713     061B                     l85:	
   714                           ;LCD_i2c.c: 41:     while(1) {
   715                           
   716                           
   717                           ;LCD_i2c.c: 42:         update();
   718     061B  120A  118A  2537  120A  118A  	fcall	_update
   719     0620                     l1364:
   720                           
   721                           ;LCD_i2c.c: 43:         hour1=(dec2bcd(hour)&0x1F)-6;
   722     0620  087D               	movf	_hour+1,w
   723     0621  00F9               	movwf	dec2bcd@temp+1
   724     0622  087C               	movf	_hour,w
   725     0623  00F8               	movwf	dec2bcd@temp
   726     0624  120A  118A  22E2  120A  118A  	fcall	_dec2bcd
   727     0629  301F               	movlw	31
   728     062A  0578               	andwf	?_dec2bcd,w
   729     062B  1283               	bcf	3,5	;RP0=0, select bank0
   730     062C  1303               	bcf	3,6	;RP1=0, select bank0
   731     062D  00B1               	movwf	??_main
   732     062E  3000               	movlw	0
   733     062F  0579               	andwf	?_dec2bcd+1,w
   734     0630  00B2               	movwf	??_main+1
   735     0631  0831               	movf	??_main,w
   736     0632  3EFA               	addlw	250
   737     0633  00AC               	movwf	_hour1
   738     0634  0832               	movf	??_main+1,w
   739     0635  1803               	skipnc
   740     0636  3E01               	addlw	1
   741     0637  3EFF               	addlw	255
   742     0638  00AD               	movwf	_hour1+1
   743     0639                     l1366:
   744                           
   745                           ;LCD_i2c.c: 44:         LCD_Set_Cursor(1, 1);
   746     0639  01F6               	clrf	LCD_Set_Cursor@COL
   747     063A  0AF6               	incf	LCD_Set_Cursor@COL,f
   748     063B  3001               	movlw	1
   749     063C  120A  118A  2253  120A  118A  	fcall	_LCD_Set_Cursor
   750     0641                     l1368:
   751                           
   752                           ;LCD_i2c.c: 45:         LCD_Write_String("TIM:");
   753     0641  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   754     0642  120A  118A  2273  120A  118A  	fcall	_LCD_Write_String
   755     0647                     l1370:
   756                           
   757                           ;LCD_i2c.c: 46:         lcd_data(hour1/10+'0');
   758     0647  300A               	movlw	10
   759     0648  00F0               	movwf	___awdiv@divisor
   760     0649  3000               	movlw	0
   761     064A  00F1               	movwf	___awdiv@divisor+1
   762     064B  1283               	bcf	3,5	;RP0=0, select bank0
   763     064C  1303               	bcf	3,6	;RP1=0, select bank0
   764     064D  082D               	movf	_hour1+1,w
   765     064E  00F3               	movwf	___awdiv@dividend+1
   766     064F  082C               	movf	_hour1,w
   767     0650  00F2               	movwf	___awdiv@dividend
   768     0651  120A  118A  23BA  120A  118A  	fcall	___awdiv
   769     0656  0870               	movf	?___awdiv,w
   770     0657  3E30               	addlw	48
   771     0658  120A  118A  2236  120A  118A  	fcall	_lcd_data
   772     065D                     l1372:
   773                           
   774                           ;LCD_i2c.c: 47:         lcd_data(hour1%10+'0');
   775     065D  300A               	movlw	10
   776     065E  00F0               	movwf	___awmod@divisor
   777     065F  3000               	movlw	0
   778     0660  00F1               	movwf	___awmod@divisor+1
   779     0661  1283               	bcf	3,5	;RP0=0, select bank0
   780     0662  1303               	bcf	3,6	;RP1=0, select bank0
   781     0663  082D               	movf	_hour1+1,w
   782     0664  00F3               	movwf	___awmod@dividend+1
   783     0665  082C               	movf	_hour1,w
   784     0666  00F2               	movwf	___awmod@dividend
   785     0667  120A  118A  2361  120A  118A  	fcall	___awmod
   786     066C  0870               	movf	?___awmod,w
   787     066D  3E30               	addlw	48
   788     066E  120A  118A  2236  120A  118A  	fcall	_lcd_data
   789     0673                     l1374:
   790                           
   791                           ;LCD_i2c.c: 48:         lcd_data('-');
   792     0673  302D               	movlw	45
   793     0674  120A  118A  2236  120A  118A  	fcall	_lcd_data
   794     0679                     l1376:
   795                           
   796                           ;LCD_i2c.c: 49:         lcd_data(min/10+'0');
   797     0679  300A               	movlw	10
   798     067A  00F0               	movwf	___awdiv@divisor
   799     067B  3000               	movlw	0
   800     067C  00F1               	movwf	___awdiv@divisor+1
   801     067D  1283               	bcf	3,5	;RP0=0, select bank0
   802     067E  1303               	bcf	3,6	;RP1=0, select bank0
   803     067F  0829               	movf	_min+1,w
   804     0680  00F3               	movwf	___awdiv@dividend+1
   805     0681  0828               	movf	_min,w
   806     0682  00F2               	movwf	___awdiv@dividend
   807     0683  120A  118A  23BA  120A  118A  	fcall	___awdiv
   808     0688  0870               	movf	?___awdiv,w
   809     0689  3E30               	addlw	48
   810     068A  120A  118A  2236  120A  118A  	fcall	_lcd_data
   811     068F                     l1378:
   812                           
   813                           ;LCD_i2c.c: 50:         lcd_data(min%10+'0');
   814     068F  300A               	movlw	10
   815     0690  00F0               	movwf	___awmod@divisor
   816     0691  3000               	movlw	0
   817     0692  00F1               	movwf	___awmod@divisor+1
   818     0693  1283               	bcf	3,5	;RP0=0, select bank0
   819     0694  1303               	bcf	3,6	;RP1=0, select bank0
   820     0695  0829               	movf	_min+1,w
   821     0696  00F3               	movwf	___awmod@dividend+1
   822     0697  0828               	movf	_min,w
   823     0698  00F2               	movwf	___awmod@dividend
   824     0699  120A  118A  2361  120A  118A  	fcall	___awmod
   825     069E  0870               	movf	?___awmod,w
   826     069F  3E30               	addlw	48
   827     06A0  120A  118A  2236  120A  118A  	fcall	_lcd_data
   828     06A5                     l1380:
   829                           
   830                           ;LCD_i2c.c: 51:         lcd_data('-');
   831     06A5  302D               	movlw	45
   832     06A6  120A  118A  2236  120A  118A  	fcall	_lcd_data
   833     06AB                     l1382:
   834                           
   835                           ;LCD_i2c.c: 52:         lcd_data(sec/10+'0');
   836     06AB  300A               	movlw	10
   837     06AC  00F0               	movwf	___awdiv@divisor
   838     06AD  3000               	movlw	0
   839     06AE  00F1               	movwf	___awdiv@divisor+1
   840     06AF  1283               	bcf	3,5	;RP0=0, select bank0
   841     06B0  1303               	bcf	3,6	;RP1=0, select bank0
   842     06B1  082B               	movf	_sec+1,w
   843     06B2  00F3               	movwf	___awdiv@dividend+1
   844     06B3  082A               	movf	_sec,w
   845     06B4  00F2               	movwf	___awdiv@dividend
   846     06B5  120A  118A  23BA  120A  118A  	fcall	___awdiv
   847     06BA  0870               	movf	?___awdiv,w
   848     06BB  3E30               	addlw	48
   849     06BC  120A  118A  2236  120A  118A  	fcall	_lcd_data
   850     06C1                     l1384:
   851                           
   852                           ;LCD_i2c.c: 53:         lcd_data(sec%10+'0');
   853     06C1  300A               	movlw	10
   854     06C2  00F0               	movwf	___awmod@divisor
   855     06C3  3000               	movlw	0
   856     06C4  00F1               	movwf	___awmod@divisor+1
   857     06C5  1283               	bcf	3,5	;RP0=0, select bank0
   858     06C6  1303               	bcf	3,6	;RP1=0, select bank0
   859     06C7  082B               	movf	_sec+1,w
   860     06C8  00F3               	movwf	___awmod@dividend+1
   861     06C9  082A               	movf	_sec,w
   862     06CA  00F2               	movwf	___awmod@dividend
   863     06CB  120A  118A  2361  120A  118A  	fcall	___awmod
   864     06D0  0870               	movf	?___awmod,w
   865     06D1  3E30               	addlw	48
   866     06D2  120A  118A  2236  120A  118A  	fcall	_lcd_data
   867     06D7                     l1386:
   868                           
   869                           ;LCD_i2c.c: 54:         if(!(dec2bcd(hour)&0x20))
   870     06D7  087D               	movf	_hour+1,w
   871     06D8  00F9               	movwf	dec2bcd@temp+1
   872     06D9  087C               	movf	_hour,w
   873     06DA  00F8               	movwf	dec2bcd@temp
   874     06DB  120A  118A  22E2  120A  118A  	fcall	_dec2bcd
   875     06E0  1AF8               	btfsc	?_dec2bcd,5
   876     06E1  2EE3               	goto	u641
   877     06E2  2EE4               	goto	u640
   878     06E3                     u641:
   879     06E3  2EEB               	goto	l1390
   880     06E4                     u640:
   881     06E4                     l1388:
   882                           
   883                           ;LCD_i2c.c: 55:             LCD_Write_String(" AM");
   884     06E4  302E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   885     06E5  120A  118A  2273  120A  118A  	fcall	_LCD_Write_String
   886     06EA  2EF1               	goto	l87
   887     06EB                     l1390:
   888                           
   889                           ;LCD_i2c.c: 57:             LCD_Write_String(" PM");
   890     06EB  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   891     06EC  120A  118A  2273  120A  118A  	fcall	_LCD_Write_String
   892     06F1                     l87:
   893                           
   894                           ;LCD_i2c.c: 58:         LCD_Set_Cursor(2, 1);
   895     06F1  01F6               	clrf	LCD_Set_Cursor@COL
   896     06F2  0AF6               	incf	LCD_Set_Cursor@COL,f
   897     06F3  3002               	movlw	2
   898     06F4  120A  118A  2253  120A  118A  	fcall	_LCD_Set_Cursor
   899                           
   900                           ;LCD_i2c.c: 59:         LCD_Write_String("DAT:");
   901     06F9  3006               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   902     06FA  120A  118A  2273  120A  118A  	fcall	_LCD_Write_String
   903     06FF                     l1392:
   904                           
   905                           ;LCD_i2c.c: 60:         lcd_data(date/10+'0');
   906     06FF  300A               	movlw	10
   907     0700  00F0               	movwf	___awdiv@divisor
   908     0701  3000               	movlw	0
   909     0702  00F1               	movwf	___awdiv@divisor+1
   910     0703  1283               	bcf	3,5	;RP0=0, select bank0
   911     0704  1303               	bcf	3,6	;RP1=0, select bank0
   912     0705  0827               	movf	_date+1,w
   913     0706  00F3               	movwf	___awdiv@dividend+1
   914     0707  0826               	movf	_date,w
   915     0708  00F2               	movwf	___awdiv@dividend
   916     0709  120A  118A  23BA  120A  118A  	fcall	___awdiv
   917     070E  0870               	movf	?___awdiv,w
   918     070F  3E30               	addlw	48
   919     0710  120A  118A  2236  120A  118A  	fcall	_lcd_data
   920     0715                     l1394:
   921                           
   922                           ;LCD_i2c.c: 61:         lcd_data(date%10+'0');
   923     0715  300A               	movlw	10
   924     0716  00F0               	movwf	___awmod@divisor
   925     0717  3000               	movlw	0
   926     0718  00F1               	movwf	___awmod@divisor+1
   927     0719  1283               	bcf	3,5	;RP0=0, select bank0
   928     071A  1303               	bcf	3,6	;RP1=0, select bank0
   929     071B  0827               	movf	_date+1,w
   930     071C  00F3               	movwf	___awmod@dividend+1
   931     071D  0826               	movf	_date,w
   932     071E  00F2               	movwf	___awmod@dividend
   933     071F  120A  118A  2361  120A  118A  	fcall	___awmod
   934     0724  0870               	movf	?___awmod,w
   935     0725  3E30               	addlw	48
   936     0726  120A  118A  2236  120A  118A  	fcall	_lcd_data
   937     072B                     l1396:
   938                           
   939                           ;LCD_i2c.c: 62:         lcd_data('-');
   940     072B  302D               	movlw	45
   941     072C  120A  118A  2236  120A  118A  	fcall	_lcd_data
   942     0731                     l1398:
   943                           
   944                           ;LCD_i2c.c: 63:         lcd_data(month/10+'0');
   945     0731  300A               	movlw	10
   946     0732  00F0               	movwf	___awdiv@divisor
   947     0733  3000               	movlw	0
   948     0734  00F1               	movwf	___awdiv@divisor+1
   949     0735  1283               	bcf	3,5	;RP0=0, select bank0
   950     0736  1303               	bcf	3,6	;RP1=0, select bank0
   951     0737  0825               	movf	_month+1,w
   952     0738  00F3               	movwf	___awdiv@dividend+1
   953     0739  0824               	movf	_month,w
   954     073A  00F2               	movwf	___awdiv@dividend
   955     073B  120A  118A  23BA  120A  118A  	fcall	___awdiv
   956     0740  0870               	movf	?___awdiv,w
   957     0741  3E30               	addlw	48
   958     0742  120A  118A  2236  120A  118A  	fcall	_lcd_data
   959     0747                     l1400:
   960                           
   961                           ;LCD_i2c.c: 64:         lcd_data(month%10+'0');
   962     0747  300A               	movlw	10
   963     0748  00F0               	movwf	___awmod@divisor
   964     0749  3000               	movlw	0
   965     074A  00F1               	movwf	___awmod@divisor+1
   966     074B  1283               	bcf	3,5	;RP0=0, select bank0
   967     074C  1303               	bcf	3,6	;RP1=0, select bank0
   968     074D  0825               	movf	_month+1,w
   969     074E  00F3               	movwf	___awmod@dividend+1
   970     074F  0824               	movf	_month,w
   971     0750  00F2               	movwf	___awmod@dividend
   972     0751  120A  118A  2361  120A  118A  	fcall	___awmod
   973     0756  0870               	movf	?___awmod,w
   974     0757  3E30               	addlw	48
   975     0758  120A  118A  2236  120A  118A  	fcall	_lcd_data
   976     075D                     l1402:
   977                           
   978                           ;LCD_i2c.c: 65:         lcd_data('-');
   979     075D  302D               	movlw	45
   980     075E  120A  118A  2236  120A  118A  	fcall	_lcd_data
   981     0763                     l1404:
   982                           
   983                           ;LCD_i2c.c: 66:         lcd_data(year/10+'0');
   984     0763  300A               	movlw	10
   985     0764  00F0               	movwf	___awdiv@divisor
   986     0765  3000               	movlw	0
   987     0766  00F1               	movwf	___awdiv@divisor+1
   988     0767  1283               	bcf	3,5	;RP0=0, select bank0
   989     0768  1303               	bcf	3,6	;RP1=0, select bank0
   990     0769  0821               	movf	_year+1,w
   991     076A  00F3               	movwf	___awdiv@dividend+1
   992     076B  0820               	movf	_year,w
   993     076C  00F2               	movwf	___awdiv@dividend
   994     076D  120A  118A  23BA  120A  118A  	fcall	___awdiv
   995     0772  0870               	movf	?___awdiv,w
   996     0773  3E30               	addlw	48
   997     0774  120A  118A  2236  120A  118A  	fcall	_lcd_data
   998     0779                     l1406:
   999                           
  1000                           ;LCD_i2c.c: 67:         lcd_data(year%10+'0');
  1001     0779  300A               	movlw	10
  1002     077A  00F0               	movwf	___awmod@divisor
  1003     077B  3000               	movlw	0
  1004     077C  00F1               	movwf	___awmod@divisor+1
  1005     077D  1283               	bcf	3,5	;RP0=0, select bank0
  1006     077E  1303               	bcf	3,6	;RP1=0, select bank0
  1007     077F  0821               	movf	_year+1,w
  1008     0780  00F3               	movwf	___awmod@dividend+1
  1009     0781  0820               	movf	_year,w
  1010     0782  00F2               	movwf	___awmod@dividend
  1011     0783  120A  118A  2361  120A  118A  	fcall	___awmod
  1012     0788  0870               	movf	?___awmod,w
  1013     0789  3E30               	addlw	48
  1014     078A  120A  118A  2236  120A  118A  	fcall	_lcd_data
  1015     078F                     l1408:
  1016                           
  1017                           ;LCD_i2c.c: 68:         if(dec2bcd(hour)&0x52) {
  1018     078F  087D               	movf	_hour+1,w
  1019     0790  00F9               	movwf	dec2bcd@temp+1
  1020     0791  087C               	movf	_hour,w
  1021     0792  00F8               	movwf	dec2bcd@temp
  1022     0793  120A  118A  22E2  120A  118A  	fcall	_dec2bcd
  1023     0798  3052               	movlw	82
  1024     0799  0578               	andwf	?_dec2bcd,w
  1025     079A  1283               	bcf	3,5	;RP0=0, select bank0
  1026     079B  1303               	bcf	3,6	;RP1=0, select bank0
  1027     079C  00B1               	movwf	??_main
  1028     079D  3000               	movlw	0
  1029     079E  0579               	andwf	?_dec2bcd+1,w
  1030     079F  00B2               	movwf	??_main+1
  1031     07A0  0831               	movf	??_main,w
  1032     07A1  0432               	iorwf	??_main+1,w
  1033     07A2  1903               	btfsc	3,2
  1034     07A3  2FA5               	goto	u651
  1035     07A4  2FA6               	goto	u650
  1036     07A5                     u651:
  1037     07A5  2FBF               	goto	l1416
  1038     07A6                     u650:
  1039     07A6                     l1410:
  1040                           
  1041                           ;LCD_i2c.c: 69:             day++;
  1042     07A6  3001               	movlw	1
  1043     07A7  07A2               	addwf	_day,f
  1044     07A8  1803               	skipnc
  1045     07A9  0AA3               	incf	_day+1,f
  1046     07AA  3000               	movlw	0
  1047     07AB  07A3               	addwf	_day+1,f
  1048     07AC                     l1412:
  1049                           
  1050                           ;LCD_i2c.c: 70:             if(day>7)
  1051     07AC  0823               	movf	_day+1,w
  1052     07AD  3A80               	xorlw	128
  1053     07AE  00FF               	movwf	btemp+1
  1054     07AF  3080               	movlw	128
  1055     07B0  027F               	subwf	btemp+1,w
  1056     07B1  1D03               	skipz
  1057     07B2  2FB5               	goto	u665
  1058     07B3  3008               	movlw	8
  1059     07B4  0222               	subwf	_day,w
  1060     07B5                     u665:
  1061     07B5  1C03               	skipc
  1062     07B6  2FB8               	goto	u661
  1063     07B7  2FB9               	goto	u660
  1064     07B8                     u661:
  1065     07B8  2FBF               	goto	l1416
  1066     07B9                     u660:
  1067     07B9                     l1414:
  1068                           
  1069                           ;LCD_i2c.c: 71:                 day=1;
  1070     07B9  3001               	movlw	1
  1071     07BA  1283               	bcf	3,5	;RP0=0, select bank0
  1072     07BB  1303               	bcf	3,6	;RP1=0, select bank0
  1073     07BC  00A2               	movwf	_day
  1074     07BD  3000               	movlw	0
  1075     07BE  00A3               	movwf	_day+1
  1076     07BF                     l1416:
  1077                           
  1078                           ;LCD_i2c.c: 73:         days(day);
  1079     07BF  1283               	bcf	3,5	;RP0=0, select bank0
  1080     07C0  1303               	bcf	3,6	;RP1=0, select bank0
  1081     07C1  0823               	movf	_day+1,w
  1082     07C2  00FA               	movwf	days@day+1
  1083     07C3  0822               	movf	_day,w
  1084     07C4  00F9               	movwf	days@day
  1085     07C5  120A  118A  2312  120A  118A  	fcall	_days
  1086     07CA                     l1418:
  1087                           
  1088                           ;LCD_i2c.c: 74:         _delay((unsigned long)((50)*(16000000/4000.0)));
  1089     07CA  3002               	movlw	2
  1090     07CB  1283               	bcf	3,5	;RP0=0, select bank0
  1091     07CC  1303               	bcf	3,6	;RP1=0, select bank0
  1092     07CD  00B3               	movwf	??_main+2
  1093     07CE  3004               	movlw	4
  1094     07CF  00B2               	movwf	??_main+1
  1095     07D0  30B9               	movlw	185
  1096     07D1  00B1               	movwf	??_main
  1097     07D2                     u677:
  1098     07D2  0BB1               	decfsz	??_main,f
  1099     07D3  2FD2               	goto	u677
  1100     07D4  0BB2               	decfsz	??_main+1,f
  1101     07D5  2FD2               	goto	u677
  1102     07D6  0BB3               	decfsz	??_main+2,f
  1103     07D7  2FD2               	goto	u677
  1104     07D8  2FD9               	nop2
  1105     07D9  2E1B               	goto	l85
  1106     07DA  120A  118A  2800   	ljmp	start
  1107     07DD                     __end_of_main:
  1108                           
  1109                           	psect	text1
  1110     0537                     __ptext1:	
  1111 ;; *************** function _update *****************
  1112 ;; Defined at:
  1113 ;;		line 246 in file "LCD_i2c.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;		None
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;		None
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0, pclath, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1127 ;;      Params:         0       0       0       0       0
  1128 ;;      Locals:         0       0       0       0       0
  1129 ;;      Temps:          2       0       0       0       0
  1130 ;;      Totals:         2       0       0       0       0
  1131 ;;Total ram usage:        2 bytes
  1132 ;; Hardware stack levels used: 1
  1133 ;; Hardware stack levels required when called: 2
  1134 ;; This function calls:
  1135 ;;		_I2C_Master_Start
  1136 ;;		_I2C_Master_Stop
  1137 ;;		_I2C_Master_Write
  1138 ;;		_I2C_Read_Byte
  1139 ;;		_bcd2dec
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145     0537                     _update:	
  1146                           ;psect for function _update
  1147                           
  1148     0537                     l1320:	
  1149                           ;incstack = 0
  1150                           ; Regs used in _update: [wreg+status,2+status,0+pclath+cstack]
  1151                           
  1152                           
  1153                           ;LCD_i2c.c: 247:     I2C_Master_Start();
  1154     0537  120A  118A  216C  120A  118A  	fcall	_I2C_Master_Start
  1155                           
  1156                           ;LCD_i2c.c: 248:     I2C_Master_Write(0xD0);
  1157     053C  30D0               	movlw	208
  1158     053D  120A  118A  2197  120A  118A  	fcall	_I2C_Master_Write
  1159                           
  1160                           ;LCD_i2c.c: 249:     I2C_Master_Write(0x00);
  1161     0542  3000               	movlw	0
  1162     0543  120A  118A  2197  120A  118A  	fcall	_I2C_Master_Write
  1163                           
  1164                           ;LCD_i2c.c: 250:     I2C_Master_Stop();
  1165     0548  120A  118A  2175  120A  118A  	fcall	_I2C_Master_Stop
  1166                           
  1167                           ;LCD_i2c.c: 251:     I2C_Master_Start();
  1168     054D  120A  118A  216C  120A  118A  	fcall	_I2C_Master_Start
  1169                           
  1170                           ;LCD_i2c.c: 252:     I2C_Master_Write(0xD1);
  1171     0552  30D1               	movlw	209
  1172     0553  120A  118A  2197  120A  118A  	fcall	_I2C_Master_Write
  1173                           
  1174                           ;LCD_i2c.c: 253:     sec = bcd2dec(I2C_Read_Byte());
  1175     0558  120A  118A  21CE  120A  118A  	fcall	_I2C_Read_Byte
  1176     055D  00FA               	movwf	??_update
  1177     055E  01FB               	clrf	??_update+1
  1178     055F  087A               	movf	??_update,w
  1179     0560  00F6               	movwf	bcd2dec@temp
  1180     0561  087B               	movf	??_update+1,w
  1181     0562  00F7               	movwf	bcd2dec@temp+1
  1182     0563  120A  118A  22BD  120A  118A  	fcall	_bcd2dec
  1183     0568  0877               	movf	?_bcd2dec+1,w
  1184     0569  1283               	bcf	3,5	;RP0=0, select bank0
  1185     056A  1303               	bcf	3,6	;RP1=0, select bank0
  1186     056B  00AB               	movwf	_sec+1
  1187     056C  0876               	movf	?_bcd2dec,w
  1188     056D  00AA               	movwf	_sec
  1189                           
  1190                           ;LCD_i2c.c: 254:     min = bcd2dec(I2C_Read_Byte());
  1191     056E  120A  118A  21CE  120A  118A  	fcall	_I2C_Read_Byte
  1192     0573  00FA               	movwf	??_update
  1193     0574  01FB               	clrf	??_update+1
  1194     0575  087A               	movf	??_update,w
  1195     0576  00F6               	movwf	bcd2dec@temp
  1196     0577  087B               	movf	??_update+1,w
  1197     0578  00F7               	movwf	bcd2dec@temp+1
  1198     0579  120A  118A  22BD  120A  118A  	fcall	_bcd2dec
  1199     057E  0877               	movf	?_bcd2dec+1,w
  1200     057F  1283               	bcf	3,5	;RP0=0, select bank0
  1201     0580  1303               	bcf	3,6	;RP1=0, select bank0
  1202     0581  00A9               	movwf	_min+1
  1203     0582  0876               	movf	?_bcd2dec,w
  1204     0583  00A8               	movwf	_min
  1205                           
  1206                           ;LCD_i2c.c: 255:     hour = bcd2dec(I2C_Read_Byte());
  1207     0584  120A  118A  21CE  120A  118A  	fcall	_I2C_Read_Byte
  1208     0589  00FA               	movwf	??_update
  1209     058A  01FB               	clrf	??_update+1
  1210     058B  087A               	movf	??_update,w
  1211     058C  00F6               	movwf	bcd2dec@temp
  1212     058D  087B               	movf	??_update+1,w
  1213     058E  00F7               	movwf	bcd2dec@temp+1
  1214     058F  120A  118A  22BD  120A  118A  	fcall	_bcd2dec
  1215     0594  0877               	movf	?_bcd2dec+1,w
  1216     0595  00FD               	movwf	_hour+1
  1217     0596  0876               	movf	?_bcd2dec,w
  1218     0597  00FC               	movwf	_hour
  1219                           
  1220                           ;LCD_i2c.c: 256:     day = bcd2dec(I2C_Read_Byte());
  1221     0598  120A  118A  21CE  120A  118A  	fcall	_I2C_Read_Byte
  1222     059D  00FA               	movwf	??_update
  1223     059E  01FB               	clrf	??_update+1
  1224     059F  087A               	movf	??_update,w
  1225     05A0  00F6               	movwf	bcd2dec@temp
  1226     05A1  087B               	movf	??_update+1,w
  1227     05A2  00F7               	movwf	bcd2dec@temp+1
  1228     05A3  120A  118A  22BD  120A  118A  	fcall	_bcd2dec
  1229     05A8  0877               	movf	?_bcd2dec+1,w
  1230     05A9  1283               	bcf	3,5	;RP0=0, select bank0
  1231     05AA  1303               	bcf	3,6	;RP1=0, select bank0
  1232     05AB  00A3               	movwf	_day+1
  1233     05AC  0876               	movf	?_bcd2dec,w
  1234     05AD  00A2               	movwf	_day
  1235                           
  1236                           ;LCD_i2c.c: 257:     date = bcd2dec(I2C_Read_Byte());
  1237     05AE  120A  118A  21CE  120A  118A  	fcall	_I2C_Read_Byte
  1238     05B3  00FA               	movwf	??_update
  1239     05B4  01FB               	clrf	??_update+1
  1240     05B5  087A               	movf	??_update,w
  1241     05B6  00F6               	movwf	bcd2dec@temp
  1242     05B7  087B               	movf	??_update+1,w
  1243     05B8  00F7               	movwf	bcd2dec@temp+1
  1244     05B9  120A  118A  22BD  120A  118A  	fcall	_bcd2dec
  1245     05BE  0877               	movf	?_bcd2dec+1,w
  1246     05BF  1283               	bcf	3,5	;RP0=0, select bank0
  1247     05C0  1303               	bcf	3,6	;RP1=0, select bank0
  1248     05C1  00A7               	movwf	_date+1
  1249     05C2  0876               	movf	?_bcd2dec,w
  1250     05C3  00A6               	movwf	_date
  1251                           
  1252                           ;LCD_i2c.c: 258:     month = bcd2dec(I2C_Read_Byte());
  1253     05C4  120A  118A  21CE  120A  118A  	fcall	_I2C_Read_Byte
  1254     05C9  00FA               	movwf	??_update
  1255     05CA  01FB               	clrf	??_update+1
  1256     05CB  087A               	movf	??_update,w
  1257     05CC  00F6               	movwf	bcd2dec@temp
  1258     05CD  087B               	movf	??_update+1,w
  1259     05CE  00F7               	movwf	bcd2dec@temp+1
  1260     05CF  120A  118A  22BD  120A  118A  	fcall	_bcd2dec
  1261     05D4  0877               	movf	?_bcd2dec+1,w
  1262     05D5  1283               	bcf	3,5	;RP0=0, select bank0
  1263     05D6  1303               	bcf	3,6	;RP1=0, select bank0
  1264     05D7  00A5               	movwf	_month+1
  1265     05D8  0876               	movf	?_bcd2dec,w
  1266     05D9  00A4               	movwf	_month
  1267                           
  1268                           ;LCD_i2c.c: 259:     year = bcd2dec(I2C_Read_Byte());
  1269     05DA  120A  118A  21CE  120A  118A  	fcall	_I2C_Read_Byte
  1270     05DF  00FA               	movwf	??_update
  1271     05E0  01FB               	clrf	??_update+1
  1272     05E1  087A               	movf	??_update,w
  1273     05E2  00F6               	movwf	bcd2dec@temp
  1274     05E3  087B               	movf	??_update+1,w
  1275     05E4  00F7               	movwf	bcd2dec@temp+1
  1276     05E5  120A  118A  22BD  120A  118A  	fcall	_bcd2dec
  1277     05EA  0877               	movf	?_bcd2dec+1,w
  1278     05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1279     05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1280     05ED  00A1               	movwf	_year+1
  1281     05EE  0876               	movf	?_bcd2dec,w
  1282     05EF  00A0               	movwf	_year
  1283                           
  1284                           ;LCD_i2c.c: 260:     I2C_Master_Stop();
  1285     05F0  120A  118A  2175  120A  118A  	fcall	_I2C_Master_Stop
  1286                           
  1287                           ;LCD_i2c.c: 261:     I2C_Master_Start();
  1288     05F5  120A  118A  216C  120A  118A  	fcall	_I2C_Master_Start
  1289                           
  1290                           ;LCD_i2c.c: 262:     I2C_Master_Write(0xD1);
  1291     05FA  30D1               	movlw	209
  1292     05FB  120A  118A  2197  120A  118A  	fcall	_I2C_Master_Write
  1293                           
  1294                           ;LCD_i2c.c: 263:     I2C_Read_Byte();
  1295     0600  120A  118A  21CE  120A  118A  	fcall	_I2C_Read_Byte
  1296                           
  1297                           ;LCD_i2c.c: 264:     I2C_Master_Stop();
  1298     0605  120A  118A  2175  120A  118A  	fcall	_I2C_Master_Stop
  1299     060A                     l180:
  1300     060A  0008               	return
  1301     060B                     __end_of_update:
  1302                           
  1303                           	psect	text2
  1304     02BD                     __ptext2:	
  1305 ;; *************** function _bcd2dec *****************
  1306 ;; Defined at:
  1307 ;;		line 228 in file "LCD_i2c.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  temp            2    6[COMMON] int 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  2    6[COMMON] int 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2, status,0, pclath, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1321 ;;      Params:         2       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0
  1323 ;;      Temps:          2       0       0       0       0
  1324 ;;      Totals:         4       0       0       0       0
  1325 ;;Total ram usage:        4 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 1
  1328 ;; This function calls:
  1329 ;;		___wmul
  1330 ;; This function is called by:
  1331 ;;		_update
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335     02BD                     _bcd2dec:	
  1336                           ;psect for function _bcd2dec
  1337                           
  1338     02BD                     l1252:	
  1339                           ;incstack = 0
  1340                           ; Regs used in _bcd2dec: [wreg+status,2+status,0+pclath+cstack]
  1341                           
  1342                           
  1343                           ;LCD_i2c.c: 229:     return ((temp >> 4)*10)+((temp & 0x0F));
  1344     02BD  300F               	movlw	15
  1345     02BE  0576               	andwf	bcd2dec@temp,w
  1346     02BF  00F8               	movwf	??_bcd2dec
  1347     02C0  3000               	movlw	0
  1348     02C1  0577               	andwf	bcd2dec@temp+1,w
  1349     02C2  00F9               	movwf	??_bcd2dec+1
  1350     02C3  0E76               	swapf	bcd2dec@temp,w
  1351     02C4  390F               	andlw	15
  1352     02C5  00F0               	movwf	___wmul@multiplier
  1353     02C6  0E77               	swapf	bcd2dec@temp+1,w
  1354     02C7  39F0               	andlw	240
  1355     02C8  04F0               	iorwf	___wmul@multiplier,f
  1356     02C9  0E77               	swapf	bcd2dec@temp+1,w
  1357     02CA  390F               	andlw	15
  1358     02CB  00F1               	movwf	___wmul@multiplier+1
  1359     02CC  30F0               	movlw	240
  1360     02CD  1DF1               	btfss	___wmul@multiplier+1,3
  1361     02CE  3000               	movlw	0
  1362     02CF  04F1               	iorwf	___wmul@multiplier+1,f
  1363     02D0  300A               	movlw	10
  1364     02D1  00F2               	movwf	___wmul@multiplicand
  1365     02D2  3000               	movlw	0
  1366     02D3  00F3               	movwf	___wmul@multiplicand+1
  1367     02D4  120A  118A  2298  120A  118A  	fcall	___wmul
  1368     02D9  0878               	movf	??_bcd2dec,w
  1369     02DA  0770               	addwf	?___wmul,w
  1370     02DB  00F6               	movwf	?_bcd2dec
  1371     02DC  0879               	movf	??_bcd2dec+1,w
  1372     02DD  1803               	skipnc
  1373     02DE  0A79               	incf	??_bcd2dec+1,w
  1374     02DF  0771               	addwf	?___wmul+1,w
  1375     02E0  00F7               	movwf	?_bcd2dec+1
  1376     02E1                     l174:
  1377     02E1  0008               	return
  1378     02E2                     __end_of_bcd2dec:
  1379                           
  1380                           	psect	text3
  1381     0298                     __ptext3:	
  1382 ;; *************** function ___wmul *****************
  1383 ;; Defined at:
  1384 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;  multiplier      2    0[COMMON] unsigned int 
  1387 ;;  multiplicand    2    2[COMMON] unsigned int 
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  product         2    4[COMMON] unsigned int 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  2    0[COMMON] unsigned int 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, status,0
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1399 ;;      Params:         4       0       0       0       0
  1400 ;;      Locals:         2       0       0       0       0
  1401 ;;      Temps:          0       0       0       0       0
  1402 ;;      Totals:         6       0       0       0       0
  1403 ;;Total ram usage:        6 bytes
  1404 ;; Hardware stack levels used: 1
  1405 ;; This function calls:
  1406 ;;		Nothing
  1407 ;; This function is called by:
  1408 ;;		_bcd2dec
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412     0298                     ___wmul:	
  1413                           ;psect for function ___wmul
  1414                           
  1415     0298                     l1128:	
  1416                           ;incstack = 0
  1417                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1418                           
  1419     0298  01F4               	clrf	___wmul@product
  1420     0299  01F5               	clrf	___wmul@product+1
  1421     029A                     l1130:
  1422     029A  1C70               	btfss	___wmul@multiplier,0
  1423     029B  2A9D               	goto	u381
  1424     029C  2A9E               	goto	u380
  1425     029D                     u381:
  1426     029D  2AA4               	goto	l266
  1427     029E                     u380:
  1428     029E                     l1132:
  1429     029E  0872               	movf	___wmul@multiplicand,w
  1430     029F  07F4               	addwf	___wmul@product,f
  1431     02A0  1803               	skipnc
  1432     02A1  0AF5               	incf	___wmul@product+1,f
  1433     02A2  0873               	movf	___wmul@multiplicand+1,w
  1434     02A3  07F5               	addwf	___wmul@product+1,f
  1435     02A4                     l266:
  1436     02A4  3001               	movlw	1
  1437     02A5                     u395:
  1438     02A5  1003               	clrc
  1439     02A6  0DF2               	rlf	___wmul@multiplicand,f
  1440     02A7  0DF3               	rlf	___wmul@multiplicand+1,f
  1441     02A8  3EFF               	addlw	-1
  1442     02A9  1D03               	skipz
  1443     02AA  2AA5               	goto	u395
  1444     02AB                     l1134:
  1445     02AB  3001               	movlw	1
  1446     02AC                     u405:
  1447     02AC  1003               	clrc
  1448     02AD  0CF1               	rrf	___wmul@multiplier+1,f
  1449     02AE  0CF0               	rrf	___wmul@multiplier,f
  1450     02AF  3EFF               	addlw	-1
  1451     02B0  1D03               	skipz
  1452     02B1  2AAC               	goto	u405
  1453     02B2                     l1136:
  1454     02B2  0870               	movf	___wmul@multiplier,w
  1455     02B3  0471               	iorwf	___wmul@multiplier+1,w
  1456     02B4  1D03               	btfss	3,2
  1457     02B5  2AB7               	goto	u411
  1458     02B6  2AB8               	goto	u410
  1459     02B7                     u411:
  1460     02B7  2A9A               	goto	l1130
  1461     02B8                     u410:
  1462     02B8                     l1138:
  1463     02B8  0875               	movf	___wmul@product+1,w
  1464     02B9  00F1               	movwf	?___wmul+1
  1465     02BA  0874               	movf	___wmul@product,w
  1466     02BB  00F0               	movwf	?___wmul
  1467     02BC                     l268:
  1468     02BC  0008               	return
  1469     02BD                     __end_of___wmul:
  1470                           
  1471                           	psect	text4
  1472     01CE                     __ptext4:	
  1473 ;; *************** function _I2C_Read_Byte *****************
  1474 ;; Defined at:
  1475 ;;		line 128 in file "LCD_i2c.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;		None
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      unsigned char 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0, pclath, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1489 ;;      Params:         0       0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0
  1491 ;;      Temps:          0       0       0       0       0
  1492 ;;      Totals:         0       0       0       0       0
  1493 ;;Total ram usage:        0 bytes
  1494 ;; Hardware stack levels used: 1
  1495 ;; Hardware stack levels required when called: 1
  1496 ;; This function calls:
  1497 ;;		_I2C_Master_Wait
  1498 ;; This function is called by:
  1499 ;;		_update
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503     01CE                     _I2C_Read_Byte:	
  1504                           ;psect for function _I2C_Read_Byte
  1505                           
  1506     01CE                     l1236:	
  1507                           ;incstack = 0
  1508                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  1509                           
  1510                           
  1511                           ;LCD_i2c.c: 129:     I2C_Master_Wait();
  1512     01CE  120A  118A  218A  120A  118A  	fcall	_I2C_Master_Wait
  1513     01D3                     l1238:
  1514                           
  1515                           ;LCD_i2c.c: 130:     RCEN = 1;
  1516     01D3  1683               	bsf	3,5	;RP0=1, select bank1
  1517     01D4  1303               	bcf	3,6	;RP1=0, select bank1
  1518     01D5  1591               	bsf	17,3	;volatile
  1519     01D6                     l125:	
  1520                           ;LCD_i2c.c: 131:     while (!SSPIF);
  1521                           
  1522     01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1523     01D7  1D8C               	btfss	12,3	;volatile
  1524     01D8  29DA               	goto	u621
  1525     01D9  29DB               	goto	u620
  1526     01DA                     u621:
  1527     01DA  29D6               	goto	l125
  1528     01DB                     u620:
  1529     01DB                     l127:
  1530                           
  1531                           ;LCD_i2c.c: 132:     SSPIF = 0;
  1532     01DB  118C               	bcf	12,3	;volatile
  1533     01DC                     l1240:
  1534                           
  1535                           ;LCD_i2c.c: 133:     I2C_Master_Wait();
  1536     01DC  120A  118A  218A  120A  118A  	fcall	_I2C_Master_Wait
  1537     01E1                     l1242:
  1538                           
  1539                           ;LCD_i2c.c: 134:     return SSPBUF;
  1540     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1541     01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1542     01E3  0813               	movf	19,w	;volatile
  1543     01E4                     l128:
  1544     01E4  0008               	return
  1545     01E5                     __end_of_I2C_Read_Byte:
  1546                           
  1547                           	psect	text5
  1548     04AA                     __ptext5:	
  1549 ;; *************** function _setup *****************
  1550 ;; Defined at:
  1551 ;;		line 232 in file "LCD_i2c.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;		None
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;		None
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1565 ;;      Params:         0       0       0       0       0
  1566 ;;      Locals:         0       0       0       0       0
  1567 ;;      Temps:          0       0       0       0       0
  1568 ;;      Totals:         0       0       0       0       0
  1569 ;;Total ram usage:        0 bytes
  1570 ;; Hardware stack levels used: 1
  1571 ;; Hardware stack levels required when called: 2
  1572 ;; This function calls:
  1573 ;;		_I2C_Master_Start
  1574 ;;		_I2C_Master_Stop
  1575 ;;		_I2C_Master_Write
  1576 ;;		_dec2bcd
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582     04AA                     _setup:	
  1583                           ;psect for function _setup
  1584                           
  1585     04AA                     l1302:	
  1586                           ;incstack = 0
  1587                           ; Regs used in _setup: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1588                           
  1589                           
  1590                           ;LCD_i2c.c: 233:     I2C_Master_Start();
  1591     04AA  120A  118A  216C  120A  118A  	fcall	_I2C_Master_Start
  1592                           
  1593                           ;LCD_i2c.c: 234:     I2C_Master_Write(0xD0);
  1594     04AF  30D0               	movlw	208
  1595     04B0  120A  118A  2197  120A  118A  	fcall	_I2C_Master_Write
  1596                           
  1597                           ;LCD_i2c.c: 235:     I2C_Master_Write(0x00);
  1598     04B5  3000               	movlw	0
  1599     04B6  120A  118A  2197  120A  118A  	fcall	_I2C_Master_Write
  1600     04BB                     l1304:
  1601                           
  1602                           ;LCD_i2c.c: 236:     I2C_Master_Write(dec2bcd(sec));
  1603     04BB  1283               	bcf	3,5	;RP0=0, select bank0
  1604     04BC  1303               	bcf	3,6	;RP1=0, select bank0
  1605     04BD  082B               	movf	_sec+1,w
  1606     04BE  00F9               	movwf	dec2bcd@temp+1
  1607     04BF  082A               	movf	_sec,w
  1608     04C0  00F8               	movwf	dec2bcd@temp
  1609     04C1  120A  118A  22E2  120A  118A  	fcall	_dec2bcd
  1610     04C6  0878               	movf	?_dec2bcd,w
  1611     04C7  120A  118A  2197  120A  118A  	fcall	_I2C_Master_Write
  1612     04CC                     l1306:
  1613                           
  1614                           ;LCD_i2c.c: 237:     I2C_Master_Write(dec2bcd(min));
  1615     04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1616     04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1617     04CE  0829               	movf	_min+1,w
  1618     04CF  00F9               	movwf	dec2bcd@temp+1
  1619     04D0  0828               	movf	_min,w
  1620     04D1  00F8               	movwf	dec2bcd@temp
  1621     04D2  120A  118A  22E2  120A  118A  	fcall	_dec2bcd
  1622     04D7  0878               	movf	?_dec2bcd,w
  1623     04D8  120A  118A  2197  120A  118A  	fcall	_I2C_Master_Write
  1624     04DD                     l1308:
  1625                           
  1626                           ;LCD_i2c.c: 238:     I2C_Master_Write(dec2bcd(hour) | 0x60);
  1627     04DD  087D               	movf	_hour+1,w
  1628     04DE  00F9               	movwf	dec2bcd@temp+1
  1629     04DF  087C               	movf	_hour,w
  1630     04E0  00F8               	movwf	dec2bcd@temp
  1631     04E1  120A  118A  22E2  120A  118A  	fcall	_dec2bcd
  1632     04E6  0878               	movf	?_dec2bcd,w
  1633     04E7  3860               	iorlw	96
  1634     04E8  120A  118A  2197  120A  118A  	fcall	_I2C_Master_Write
  1635     04ED                     l1310:
  1636                           
  1637                           ;LCD_i2c.c: 239:     I2C_Master_Write(dec2bcd(day));
  1638     04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1639     04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1640     04EF  0823               	movf	_day+1,w
  1641     04F0  00F9               	movwf	dec2bcd@temp+1
  1642     04F1  0822               	movf	_day,w
  1643     04F2  00F8               	movwf	dec2bcd@temp
  1644     04F3  120A  118A  22E2  120A  118A  	fcall	_dec2bcd
  1645     04F8  0878               	movf	?_dec2bcd,w
  1646     04F9  120A  118A  2197  120A  118A  	fcall	_I2C_Master_Write
  1647     04FE                     l1312:
  1648                           
  1649                           ;LCD_i2c.c: 240:     I2C_Master_Write(dec2bcd(date));
  1650     04FE  1283               	bcf	3,5	;RP0=0, select bank0
  1651     04FF  1303               	bcf	3,6	;RP1=0, select bank0
  1652     0500  0827               	movf	_date+1,w
  1653     0501  00F9               	movwf	dec2bcd@temp+1
  1654     0502  0826               	movf	_date,w
  1655     0503  00F8               	movwf	dec2bcd@temp
  1656     0504  120A  118A  22E2  120A  118A  	fcall	_dec2bcd
  1657     0509  0878               	movf	?_dec2bcd,w
  1658     050A  120A  118A  2197  120A  118A  	fcall	_I2C_Master_Write
  1659     050F                     l1314:
  1660                           
  1661                           ;LCD_i2c.c: 241:     I2C_Master_Write(dec2bcd(month));
  1662     050F  1283               	bcf	3,5	;RP0=0, select bank0
  1663     0510  1303               	bcf	3,6	;RP1=0, select bank0
  1664     0511  0825               	movf	_month+1,w
  1665     0512  00F9               	movwf	dec2bcd@temp+1
  1666     0513  0824               	movf	_month,w
  1667     0514  00F8               	movwf	dec2bcd@temp
  1668     0515  120A  118A  22E2  120A  118A  	fcall	_dec2bcd
  1669     051A  0878               	movf	?_dec2bcd,w
  1670     051B  120A  118A  2197  120A  118A  	fcall	_I2C_Master_Write
  1671     0520                     l1316:
  1672                           
  1673                           ;LCD_i2c.c: 242:     I2C_Master_Write(dec2bcd(year));
  1674     0520  1283               	bcf	3,5	;RP0=0, select bank0
  1675     0521  1303               	bcf	3,6	;RP1=0, select bank0
  1676     0522  0821               	movf	_year+1,w
  1677     0523  00F9               	movwf	dec2bcd@temp+1
  1678     0524  0820               	movf	_year,w
  1679     0525  00F8               	movwf	dec2bcd@temp
  1680     0526  120A  118A  22E2  120A  118A  	fcall	_dec2bcd
  1681     052B  0878               	movf	?_dec2bcd,w
  1682     052C  120A  118A  2197  120A  118A  	fcall	_I2C_Master_Write
  1683     0531                     l1318:
  1684                           
  1685                           ;LCD_i2c.c: 243:     I2C_Master_Stop();
  1686     0531  120A  118A  2175  120A  118A  	fcall	_I2C_Master_Stop
  1687     0536                     l177:
  1688     0536  0008               	return
  1689     0537                     __end_of_setup:
  1690                           
  1691                           	psect	text6
  1692     02E2                     __ptext6:	
  1693 ;; *************** function _dec2bcd *****************
  1694 ;; Defined at:
  1695 ;;		line 224 in file "LCD_i2c.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  temp            2    8[COMMON] int 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;		None
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  2    8[COMMON] int 
  1702 ;; Registers used:
  1703 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1709 ;;      Params:         2       0       0       0       0
  1710 ;;      Locals:         0       0       0       0       0
  1711 ;;      Temps:          2       0       0       0       0
  1712 ;;      Totals:         4       0       0       0       0
  1713 ;;Total ram usage:        4 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; Hardware stack levels required when called: 1
  1716 ;; This function calls:
  1717 ;;		___awdiv
  1718 ;;		___awmod
  1719 ;; This function is called by:
  1720 ;;		_main
  1721 ;;		_setup
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725     02E2                     _dec2bcd:	
  1726                           ;psect for function _dec2bcd
  1727                           
  1728     02E2                     l1224:	
  1729                           ;incstack = 0
  1730                           ; Regs used in _dec2bcd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1731                           
  1732                           
  1733                           ;LCD_i2c.c: 225:     return ((temp / 10) << 4)+((temp % 10));
  1734     02E2  300A               	movlw	10
  1735     02E3  00F0               	movwf	___awdiv@divisor
  1736     02E4  3000               	movlw	0
  1737     02E5  00F1               	movwf	___awdiv@divisor+1
  1738     02E6  0879               	movf	dec2bcd@temp+1,w
  1739     02E7  00F3               	movwf	___awdiv@dividend+1
  1740     02E8  0878               	movf	dec2bcd@temp,w
  1741     02E9  00F2               	movwf	___awdiv@dividend
  1742     02EA  120A  118A  23BA  120A  118A  	fcall	___awdiv
  1743     02EF  0870               	movf	?___awdiv,w
  1744     02F0  00FA               	movwf	??_dec2bcd
  1745     02F1  0871               	movf	?___awdiv+1,w
  1746     02F2  00FB               	movwf	??_dec2bcd+1
  1747     02F3  0EFA               	swapf	??_dec2bcd,f
  1748     02F4  0EFB               	swapf	??_dec2bcd+1,f
  1749     02F5  30F0               	movlw	240
  1750     02F6  05FB               	andwf	??_dec2bcd+1,f
  1751     02F7  087A               	movf	??_dec2bcd,w
  1752     02F8  390F               	andlw	15
  1753     02F9  04FB               	iorwf	??_dec2bcd+1,f
  1754     02FA  30F0               	movlw	240
  1755     02FB  05FA               	andwf	??_dec2bcd,f
  1756     02FC  300A               	movlw	10
  1757     02FD  00F0               	movwf	___awmod@divisor
  1758     02FE  3000               	movlw	0
  1759     02FF  00F1               	movwf	___awmod@divisor+1
  1760     0300  0879               	movf	dec2bcd@temp+1,w
  1761     0301  00F3               	movwf	___awmod@dividend+1
  1762     0302  0878               	movf	dec2bcd@temp,w
  1763     0303  00F2               	movwf	___awmod@dividend
  1764     0304  120A  118A  2361  120A  118A  	fcall	___awmod
  1765     0309  0870               	movf	?___awmod,w
  1766     030A  077A               	addwf	??_dec2bcd,w
  1767     030B  00F8               	movwf	?_dec2bcd
  1768     030C  0871               	movf	?___awmod+1,w
  1769     030D  1803               	skipnc
  1770     030E  0A71               	incf	?___awmod+1,w
  1771     030F  077B               	addwf	??_dec2bcd+1,w
  1772     0310  00F9               	movwf	?_dec2bcd+1
  1773     0311                     l171:
  1774     0311  0008               	return
  1775     0312                     __end_of_dec2bcd:
  1776                           
  1777                           	psect	text7
  1778     0361                     __ptext7:	
  1779 ;; *************** function ___awmod *****************
  1780 ;; Defined at:
  1781 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  divisor         2    0[COMMON] int 
  1784 ;;  dividend        2    2[COMMON] int 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  sign            1    5[COMMON] unsigned char 
  1787 ;;  counter         1    4[COMMON] unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  2    0[COMMON] int 
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0, btemp+1
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1797 ;;      Params:         4       0       0       0       0
  1798 ;;      Locals:         2       0       0       0       0
  1799 ;;      Temps:          0       0       0       0       0
  1800 ;;      Totals:         6       0       0       0       0
  1801 ;;Total ram usage:        6 bytes
  1802 ;; Hardware stack levels used: 1
  1803 ;; This function calls:
  1804 ;;		Nothing
  1805 ;; This function is called by:
  1806 ;;		_main
  1807 ;;		_dec2bcd
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811     0361                     ___awmod:	
  1812                           ;psect for function ___awmod
  1813                           
  1814     0361                     l1186:	
  1815                           ;incstack = 0
  1816                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1817                           
  1818     0361  01F5               	clrf	___awmod@sign
  1819     0362                     l1188:
  1820     0362  1FF3               	btfss	___awmod@dividend+1,7
  1821     0363  2B65               	goto	u521
  1822     0364  2B66               	goto	u520
  1823     0365                     u521:
  1824     0365  2B6D               	goto	l1194
  1825     0366                     u520:
  1826     0366                     l1190:
  1827     0366  09F2               	comf	___awmod@dividend,f
  1828     0367  09F3               	comf	___awmod@dividend+1,f
  1829     0368  0AF2               	incf	___awmod@dividend,f
  1830     0369  1903               	skipnz
  1831     036A  0AF3               	incf	___awmod@dividend+1,f
  1832     036B                     l1192:
  1833     036B  01F5               	clrf	___awmod@sign
  1834     036C  0AF5               	incf	___awmod@sign,f
  1835     036D                     l1194:
  1836     036D  1FF1               	btfss	___awmod@divisor+1,7
  1837     036E  2B70               	goto	u531
  1838     036F  2B71               	goto	u530
  1839     0370                     u531:
  1840     0370  2B76               	goto	l1198
  1841     0371                     u530:
  1842     0371                     l1196:
  1843     0371  09F0               	comf	___awmod@divisor,f
  1844     0372  09F1               	comf	___awmod@divisor+1,f
  1845     0373  0AF0               	incf	___awmod@divisor,f
  1846     0374  1903               	skipnz
  1847     0375  0AF1               	incf	___awmod@divisor+1,f
  1848     0376                     l1198:
  1849     0376  0870               	movf	___awmod@divisor,w
  1850     0377  0471               	iorwf	___awmod@divisor+1,w
  1851     0378  1903               	btfsc	3,2
  1852     0379  2B7B               	goto	u541
  1853     037A  2B7C               	goto	u540
  1854     037B                     u541:
  1855     037B  2BAB               	goto	l1216
  1856     037C                     u540:
  1857     037C                     l1200:
  1858     037C  01F4               	clrf	___awmod@counter
  1859     037D  0AF4               	incf	___awmod@counter,f
  1860     037E  2B8A               	goto	l1206
  1861     037F                     l1202:
  1862     037F  3001               	movlw	1
  1863     0380                     u555:
  1864     0380  1003               	clrc
  1865     0381  0DF0               	rlf	___awmod@divisor,f
  1866     0382  0DF1               	rlf	___awmod@divisor+1,f
  1867     0383  3EFF               	addlw	-1
  1868     0384  1D03               	skipz
  1869     0385  2B80               	goto	u555
  1870     0386                     l1204:
  1871     0386  3001               	movlw	1
  1872     0387  00FF               	movwf	btemp+1
  1873     0388  087F               	movf	btemp+1,w
  1874     0389  07F4               	addwf	___awmod@counter,f
  1875     038A                     l1206:
  1876     038A  1FF1               	btfss	___awmod@divisor+1,7
  1877     038B  2B8D               	goto	u561
  1878     038C  2B8E               	goto	u560
  1879     038D                     u561:
  1880     038D  2B7F               	goto	l1202
  1881     038E                     u560:
  1882     038E                     l1208:
  1883     038E  0871               	movf	___awmod@divisor+1,w
  1884     038F  0273               	subwf	___awmod@dividend+1,w
  1885     0390  1D03               	skipz
  1886     0391  2B94               	goto	u575
  1887     0392  0870               	movf	___awmod@divisor,w
  1888     0393  0272               	subwf	___awmod@dividend,w
  1889     0394                     u575:
  1890     0394  1C03               	skipc
  1891     0395  2B97               	goto	u571
  1892     0396  2B98               	goto	u570
  1893     0397                     u571:
  1894     0397  2B9E               	goto	l1212
  1895     0398                     u570:
  1896     0398                     l1210:
  1897     0398  0870               	movf	___awmod@divisor,w
  1898     0399  02F2               	subwf	___awmod@dividend,f
  1899     039A  0871               	movf	___awmod@divisor+1,w
  1900     039B  1C03               	skipc
  1901     039C  03F3               	decf	___awmod@dividend+1,f
  1902     039D  02F3               	subwf	___awmod@dividend+1,f
  1903     039E                     l1212:
  1904     039E  3001               	movlw	1
  1905     039F                     u585:
  1906     039F  1003               	clrc
  1907     03A0  0CF1               	rrf	___awmod@divisor+1,f
  1908     03A1  0CF0               	rrf	___awmod@divisor,f
  1909     03A2  3EFF               	addlw	-1
  1910     03A3  1D03               	skipz
  1911     03A4  2B9F               	goto	u585
  1912     03A5                     l1214:
  1913     03A5  3001               	movlw	1
  1914     03A6  02F4               	subwf	___awmod@counter,f
  1915     03A7  1D03               	btfss	3,2
  1916     03A8  2BAA               	goto	u591
  1917     03A9  2BAB               	goto	u590
  1918     03AA                     u591:
  1919     03AA  2B8E               	goto	l1208
  1920     03AB                     u590:
  1921     03AB                     l1216:
  1922     03AB  0875               	movf	___awmod@sign,w
  1923     03AC  1903               	btfsc	3,2
  1924     03AD  2BAF               	goto	u601
  1925     03AE  2BB0               	goto	u600
  1926     03AF                     u601:
  1927     03AF  2BB5               	goto	l1220
  1928     03B0                     u600:
  1929     03B0                     l1218:
  1930     03B0  09F2               	comf	___awmod@dividend,f
  1931     03B1  09F3               	comf	___awmod@dividend+1,f
  1932     03B2  0AF2               	incf	___awmod@dividend,f
  1933     03B3  1903               	skipnz
  1934     03B4  0AF3               	incf	___awmod@dividend+1,f
  1935     03B5                     l1220:
  1936     03B5  0873               	movf	___awmod@dividend+1,w
  1937     03B6  00F1               	movwf	?___awmod+1
  1938     03B7  0872               	movf	___awmod@dividend,w
  1939     03B8  00F0               	movwf	?___awmod
  1940     03B9                     l432:
  1941     03B9  0008               	return
  1942     03BA                     __end_of___awmod:
  1943                           
  1944                           	psect	text8
  1945     03BA                     __ptext8:	
  1946 ;; *************** function ___awdiv *****************
  1947 ;; Defined at:
  1948 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  divisor         2    0[COMMON] int 
  1951 ;;  dividend        2    2[COMMON] int 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  quotient        2    6[COMMON] int 
  1954 ;;  sign            1    5[COMMON] unsigned char 
  1955 ;;  counter         1    4[COMMON] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  2    0[COMMON] int 
  1958 ;; Registers used:
  1959 ;;		wreg, status,2, status,0, btemp+1
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1965 ;;      Params:         4       0       0       0       0
  1966 ;;      Locals:         4       0       0       0       0
  1967 ;;      Temps:          0       0       0       0       0
  1968 ;;      Totals:         8       0       0       0       0
  1969 ;;Total ram usage:        8 bytes
  1970 ;; Hardware stack levels used: 1
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_main
  1975 ;;		_dec2bcd
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979     03BA                     ___awdiv:	
  1980                           ;psect for function ___awdiv
  1981                           
  1982     03BA                     l1142:	
  1983                           ;incstack = 0
  1984                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1985                           
  1986     03BA  01F5               	clrf	___awdiv@sign
  1987     03BB                     l1144:
  1988     03BB  1FF1               	btfss	___awdiv@divisor+1,7
  1989     03BC  2BBE               	goto	u421
  1990     03BD  2BBF               	goto	u420
  1991     03BE                     u421:
  1992     03BE  2BC6               	goto	l1150
  1993     03BF                     u420:
  1994     03BF                     l1146:
  1995     03BF  09F0               	comf	___awdiv@divisor,f
  1996     03C0  09F1               	comf	___awdiv@divisor+1,f
  1997     03C1  0AF0               	incf	___awdiv@divisor,f
  1998     03C2  1903               	skipnz
  1999     03C3  0AF1               	incf	___awdiv@divisor+1,f
  2000     03C4                     l1148:
  2001     03C4  01F5               	clrf	___awdiv@sign
  2002     03C5  0AF5               	incf	___awdiv@sign,f
  2003     03C6                     l1150:
  2004     03C6  1FF3               	btfss	___awdiv@dividend+1,7
  2005     03C7  2BC9               	goto	u431
  2006     03C8  2BCA               	goto	u430
  2007     03C9                     u431:
  2008     03C9  2BD3               	goto	l1156
  2009     03CA                     u430:
  2010     03CA                     l1152:
  2011     03CA  09F2               	comf	___awdiv@dividend,f
  2012     03CB  09F3               	comf	___awdiv@dividend+1,f
  2013     03CC  0AF2               	incf	___awdiv@dividend,f
  2014     03CD  1903               	skipnz
  2015     03CE  0AF3               	incf	___awdiv@dividend+1,f
  2016     03CF                     l1154:
  2017     03CF  3001               	movlw	1
  2018     03D0  00FF               	movwf	btemp+1
  2019     03D1  087F               	movf	btemp+1,w
  2020     03D2  06F5               	xorwf	___awdiv@sign,f
  2021     03D3                     l1156:
  2022     03D3  01F6               	clrf	___awdiv@quotient
  2023     03D4  01F7               	clrf	___awdiv@quotient+1
  2024     03D5                     l1158:
  2025     03D5  0870               	movf	___awdiv@divisor,w
  2026     03D6  0471               	iorwf	___awdiv@divisor+1,w
  2027     03D7  1903               	btfsc	3,2
  2028     03D8  2BDA               	goto	u441
  2029     03D9  2BDB               	goto	u440
  2030     03DA                     u441:
  2031     03DA  2C12               	goto	l1178
  2032     03DB                     u440:
  2033     03DB                     l1160:
  2034     03DB  01F4               	clrf	___awdiv@counter
  2035     03DC  0AF4               	incf	___awdiv@counter,f
  2036     03DD  2BE9               	goto	l1166
  2037     03DE                     l1162:
  2038     03DE  3001               	movlw	1
  2039     03DF                     u455:
  2040     03DF  1003               	clrc
  2041     03E0  0DF0               	rlf	___awdiv@divisor,f
  2042     03E1  0DF1               	rlf	___awdiv@divisor+1,f
  2043     03E2  3EFF               	addlw	-1
  2044     03E3  1D03               	skipz
  2045     03E4  2BDF               	goto	u455
  2046     03E5                     l1164:
  2047     03E5  3001               	movlw	1
  2048     03E6  00FF               	movwf	btemp+1
  2049     03E7  087F               	movf	btemp+1,w
  2050     03E8  07F4               	addwf	___awdiv@counter,f
  2051     03E9                     l1166:
  2052     03E9  1FF1               	btfss	___awdiv@divisor+1,7
  2053     03EA  2BEC               	goto	u461
  2054     03EB  2BED               	goto	u460
  2055     03EC                     u461:
  2056     03EC  2BDE               	goto	l1162
  2057     03ED                     u460:
  2058     03ED                     l1168:
  2059     03ED  3001               	movlw	1
  2060     03EE                     u475:
  2061     03EE  1003               	clrc
  2062     03EF  0DF6               	rlf	___awdiv@quotient,f
  2063     03F0  0DF7               	rlf	___awdiv@quotient+1,f
  2064     03F1  3EFF               	addlw	-1
  2065     03F2  1D03               	skipz
  2066     03F3  2BEE               	goto	u475
  2067     03F4  0871               	movf	___awdiv@divisor+1,w
  2068     03F5  0273               	subwf	___awdiv@dividend+1,w
  2069     03F6  1D03               	skipz
  2070     03F7  2BFA               	goto	u485
  2071     03F8  0870               	movf	___awdiv@divisor,w
  2072     03F9  0272               	subwf	___awdiv@dividend,w
  2073     03FA                     u485:
  2074     03FA  1C03               	skipc
  2075     03FB  2BFD               	goto	u481
  2076     03FC  2BFE               	goto	u480
  2077     03FD                     u481:
  2078     03FD  2C05               	goto	l1174
  2079     03FE                     u480:
  2080     03FE                     l1170:
  2081     03FE  0870               	movf	___awdiv@divisor,w
  2082     03FF  02F2               	subwf	___awdiv@dividend,f
  2083     0400  0871               	movf	___awdiv@divisor+1,w
  2084     0401  1C03               	skipc
  2085     0402  03F3               	decf	___awdiv@dividend+1,f
  2086     0403  02F3               	subwf	___awdiv@dividend+1,f
  2087     0404                     l1172:
  2088     0404  1476               	bsf	___awdiv@quotient,0
  2089     0405                     l1174:
  2090     0405  3001               	movlw	1
  2091     0406                     u495:
  2092     0406  1003               	clrc
  2093     0407  0CF1               	rrf	___awdiv@divisor+1,f
  2094     0408  0CF0               	rrf	___awdiv@divisor,f
  2095     0409  3EFF               	addlw	-1
  2096     040A  1D03               	skipz
  2097     040B  2C06               	goto	u495
  2098     040C                     l1176:
  2099     040C  3001               	movlw	1
  2100     040D  02F4               	subwf	___awdiv@counter,f
  2101     040E  1D03               	btfss	3,2
  2102     040F  2C11               	goto	u501
  2103     0410  2C12               	goto	u500
  2104     0411                     u501:
  2105     0411  2BED               	goto	l1168
  2106     0412                     u500:
  2107     0412                     l1178:
  2108     0412  0875               	movf	___awdiv@sign,w
  2109     0413  1903               	btfsc	3,2
  2110     0414  2C16               	goto	u511
  2111     0415  2C17               	goto	u510
  2112     0416                     u511:
  2113     0416  2C1C               	goto	l1182
  2114     0417                     u510:
  2115     0417                     l1180:
  2116     0417  09F6               	comf	___awdiv@quotient,f
  2117     0418  09F7               	comf	___awdiv@quotient+1,f
  2118     0419  0AF6               	incf	___awdiv@quotient,f
  2119     041A  1903               	skipnz
  2120     041B  0AF7               	incf	___awdiv@quotient+1,f
  2121     041C                     l1182:
  2122     041C  0877               	movf	___awdiv@quotient+1,w
  2123     041D  00F1               	movwf	?___awdiv+1
  2124     041E  0876               	movf	___awdiv@quotient,w
  2125     041F  00F0               	movwf	?___awdiv
  2126     0420                     l419:
  2127     0420  0008               	return
  2128     0421                     __end_of___awdiv:
  2129                           
  2130                           	psect	text9
  2131     0312                     __ptext9:	
  2132 ;; *************** function _days *****************
  2133 ;; Defined at:
  2134 ;;		line 137 in file "LCD_i2c.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  day             2    9[COMMON] int 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      void 
  2141 ;; Registers used:
  2142 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2148 ;;      Params:         2       0       0       0       0
  2149 ;;      Locals:         0       0       0       0       0
  2150 ;;      Temps:          0       0       0       0       0
  2151 ;;      Totals:         2       0       0       0       0
  2152 ;;Total ram usage:        2 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; Hardware stack levels required when called: 6
  2155 ;; This function calls:
  2156 ;;		_LCD_Write_String
  2157 ;; This function is called by:
  2158 ;;		_main
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162     0312                     _days:	
  2163                           ;psect for function _days
  2164                           
  2165     0312                     l1334:	
  2166                           ;incstack = 0
  2167                           ; Regs used in _days: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2168                           
  2169                           
  2170                           ;LCD_i2c.c: 138:     switch (day) {
  2171     0312  2B44               	goto	l1352
  2172     0313                     l1336:
  2173                           
  2174                           ;LCD_i2c.c: 140:             LCD_Write_String(" SUN");
  2175     0313  301F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2176     0314  120A  118A  2273  120A  118A  	fcall	_LCD_Write_String
  2177                           
  2178                           ;LCD_i2c.c: 141:             break;
  2179     0319  2B60               	goto	l140
  2180     031A                     l1338:
  2181                           
  2182                           ;LCD_i2c.c: 143:             LCD_Write_String(" MON");
  2183     031A  301A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2184     031B  120A  118A  2273  120A  118A  	fcall	_LCD_Write_String
  2185                           
  2186                           ;LCD_i2c.c: 144:             break;
  2187     0320  2B60               	goto	l140
  2188     0321                     l1340:
  2189                           
  2190                           ;LCD_i2c.c: 146:             LCD_Write_String(" TUE");
  2191     0321  3010               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2192     0322  120A  118A  2273  120A  118A  	fcall	_LCD_Write_String
  2193                           
  2194                           ;LCD_i2c.c: 147:             break;
  2195     0327  2B60               	goto	l140
  2196     0328                     l1342:
  2197                           
  2198                           ;LCD_i2c.c: 149:             LCD_Write_String(" WED");
  2199     0328  300B               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2200     0329  120A  118A  2273  120A  118A  	fcall	_LCD_Write_String
  2201                           
  2202                           ;LCD_i2c.c: 150:             break;
  2203     032E  2B60               	goto	l140
  2204     032F                     l1344:
  2205                           
  2206                           ;LCD_i2c.c: 152:             LCD_Write_String(" THU");
  2207     032F  3029               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2208     0330  120A  118A  2273  120A  118A  	fcall	_LCD_Write_String
  2209                           
  2210                           ;LCD_i2c.c: 153:             break;
  2211     0335  2B60               	goto	l140
  2212     0336                     l1346:
  2213                           
  2214                           ;LCD_i2c.c: 155:             LCD_Write_String(" FRI");
  2215     0336  3015               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2216     0337  120A  118A  2273  120A  118A  	fcall	_LCD_Write_String
  2217                           
  2218                           ;LCD_i2c.c: 156:             break;
  2219     033C  2B60               	goto	l140
  2220     033D                     l1348:
  2221                           
  2222                           ;LCD_i2c.c: 158:             LCD_Write_String(" SAT");
  2223     033D  3024               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2224     033E  120A  118A  2273  120A  118A  	fcall	_LCD_Write_String
  2225                           
  2226                           ;LCD_i2c.c: 159:             break;
  2227     0343  2B60               	goto	l140
  2228     0344                     l1352:
  2229                           
  2230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2231                           ; Switch size 1, requested type "simple"
  2232                           ; Number of cases is 1, Range of values is 0 to 0
  2233                           ; switch strategies available:
  2234                           ; Name         Instructions Cycles
  2235                           ; simple_byte            4     3 (average)
  2236                           ; direct_byte           11     8 (fixed)
  2237                           ; jumptable            260     6 (fixed)
  2238                           ;	Chosen strategy is simple_byte
  2239     0344  087A               	movf	days@day+1,w
  2240     0345  3A00               	xorlw	0	; case 0
  2241     0346  1903               	skipnz
  2242     0347  2B49               	goto	l1476
  2243     0348  2B60               	goto	l140
  2244     0349                     l1476:
  2245                           
  2246                           ; Switch size 1, requested type "simple"
  2247                           ; Number of cases is 7, Range of values is 1 to 7
  2248                           ; switch strategies available:
  2249                           ; Name         Instructions Cycles
  2250                           ; simple_byte           22    12 (average)
  2251                           ; direct_byte           32    11 (fixed)
  2252                           ; jumptable            263     9 (fixed)
  2253                           ;	Chosen strategy is simple_byte
  2254     0349  0879               	movf	days@day,w
  2255     034A  3A01               	xorlw	1	; case 1
  2256     034B  1903               	skipnz
  2257     034C  2B13               	goto	l1336
  2258     034D  3A03               	xorlw	3	; case 2
  2259     034E  1903               	skipnz
  2260     034F  2B1A               	goto	l1338
  2261     0350  3A01               	xorlw	1	; case 3
  2262     0351  1903               	skipnz
  2263     0352  2B21               	goto	l1340
  2264     0353  3A07               	xorlw	7	; case 4
  2265     0354  1903               	skipnz
  2266     0355  2B28               	goto	l1342
  2267     0356  3A01               	xorlw	1	; case 5
  2268     0357  1903               	skipnz
  2269     0358  2B2F               	goto	l1344
  2270     0359  3A03               	xorlw	3	; case 6
  2271     035A  1903               	skipnz
  2272     035B  2B36               	goto	l1346
  2273     035C  3A01               	xorlw	1	; case 7
  2274     035D  1903               	skipnz
  2275     035E  2B3D               	goto	l1348
  2276     035F  2B60               	goto	l140
  2277     0360                     l140:
  2278     0360  0008               	return
  2279     0361                     __end_of_days:
  2280                           
  2281                           	psect	text10
  2282     0273                     __ptext10:	
  2283 ;; *************** function _LCD_Write_String *****************
  2284 ;; Defined at:
  2285 ;;		line 209 in file "LCD_i2c.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  Str             1    wreg     PTR unsigned char 
  2288 ;;		 -> STR_11(5), STR_10(5), STR_9(5), STR_8(5), 
  2289 ;;		 -> STR_7(5), STR_6(5), STR_5(5), STR_4(5), 
  2290 ;;		 -> STR_3(4), STR_2(4), STR_1(5), 
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;  Str             1    8[COMMON] PTR unsigned char 
  2293 ;;		 -> STR_11(5), STR_10(5), STR_9(5), STR_8(5), 
  2294 ;;		 -> STR_7(5), STR_6(5), STR_5(5), STR_4(5), 
  2295 ;;		 -> STR_3(4), STR_2(4), STR_1(5), 
  2296 ;;  i               2    6[COMMON] int 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2306 ;;      Params:         0       0       0       0       0
  2307 ;;      Locals:         3       0       0       0       0
  2308 ;;      Temps:          0       0       0       0       0
  2309 ;;      Totals:         3       0       0       0       0
  2310 ;;Total ram usage:        3 bytes
  2311 ;; Hardware stack levels used: 1
  2312 ;; Hardware stack levels required when called: 5
  2313 ;; This function calls:
  2314 ;;		_lcd_data
  2315 ;; This function is called by:
  2316 ;;		_main
  2317 ;;		_days
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321     0273                     _LCD_Write_String:	
  2322                           ;psect for function _LCD_Write_String
  2323                           
  2324                           
  2325                           ;incstack = 0
  2326                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2327                           ;LCD_Write_String@Str stored from wreg
  2328     0273  00F8               	movwf	LCD_Write_String@Str
  2329     0274                     l1228:
  2330                           
  2331                           ;LCD_i2c.c: 210:     for (int i = 0; Str[i] != '\0'; i++)
  2332     0274  01F6               	clrf	LCD_Write_String@i
  2333     0275  01F7               	clrf	LCD_Write_String@i+1
  2334     0276  2A8A               	goto	l1234
  2335     0277                     l1230:
  2336                           
  2337                           ;LCD_i2c.c: 211:         lcd_data(Str[i]);
  2338     0277  0876               	movf	LCD_Write_String@i,w
  2339     0278  0778               	addwf	LCD_Write_String@Str,w
  2340     0279  0084               	movwf	4
  2341     027A  120A  118A  2003  120A  118A  	fcall	stringdir
  2342     027F  120A  118A  2236  120A  118A  	fcall	_lcd_data
  2343     0284                     l1232:
  2344     0284  3001               	movlw	1
  2345     0285  07F6               	addwf	LCD_Write_String@i,f
  2346     0286  1803               	skipnc
  2347     0287  0AF7               	incf	LCD_Write_String@i+1,f
  2348     0288  3000               	movlw	0
  2349     0289  07F7               	addwf	LCD_Write_String@i+1,f
  2350     028A                     l1234:
  2351     028A  0876               	movf	LCD_Write_String@i,w
  2352     028B  0778               	addwf	LCD_Write_String@Str,w
  2353     028C  0084               	movwf	4
  2354     028D  120A  118A  2003  120A  118A  	fcall	stringdir
  2355     0292  3A00               	xorlw	0
  2356     0293  1D03               	skipz
  2357     0294  2A96               	goto	u611
  2358     0295  2A97               	goto	u610
  2359     0296                     u611:
  2360     0296  2A77               	goto	l1230
  2361     0297                     u610:
  2362     0297                     l161:
  2363     0297  0008               	return
  2364     0298                     __end_of_LCD_Write_String:
  2365                           
  2366                           	psect	text11
  2367     0236                     __ptext11:	
  2368 ;; *************** function _lcd_data *****************
  2369 ;; Defined at:
  2370 ;;		line 203 in file "LCD_i2c.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  Data            1    wreg     unsigned char 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  Data            1    5[COMMON] unsigned char 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2384 ;;      Params:         0       0       0       0       0
  2385 ;;      Locals:         1       0       0       0       0
  2386 ;;      Temps:          1       0       0       0       0
  2387 ;;      Totals:         2       0       0       0       0
  2388 ;;Total ram usage:        2 bytes
  2389 ;; Hardware stack levels used: 1
  2390 ;; Hardware stack levels required when called: 4
  2391 ;; This function calls:
  2392 ;;		_LCD_Write_4Bit
  2393 ;; This function is called by:
  2394 ;;		_main
  2395 ;;		_LCD_Write_String
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399     0236                     _lcd_data:	
  2400                           ;psect for function _lcd_data
  2401                           
  2402                           
  2403                           ;incstack = 0
  2404                           ; Regs used in _lcd_data: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2405                           ;lcd_data@Data stored from wreg
  2406     0236  00F5               	movwf	lcd_data@Data
  2407     0237                     l1124:
  2408                           
  2409                           ;LCD_i2c.c: 204:     RS = 1;
  2410     0237  1283               	bcf	3,5	;RP0=0, select bank0
  2411     0238  1303               	bcf	3,6	;RP1=0, select bank0
  2412     0239  01B0               	clrf	_RS
  2413     023A  0AB0               	incf	_RS,f
  2414     023B                     l1126:
  2415                           
  2416                           ;LCD_i2c.c: 205:     LCD_Write_4Bit(Data & 0xF0);
  2417     023B  0875               	movf	lcd_data@Data,w
  2418     023C  39F0               	andlw	240
  2419     023D  120A  118A  21FF  120A  118A  	fcall	_LCD_Write_4Bit
  2420                           
  2421                           ;LCD_i2c.c: 206:     LCD_Write_4Bit((Data << 4) & 0xF0);
  2422     0242  0875               	movf	lcd_data@Data,w
  2423     0243  00F4               	movwf	??_lcd_data
  2424     0244  3003               	movlw	3
  2425     0245                     u375:
  2426     0245  1003               	clrc
  2427     0246  0DF4               	rlf	??_lcd_data,f
  2428     0247  3EFF               	addlw	-1
  2429     0248  1D03               	skipz
  2430     0249  2A45               	goto	u375
  2431     024A  1003               	clrc
  2432     024B  0D74               	rlf	??_lcd_data,w
  2433     024C  39F0               	andlw	240
  2434     024D  120A  118A  21FF  120A  118A  	fcall	_LCD_Write_4Bit
  2435     0252                     l155:
  2436     0252  0008               	return
  2437     0253                     __end_of_lcd_data:
  2438                           
  2439                           	psect	text12
  2440     0253                     __ptext12:	
  2441 ;; *************** function _LCD_Set_Cursor *****************
  2442 ;; Defined at:
  2443 ;;		line 214 in file "LCD_i2c.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;  ROW             1    wreg     unsigned char 
  2446 ;;  COL             1    6[COMMON] unsigned char 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  ROW             1    9[COMMON] unsigned char 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2458 ;;      Params:         1       0       0       0       0
  2459 ;;      Locals:         1       0       0       0       0
  2460 ;;      Temps:          2       0       0       0       0
  2461 ;;      Totals:         4       0       0       0       0
  2462 ;;Total ram usage:        4 bytes
  2463 ;; Hardware stack levels used: 1
  2464 ;; Hardware stack levels required when called: 5
  2465 ;; This function calls:
  2466 ;;		_LCD_CMD
  2467 ;; This function is called by:
  2468 ;;		_main
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472     0253                     _LCD_Set_Cursor:	
  2473                           ;psect for function _LCD_Set_Cursor
  2474                           
  2475                           
  2476                           ;incstack = 0
  2477                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2478                           ;LCD_Set_Cursor@ROW stored from wreg
  2479     0253  00F9               	movwf	LCD_Set_Cursor@ROW
  2480     0254                     l1322:
  2481                           
  2482                           ;LCD_i2c.c: 215:     switch (ROW) {
  2483     0254  2A65               	goto	l1328
  2484     0255                     l1324:
  2485                           
  2486                           ;LCD_i2c.c: 217:             LCD_CMD(0xC0 + COL - 1);
  2487     0255  0876               	movf	LCD_Set_Cursor@COL,w
  2488     0256  3EBF               	addlw	191
  2489     0257  120A  118A  221A  120A  118A  	fcall	_LCD_CMD
  2490                           
  2491                           ;LCD_i2c.c: 218:             break;
  2492     025C  2A72               	goto	l168
  2493     025D                     l1326:
  2494                           
  2495                           ;LCD_i2c.c: 220:             LCD_CMD(0x80 + COL - 1);
  2496     025D  0876               	movf	LCD_Set_Cursor@COL,w
  2497     025E  3E7F               	addlw	127
  2498     025F  120A  118A  221A  120A  118A  	fcall	_LCD_CMD
  2499                           
  2500                           ;LCD_i2c.c: 221:     }
  2501     0264  2A72               	goto	l168
  2502     0265                     l1328:
  2503     0265  0879               	movf	LCD_Set_Cursor@ROW,w
  2504     0266  00F7               	movwf	??_LCD_Set_Cursor
  2505     0267  01F8               	clrf	??_LCD_Set_Cursor+1
  2506                           
  2507                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2508                           ; Switch size 1, requested type "simple"
  2509                           ; Number of cases is 1, Range of values is 0 to 0
  2510                           ; switch strategies available:
  2511                           ; Name         Instructions Cycles
  2512                           ; simple_byte            4     3 (average)
  2513                           ; direct_byte           11     8 (fixed)
  2514                           ; jumptable            260     6 (fixed)
  2515                           ;	Chosen strategy is simple_byte
  2516     0268  0878               	movf	??_LCD_Set_Cursor+1,w
  2517     0269  3A00               	xorlw	0	; case 0
  2518     026A  1903               	skipnz
  2519     026B  2A6D               	goto	l1478
  2520     026C  2A5D               	goto	l1326
  2521     026D                     l1478:
  2522                           
  2523                           ; Switch size 1, requested type "simple"
  2524                           ; Number of cases is 1, Range of values is 2 to 2
  2525                           ; switch strategies available:
  2526                           ; Name         Instructions Cycles
  2527                           ; simple_byte            4     3 (average)
  2528                           ; direct_byte           14    11 (fixed)
  2529                           ; jumptable            263     9 (fixed)
  2530                           ;	Chosen strategy is simple_byte
  2531     026D  0877               	movf	??_LCD_Set_Cursor,w
  2532     026E  3A02               	xorlw	2	; case 2
  2533     026F  1903               	skipnz
  2534     0270  2A55               	goto	l1324
  2535     0271  2A5D               	goto	l1326
  2536     0272                     l168:
  2537     0272  0008               	return
  2538     0273                     __end_of_LCD_Set_Cursor:
  2539                           
  2540                           	psect	text13
  2541     0421                     __ptext13:	
  2542 ;; *************** function _LCD_Init *****************
  2543 ;; Defined at:
  2544 ;;		line 163 in file "LCD_i2c.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  I2C_Add         1    wreg     unsigned char 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  I2C_Add         1    9[COMMON] unsigned char 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2558 ;;      Params:         0       0       0       0       0
  2559 ;;      Locals:         1       0       0       0       0
  2560 ;;      Temps:          3       0       0       0       0
  2561 ;;      Totals:         4       0       0       0       0
  2562 ;;Total ram usage:        4 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; Hardware stack levels required when called: 5
  2565 ;; This function calls:
  2566 ;;		_IO_Expander_Write
  2567 ;;		_LCD_CMD
  2568 ;; This function is called by:
  2569 ;;		_main
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573     0421                     _LCD_Init:	
  2574                           ;psect for function _LCD_Init
  2575                           
  2576                           
  2577                           ;incstack = 0
  2578                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2579                           ;LCD_Init@I2C_Add stored from wreg
  2580     0421  00F9               	movwf	LCD_Init@I2C_Add
  2581     0422                     l1268:
  2582                           
  2583                           ;LCD_i2c.c: 164:     i2c_add = I2C_Add;
  2584     0422  0879               	movf	LCD_Init@I2C_Add,w
  2585     0423  1283               	bcf	3,5	;RP0=0, select bank0
  2586     0424  1303               	bcf	3,6	;RP1=0, select bank0
  2587     0425  00B4               	movwf	_i2c_add
  2588     0426                     l1270:
  2589                           
  2590                           ;LCD_i2c.c: 165:     IO_Expander_Write(0x00);
  2591     0426  3000               	movlw	0
  2592     0427  120A  118A  21E5  120A  118A  	fcall	_IO_Expander_Write
  2593     042C                     l1272:
  2594                           
  2595                           ;LCD_i2c.c: 166:     _delay((unsigned long)((30)*(16000000/4000.0)));
  2596     042C  309C               	movlw	156
  2597     042D  00F7               	movwf	??_LCD_Init+1
  2598     042E  30D7               	movlw	215
  2599     042F  00F6               	movwf	??_LCD_Init
  2600     0430                     u687:
  2601     0430  0BF6               	decfsz	??_LCD_Init,f
  2602     0431  2C30               	goto	u687
  2603     0432  0BF7               	decfsz	??_LCD_Init+1,f
  2604     0433  2C30               	goto	u687
  2605     0434                     l1274:
  2606                           
  2607                           ;LCD_i2c.c: 167:     LCD_CMD(0x03);
  2608     0434  3003               	movlw	3
  2609     0435  120A  118A  221A  120A  118A  	fcall	_LCD_CMD
  2610     043A                     l1276:
  2611                           
  2612                           ;LCD_i2c.c: 168:     _delay((unsigned long)((5)*(16000000/4000.0)));
  2613     043A  301A               	movlw	26
  2614     043B  00F7               	movwf	??_LCD_Init+1
  2615     043C  30F8               	movlw	248
  2616     043D  00F6               	movwf	??_LCD_Init
  2617     043E                     u697:
  2618     043E  0BF6               	decfsz	??_LCD_Init,f
  2619     043F  2C3E               	goto	u697
  2620     0440  0BF7               	decfsz	??_LCD_Init+1,f
  2621     0441  2C3E               	goto	u697
  2622     0442  0000               	nop
  2623     0443                     l1278:
  2624                           
  2625                           ;LCD_i2c.c: 169:     LCD_CMD(0x03);
  2626     0443  3003               	movlw	3
  2627     0444  120A  118A  221A  120A  118A  	fcall	_LCD_CMD
  2628     0449                     l1280:
  2629                           
  2630                           ;LCD_i2c.c: 170:     _delay((unsigned long)((5)*(16000000/4000.0)));
  2631     0449  301A               	movlw	26
  2632     044A  00F7               	movwf	??_LCD_Init+1
  2633     044B  30F8               	movlw	248
  2634     044C  00F6               	movwf	??_LCD_Init
  2635     044D                     u707:
  2636     044D  0BF6               	decfsz	??_LCD_Init,f
  2637     044E  2C4D               	goto	u707
  2638     044F  0BF7               	decfsz	??_LCD_Init+1,f
  2639     0450  2C4D               	goto	u707
  2640     0451  0000               	nop
  2641     0452                     l1282:
  2642                           
  2643                           ;LCD_i2c.c: 171:     LCD_CMD(0x03);
  2644     0452  3003               	movlw	3
  2645     0453  120A  118A  221A  120A  118A  	fcall	_LCD_CMD
  2646     0458                     l1284:
  2647                           
  2648                           ;LCD_i2c.c: 172:     _delay((unsigned long)((5)*(16000000/4000.0)));
  2649     0458  301A               	movlw	26
  2650     0459  00F7               	movwf	??_LCD_Init+1
  2651     045A  30F8               	movlw	248
  2652     045B  00F6               	movwf	??_LCD_Init
  2653     045C                     u717:
  2654     045C  0BF6               	decfsz	??_LCD_Init,f
  2655     045D  2C5C               	goto	u717
  2656     045E  0BF7               	decfsz	??_LCD_Init+1,f
  2657     045F  2C5C               	goto	u717
  2658     0460  0000               	nop
  2659     0461                     l1286:
  2660                           
  2661                           ;LCD_i2c.c: 173:     LCD_CMD(0x02);
  2662     0461  3002               	movlw	2
  2663     0462  120A  118A  221A  120A  118A  	fcall	_LCD_CMD
  2664     0467                     l1288:
  2665                           
  2666                           ;LCD_i2c.c: 174:     _delay((unsigned long)((5)*(16000000/4000.0)));
  2667     0467  301A               	movlw	26
  2668     0468  00F7               	movwf	??_LCD_Init+1
  2669     0469  30F8               	movlw	248
  2670     046A  00F6               	movwf	??_LCD_Init
  2671     046B                     u727:
  2672     046B  0BF6               	decfsz	??_LCD_Init,f
  2673     046C  2C6B               	goto	u727
  2674     046D  0BF7               	decfsz	??_LCD_Init+1,f
  2675     046E  2C6B               	goto	u727
  2676     046F  0000               	nop
  2677     0470                     l1290:
  2678                           
  2679                           ;LCD_i2c.c: 175:     LCD_CMD(0x20 | (2 << 2));
  2680     0470  3028               	movlw	40
  2681     0471  120A  118A  221A  120A  118A  	fcall	_LCD_CMD
  2682     0476                     l1292:
  2683                           
  2684                           ;LCD_i2c.c: 176:     _delay((unsigned long)((50)*(16000000/4000.0)));
  2685     0476  3002               	movlw	2
  2686     0477  00F8               	movwf	??_LCD_Init+2
  2687     0478  3004               	movlw	4
  2688     0479  00F7               	movwf	??_LCD_Init+1
  2689     047A  30BA               	movlw	186
  2690     047B  00F6               	movwf	??_LCD_Init
  2691     047C                     u737:
  2692     047C  0BF6               	decfsz	??_LCD_Init,f
  2693     047D  2C7C               	goto	u737
  2694     047E  0BF7               	decfsz	??_LCD_Init+1,f
  2695     047F  2C7C               	goto	u737
  2696     0480  0BF8               	decfsz	??_LCD_Init+2,f
  2697     0481  2C7C               	goto	u737
  2698     0482  0000               	nop
  2699     0483                     l1294:
  2700                           
  2701                           ;LCD_i2c.c: 177:     LCD_CMD(0x0C);
  2702     0483  300C               	movlw	12
  2703     0484  120A  118A  221A  120A  118A  	fcall	_LCD_CMD
  2704     0489                     l1296:
  2705                           
  2706                           ;LCD_i2c.c: 178:     _delay((unsigned long)((50)*(16000000/4000.0)));
  2707     0489  3002               	movlw	2
  2708     048A  00F8               	movwf	??_LCD_Init+2
  2709     048B  3004               	movlw	4
  2710     048C  00F7               	movwf	??_LCD_Init+1
  2711     048D  30BA               	movlw	186
  2712     048E  00F6               	movwf	??_LCD_Init
  2713     048F                     u747:
  2714     048F  0BF6               	decfsz	??_LCD_Init,f
  2715     0490  2C8F               	goto	u747
  2716     0491  0BF7               	decfsz	??_LCD_Init+1,f
  2717     0492  2C8F               	goto	u747
  2718     0493  0BF8               	decfsz	??_LCD_Init+2,f
  2719     0494  2C8F               	goto	u747
  2720     0495  0000               	nop
  2721     0496                     l1298:
  2722                           
  2723                           ;LCD_i2c.c: 179:     LCD_CMD(0x01);
  2724     0496  3001               	movlw	1
  2725     0497  120A  118A  221A  120A  118A  	fcall	_LCD_CMD
  2726     049C                     l1300:
  2727                           
  2728                           ;LCD_i2c.c: 180:     _delay((unsigned long)((50)*(16000000/4000.0)));
  2729     049C  3002               	movlw	2
  2730     049D  00F8               	movwf	??_LCD_Init+2
  2731     049E  3004               	movlw	4
  2732     049F  00F7               	movwf	??_LCD_Init+1
  2733     04A0  30BA               	movlw	186
  2734     04A1  00F6               	movwf	??_LCD_Init
  2735     04A2                     u757:
  2736     04A2  0BF6               	decfsz	??_LCD_Init,f
  2737     04A3  2CA2               	goto	u757
  2738     04A4  0BF7               	decfsz	??_LCD_Init+1,f
  2739     04A5  2CA2               	goto	u757
  2740     04A6  0BF8               	decfsz	??_LCD_Init+2,f
  2741     04A7  2CA2               	goto	u757
  2742     04A8  0000               	nop
  2743     04A9                     l143:
  2744     04A9  0008               	return
  2745     04AA                     __end_of_LCD_Init:
  2746                           
  2747                           	psect	text14
  2748     021A                     __ptext14:	
  2749 ;; *************** function _LCD_CMD *****************
  2750 ;; Defined at:
  2751 ;;		line 197 in file "LCD_i2c.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  CMD             1    wreg     unsigned char 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  CMD             1    5[COMMON] unsigned char 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2765 ;;      Params:         0       0       0       0       0
  2766 ;;      Locals:         1       0       0       0       0
  2767 ;;      Temps:          1       0       0       0       0
  2768 ;;      Totals:         2       0       0       0       0
  2769 ;;Total ram usage:        2 bytes
  2770 ;; Hardware stack levels used: 1
  2771 ;; Hardware stack levels required when called: 4
  2772 ;; This function calls:
  2773 ;;		_LCD_Write_4Bit
  2774 ;; This function is called by:
  2775 ;;		_LCD_Init
  2776 ;;		_LCD_Set_Cursor
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780     021A                     _LCD_CMD:	
  2781                           ;psect for function _LCD_CMD
  2782                           
  2783                           
  2784                           ;incstack = 0
  2785                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2786                           ;LCD_CMD@CMD stored from wreg
  2787     021A  00F5               	movwf	LCD_CMD@CMD
  2788     021B                     l1246:
  2789                           
  2790                           ;LCD_i2c.c: 198:     RS = 0;
  2791     021B  1283               	bcf	3,5	;RP0=0, select bank0
  2792     021C  1303               	bcf	3,6	;RP1=0, select bank0
  2793     021D  01B0               	clrf	_RS
  2794     021E                     l1248:
  2795                           
  2796                           ;LCD_i2c.c: 199:     LCD_Write_4Bit(CMD & 0xF0);
  2797     021E  0875               	movf	LCD_CMD@CMD,w
  2798     021F  39F0               	andlw	240
  2799     0220  120A  118A  21FF  120A  118A  	fcall	_LCD_Write_4Bit
  2800     0225                     l1250:
  2801                           
  2802                           ;LCD_i2c.c: 200:     LCD_Write_4Bit((CMD << 4) & 0xF0);
  2803     0225  0875               	movf	LCD_CMD@CMD,w
  2804     0226  00F4               	movwf	??_LCD_CMD
  2805     0227  3003               	movlw	3
  2806     0228                     u635:
  2807     0228  1003               	clrc
  2808     0229  0DF4               	rlf	??_LCD_CMD,f
  2809     022A  3EFF               	addlw	-1
  2810     022B  1D03               	skipz
  2811     022C  2A28               	goto	u635
  2812     022D  1003               	clrc
  2813     022E  0D74               	rlf	??_LCD_CMD,w
  2814     022F  39F0               	andlw	240
  2815     0230  120A  118A  21FF  120A  118A  	fcall	_LCD_Write_4Bit
  2816     0235                     l152:
  2817     0235  0008               	return
  2818     0236                     __end_of_LCD_CMD:
  2819                           
  2820                           	psect	text15
  2821     01FF                     __ptext15:	
  2822 ;; *************** function _LCD_Write_4Bit *****************
  2823 ;; Defined at:
  2824 ;;		line 190 in file "LCD_i2c.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  Nibble          1    wreg     unsigned char 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;  Nibble          1    3[COMMON] unsigned char 
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  1    wreg      void 
  2831 ;; Registers used:
  2832 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2838 ;;      Params:         0       0       0       0       0
  2839 ;;      Locals:         1       0       0       0       0
  2840 ;;      Temps:          1       0       0       0       0
  2841 ;;      Totals:         2       0       0       0       0
  2842 ;;Total ram usage:        2 bytes
  2843 ;; Hardware stack levels used: 1
  2844 ;; Hardware stack levels required when called: 3
  2845 ;; This function calls:
  2846 ;;		_IO_Expander_Write
  2847 ;; This function is called by:
  2848 ;;		_LCD_CMD
  2849 ;;		_lcd_data
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853     01FF                     _LCD_Write_4Bit:	
  2854                           ;psect for function _LCD_Write_4Bit
  2855                           
  2856                           
  2857                           ;incstack = 0
  2858                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2859                           ;LCD_Write_4Bit@Nibble stored from wreg
  2860     01FF  00F3               	movwf	LCD_Write_4Bit@Nibble
  2861     0200                     l1118:
  2862                           
  2863                           ;LCD_i2c.c: 191:     Nibble |= RS;
  2864     0200  1283               	bcf	3,5	;RP0=0, select bank0
  2865     0201  1303               	bcf	3,6	;RP1=0, select bank0
  2866     0202  0830               	movf	_RS,w
  2867     0203  00FF               	movwf	btemp+1
  2868     0204  087F               	movf	btemp+1,w
  2869     0205  04F3               	iorwf	LCD_Write_4Bit@Nibble,f
  2870     0206                     l1120:
  2871                           
  2872                           ;LCD_i2c.c: 192:     IO_Expander_Write(Nibble | 0x04);
  2873     0206  0873               	movf	LCD_Write_4Bit@Nibble,w
  2874     0207  3804               	iorlw	4
  2875     0208  120A  118A  21E5  120A  118A  	fcall	_IO_Expander_Write
  2876     020D                     l1122:
  2877                           
  2878                           ;LCD_i2c.c: 193:     IO_Expander_Write(Nibble & 0xFB);
  2879     020D  0873               	movf	LCD_Write_4Bit@Nibble,w
  2880     020E  39FB               	andlw	251
  2881     020F  120A  118A  21E5  120A  118A  	fcall	_IO_Expander_Write
  2882                           
  2883                           ;LCD_i2c.c: 194:     _delay((unsigned long)((50)*(16000000/4000000.0)));
  2884     0214  3042               	movlw	66
  2885     0215  00F2               	movwf	??_LCD_Write_4Bit
  2886     0216                     u767:
  2887     0216  0BF2               	decfsz	??_LCD_Write_4Bit,f
  2888     0217  2A16               	goto	u767
  2889     0218  0000               	nop
  2890     0219                     l149:
  2891     0219  0008               	return
  2892     021A                     __end_of_LCD_Write_4Bit:
  2893                           
  2894                           	psect	text16
  2895     01E5                     __ptext16:	
  2896 ;; *************** function _IO_Expander_Write *****************
  2897 ;; Defined at:
  2898 ;;		line 183 in file "LCD_i2c.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  Data            1    wreg     unsigned char 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  Data            1    1[COMMON] unsigned char 
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      void 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0, pclath, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2912 ;;      Params:         0       0       0       0       0
  2913 ;;      Locals:         1       0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0
  2915 ;;      Totals:         1       0       0       0       0
  2916 ;;Total ram usage:        1 bytes
  2917 ;; Hardware stack levels used: 1
  2918 ;; Hardware stack levels required when called: 2
  2919 ;; This function calls:
  2920 ;;		_I2C_Master_Start
  2921 ;;		_I2C_Master_Stop
  2922 ;;		_I2C_Master_Write
  2923 ;; This function is called by:
  2924 ;;		_LCD_Init
  2925 ;;		_LCD_Write_4Bit
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929     01E5                     _IO_Expander_Write:	
  2930                           ;psect for function _IO_Expander_Write
  2931                           
  2932                           
  2933                           ;incstack = 0
  2934                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  2935                           ;IO_Expander_Write@Data stored from wreg
  2936     01E5  00F1               	movwf	IO_Expander_Write@Data
  2937     01E6                     l1116:
  2938                           
  2939                           ;LCD_i2c.c: 184:     I2C_Master_Start();
  2940     01E6  120A  118A  216C  120A  118A  	fcall	_I2C_Master_Start
  2941                           
  2942                           ;LCD_i2c.c: 185:     I2C_Master_Write(i2c_add);
  2943     01EB  1283               	bcf	3,5	;RP0=0, select bank0
  2944     01EC  1303               	bcf	3,6	;RP1=0, select bank0
  2945     01ED  0834               	movf	_i2c_add,w
  2946     01EE  120A  118A  2197  120A  118A  	fcall	_I2C_Master_Write
  2947                           
  2948                           ;LCD_i2c.c: 186:     I2C_Master_Write(Data);
  2949     01F3  0871               	movf	IO_Expander_Write@Data,w
  2950     01F4  120A  118A  2197  120A  118A  	fcall	_I2C_Master_Write
  2951                           
  2952                           ;LCD_i2c.c: 187:     I2C_Master_Stop();
  2953     01F9  120A  118A  2175  120A  118A  	fcall	_I2C_Master_Stop
  2954     01FE                     l146:
  2955     01FE  0008               	return
  2956     01FF                     __end_of_IO_Expander_Write:
  2957                           
  2958                           	psect	text17
  2959     0197                     __ptext17:	
  2960 ;; *************** function _I2C_Master_Write *****************
  2961 ;; Defined at:
  2962 ;;		line 120 in file "LCD_i2c.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  data            1    wreg     unsigned char 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  data            1    0[COMMON] unsigned char 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  1    wreg      unsigned char 
  2969 ;; Registers used:
  2970 ;;		wreg, status,2, status,0, pclath, cstack
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2976 ;;      Params:         0       0       0       0       0
  2977 ;;      Locals:         1       0       0       0       0
  2978 ;;      Temps:          0       0       0       0       0
  2979 ;;      Totals:         1       0       0       0       0
  2980 ;;Total ram usage:        1 bytes
  2981 ;; Hardware stack levels used: 1
  2982 ;; Hardware stack levels required when called: 1
  2983 ;; This function calls:
  2984 ;;		_I2C_Master_Wait
  2985 ;; This function is called by:
  2986 ;;		_IO_Expander_Write
  2987 ;;		_setup
  2988 ;;		_update
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992     0197                     _I2C_Master_Write:	
  2993                           ;psect for function _I2C_Master_Write
  2994                           
  2995                           
  2996                           ;incstack = 0
  2997                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2998                           ;I2C_Master_Write@data stored from wreg
  2999     0197  00F0               	movwf	I2C_Master_Write@data
  3000     0198                     l1112:
  3001                           
  3002                           ;LCD_i2c.c: 121:     I2C_Master_Wait();
  3003     0198  120A  118A  218A  120A  118A  	fcall	_I2C_Master_Wait
  3004     019D                     l1114:
  3005                           
  3006                           ;LCD_i2c.c: 122:     SSPBUF = data;
  3007     019D  0870               	movf	I2C_Master_Write@data,w
  3008     019E  1283               	bcf	3,5	;RP0=0, select bank0
  3009     019F  1303               	bcf	3,6	;RP1=0, select bank0
  3010     01A0  0093               	movwf	19	;volatile
  3011     01A1                     l119:	
  3012                           ;LCD_i2c.c: 123:     while (!SSPIF);
  3013                           
  3014     01A1  1D8C               	btfss	12,3	;volatile
  3015     01A2  29A4               	goto	u361
  3016     01A3  29A5               	goto	u360
  3017     01A4                     u361:
  3018     01A4  29A1               	goto	l119
  3019     01A5                     u360:
  3020     01A5                     l121:
  3021                           
  3022                           ;LCD_i2c.c: 124:     SSPIF = 0;
  3023     01A5  118C               	bcf	12,3	;volatile
  3024     01A6                     l122:	
  3025                           ;LCD_i2c.c: 125:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  3026                           
  3027     01A6  0008               	return
  3028     01A7                     __end_of_I2C_Master_Write:
  3029                           
  3030                           	psect	text18
  3031     0175                     __ptext18:	
  3032 ;; *************** function _I2C_Master_Stop *****************
  3033 ;; Defined at:
  3034 ;;		line 103 in file "LCD_i2c.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;		None
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2, status,0, pclath, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3048 ;;      Params:         0       0       0       0       0
  3049 ;;      Locals:         0       0       0       0       0
  3050 ;;      Temps:          0       0       0       0       0
  3051 ;;      Totals:         0       0       0       0       0
  3052 ;;Total ram usage:        0 bytes
  3053 ;; Hardware stack levels used: 1
  3054 ;; Hardware stack levels required when called: 1
  3055 ;; This function calls:
  3056 ;;		_I2C_Master_Wait
  3057 ;; This function is called by:
  3058 ;;		_IO_Expander_Write
  3059 ;;		_setup
  3060 ;;		_update
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064     0175                     _I2C_Master_Stop:	
  3065                           ;psect for function _I2C_Master_Stop
  3066                           
  3067     0175                     l1108:	
  3068                           ;incstack = 0
  3069                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3070                           
  3071                           
  3072                           ;LCD_i2c.c: 104:     I2C_Master_Wait();
  3073     0175  120A  118A  218A  120A  118A  	fcall	_I2C_Master_Wait
  3074     017A                     l1110:
  3075                           
  3076                           ;LCD_i2c.c: 105:     PEN = 1;
  3077     017A  1683               	bsf	3,5	;RP0=1, select bank1
  3078     017B  1303               	bcf	3,6	;RP1=0, select bank1
  3079     017C  1511               	bsf	17,2	;volatile
  3080     017D                     l110:
  3081     017D  0008               	return
  3082     017E                     __end_of_I2C_Master_Stop:
  3083                           
  3084                           	psect	text19
  3085     016C                     __ptext19:	
  3086 ;; *************** function _I2C_Master_Start *****************
  3087 ;; Defined at:
  3088 ;;		line 93 in file "LCD_i2c.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0, pclath, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3102 ;;      Params:         0       0       0       0       0
  3103 ;;      Locals:         0       0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0
  3105 ;;      Totals:         0       0       0       0       0
  3106 ;;Total ram usage:        0 bytes
  3107 ;; Hardware stack levels used: 1
  3108 ;; Hardware stack levels required when called: 1
  3109 ;; This function calls:
  3110 ;;		_I2C_Master_Wait
  3111 ;; This function is called by:
  3112 ;;		_IO_Expander_Write
  3113 ;;		_setup
  3114 ;;		_update
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118     016C                     _I2C_Master_Start:	
  3119                           ;psect for function _I2C_Master_Start
  3120                           
  3121     016C                     l1104:	
  3122                           ;incstack = 0
  3123                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3124                           
  3125                           
  3126                           ;LCD_i2c.c: 94:     I2C_Master_Wait();
  3127     016C  120A  118A  218A  120A  118A  	fcall	_I2C_Master_Wait
  3128     0171                     l1106:
  3129                           
  3130                           ;LCD_i2c.c: 95:     SEN = 1;
  3131     0171  1683               	bsf	3,5	;RP0=1, select bank1
  3132     0172  1303               	bcf	3,6	;RP1=0, select bank1
  3133     0173  1411               	bsf	17,0	;volatile
  3134     0174                     l104:
  3135     0174  0008               	return
  3136     0175                     __end_of_I2C_Master_Start:
  3137                           
  3138                           	psect	text20
  3139     018A                     __ptext20:	
  3140 ;; *************** function _I2C_Master_Wait *****************
  3141 ;; Defined at:
  3142 ;;		line 89 in file "LCD_i2c.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3156 ;;      Params:         0       0       0       0       0
  3157 ;;      Locals:         0       0       0       0       0
  3158 ;;      Temps:          0       0       0       0       0
  3159 ;;      Totals:         0       0       0       0       0
  3160 ;;Total ram usage:        0 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		_I2C_Master_Start
  3166 ;;		_I2C_Master_Stop
  3167 ;;		_I2C_Master_Write
  3168 ;;		_I2C_Read_Byte
  3169 ;;		_I2C_Master_RepeatedStart
  3170 ;;		_I2C_ACK
  3171 ;;		_I2C_NACK
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175     018A                     _I2C_Master_Wait:	
  3176                           ;psect for function _I2C_Master_Wait
  3177                           
  3178     018A                     l1100:	
  3179                           ;incstack = 0
  3180                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3181                           
  3182     018A                     l98:	
  3183                           ;LCD_i2c.c: 90:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3184                           
  3185     018A  1683               	bsf	3,5	;RP0=1, select bank1
  3186     018B  1303               	bcf	3,6	;RP1=0, select bank1
  3187     018C  1914               	btfsc	20,2	;volatile
  3188     018D  298F               	goto	u341
  3189     018E  2990               	goto	u340
  3190     018F                     u341:
  3191     018F  298A               	goto	l98
  3192     0190                     u340:
  3193     0190                     l1102:
  3194     0190  0811               	movf	17,w	;volatile
  3195     0191  391F               	andlw	31
  3196     0192  1D03               	btfss	3,2
  3197     0193  2995               	goto	u351
  3198     0194  2996               	goto	u350
  3199     0195                     u351:
  3200     0195  298A               	goto	l98
  3201     0196                     u350:
  3202     0196                     l101:
  3203     0196  0008               	return
  3204     0197                     __end_of_I2C_Master_Wait:
  3205                           
  3206                           	psect	text21
  3207     01BA                     __ptext21:	
  3208 ;; *************** function _I2C_Master_Init *****************
  3209 ;; Defined at:
  3210 ;;		line 78 in file "LCD_i2c.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;		None
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;		None
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      void 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3224 ;;      Params:         0       0       0       0       0
  3225 ;;      Locals:         0       0       0       0       0
  3226 ;;      Temps:          0       0       0       0       0
  3227 ;;      Totals:         0       0       0       0       0
  3228 ;;Total ram usage:        0 bytes
  3229 ;; Hardware stack levels used: 1
  3230 ;; This function calls:
  3231 ;;		Nothing
  3232 ;; This function is called by:
  3233 ;;		_main
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237     01BA                     _I2C_Master_Init:	
  3238                           ;psect for function _I2C_Master_Init
  3239                           
  3240     01BA                     l1256:	
  3241                           ;incstack = 0
  3242                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  3243                           
  3244                           
  3245                           ;LCD_i2c.c: 79:     TRISC = 0X18;
  3246     01BA  3018               	movlw	24
  3247     01BB  1683               	bsf	3,5	;RP0=1, select bank1
  3248     01BC  1303               	bcf	3,6	;RP1=0, select bank1
  3249     01BD  0087               	movwf	7	;volatile
  3250     01BE                     l1258:
  3251                           
  3252                           ;LCD_i2c.c: 80:     PORTC = 0x00;
  3253     01BE  1283               	bcf	3,5	;RP0=0, select bank0
  3254     01BF  1303               	bcf	3,6	;RP1=0, select bank0
  3255     01C0  0187               	clrf	7	;volatile
  3256     01C1                     l1260:
  3257                           
  3258                           ;LCD_i2c.c: 81:     SSPCON = 0x28;
  3259     01C1  3028               	movlw	40
  3260     01C2  0094               	movwf	20	;volatile
  3261                           
  3262                           ;LCD_i2c.c: 82:     SSPCON2 = 0x00;
  3263     01C3  1683               	bsf	3,5	;RP0=1, select bank1
  3264     01C4  1303               	bcf	3,6	;RP1=0, select bank1
  3265     01C5  0191               	clrf	17	;volatile
  3266                           
  3267                           ;LCD_i2c.c: 83:     SSPSTAT = 0x00;
  3268     01C6  0194               	clrf	20	;volatile
  3269     01C7                     l1262:
  3270                           
  3271                           ;LCD_i2c.c: 84:     SSPADD = ((16000000 / 4) / 100000) - 1;
  3272     01C7  3027               	movlw	39
  3273     01C8  0093               	movwf	19	;volatile
  3274     01C9                     l1264:
  3275                           
  3276                           ;LCD_i2c.c: 85:     RC3 = 1;
  3277     01C9  1283               	bcf	3,5	;RP0=0, select bank0
  3278     01CA  1303               	bcf	3,6	;RP1=0, select bank0
  3279     01CB  1587               	bsf	7,3	;volatile
  3280     01CC                     l1266:
  3281                           
  3282                           ;LCD_i2c.c: 86:     RC4 = 1;
  3283     01CC  1607               	bsf	7,4	;volatile
  3284     01CD                     l95:
  3285     01CD  0008               	return
  3286     01CE                     __end_of_I2C_Master_Init:
  3287     007E                     btemp	set	126	;btemp
  3288     007E                     wtemp0	set	126

Data Sizes:
    Strings     53
    Constant    0
    Data        14
    BSS         5
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      3      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@Str	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), STR_10(CODE[5]), STR_11(CODE[5]), STR_2(CODE[4]), 
		 -> STR_3(CODE[4]), STR_4(CODE[5]), STR_5(CODE[5]), STR_6(CODE[5]), 
		 -> STR_7(CODE[5]), STR_8(CODE[5]), STR_9(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_dec2bcd
    _main->_update
    _update->_bcd2dec
    _bcd2dec->___wmul
    _setup->_dec2bcd
    _dec2bcd->___awdiv
    _days->_LCD_Write_String
    _LCD_Write_String->_lcd_data
    _lcd_data->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   12597
                                              0 BANK0      3     3      0
                    _I2C_Master_Init
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            ___awdiv
                            ___awmod
                               _days
                            _dec2bcd
                           _lcd_data
                              _setup
                             _update
 ---------------------------------------------------------------------------------
 (1) _update                                               2     2      0     842
                                             10 COMMON     2     2      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                      _I2C_Read_Byte
                            _bcd2dec
 ---------------------------------------------------------------------------------
 (2) _bcd2dec                                              4     2      2     820
                                              6 COMMON     4     2      2
                      _I2C_Read_Byte (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Byte                                        0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    3550
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _dec2bcd
 ---------------------------------------------------------------------------------
 (2) _dec2bcd                                              4     2      2    3528
                                              8 COMMON     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1360
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _days                                                 2     0      2     684
                                              9 COMMON     2     0      2
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     3     3      0     586
                                              6 COMMON     3     3      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_data                                             2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     351
                                              6 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             4     4      0     199
                                              6 COMMON     4     4      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_4Bit                                       2     2      0      89
                                              2 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (3) _IO_Expander_Write                                    1     1      0      44
                                              1 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _LCD_Init
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
   _LCD_Set_Cursor
     _LCD_CMD
   _LCD_Write_String
     _lcd_data
       _LCD_Write_4Bit
   ___awdiv
   ___awmod
   _days
     _LCD_Write_String
   _dec2bcd
     ___awdiv
     ___awmod
   _lcd_data
   _setup
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _dec2bcd
   _update
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _I2C_Read_Byte
       _I2C_Master_Wait
     _bcd2dec
       _I2C_Read_Byte (ARG)
       ___wmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3      15       5       26.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon May 27 19:18:10 2024

             lcd_data@Data 0075                          _i 002E                          pc 0002  
                       l85 061B                         l95 01CD                         l87 06F1  
                       l98 018A                         _RS 0030               ___awdiv@sign 0075  
                       fsr 0004        ___wmul@multiplicand 0072                        l101 0196  
                      l110 017D                        l104 0174                        l121 01A5  
                      l122 01A6                        l140 0360                        l125 01D6  
                      l119 01A1                        l143 04A9                        l127 01DB  
                      l152 0235                        l128 01E4                        l161 0297  
                      l146 01FE                        l155 0252                        l171 0311  
                      l180 060A                        l149 0219                        l174 02E1  
                      l168 0272                        l432 03B9                        l177 0536  
                      l266 02A4                        l419 0420                        l268 02BC  
                      _RC3 003B                        _RC4 003C                        u410 02B8  
                      u411 02B7                        u340 0190                        u500 0412  
                      u420 03BF                        u341 018F                        u501 0411  
                      u421 03BE                        u405 02AC                        u350 0196  
                      u510 0417                        u430 03CA                        u351 0195  
                      u511 0416                        u431 03C9                        u360 01A5  
                      u440 03DB                        u600 03B0                        u520 0366  
                      _PEN 048A                        u361 01A4                        u441 03DA  
                      u601 03AF                        u521 0365                        u610 0297  
                      u530 0371                        u611 0296                        u531 0370  
                      u460 03ED                        u540 037C                        u620 01DB  
                      u380 029E                        u461 03EC                        u541 037B  
                      u621 01DA                        u381 029D                        u375 0245  
                      u455 03DF                        u480 03FE                        u560 038E  
                      u640 06E4                        u481 03FD                        u561 038D  
                      u641 06E3                        u570 0398                        u650 07A6  
                      u635 0228                        u707 044D                        u475 03EE  
                      u571 0397                        u555 0380                        u395 02A5  
                      u651 07A5                        u660 07B9                        _SEN 0488  
                      u717 045C                        u485 03FA                        u661 07B8  
                      u590 03AB                        u727 046B                        u495 0406  
                      u591 03AA                        u575 0394                        u737 047C  
                      u585 039F                        u665 07B5                        u747 048F  
                      u757 04A2                        u677 07D2                        u767 0216  
                      u687 0430                        u697 043E                        _day 0022  
                      _min 0028                        _sec 002A                        fsr0 0004  
                      indf 0000               ___awmod@sign 0075            __end_of_LCD_CMD 0236  
      LCD_Write_String@Str 0078             _LCD_Set_Cursor 0253                       l1100 018A  
                     l1102 0190                       l1110 017A                       l1104 016C  
                     l1112 0198                       l1120 0206                       l1200 037C  
                     l1106 0171                       l1114 019D                       l1122 020D  
                     l1210 0398                       l1202 037F                       l1130 029A  
                     l1108 0175                       l1116 01E6                       l1300 049C  
                     l1124 0237                       l1220 03B5                       l1212 039E  
                     l1204 0386                       l1132 029E                       l1118 0200  
                     l1126 023B                       l1230 0277                       l1150 03C6  
                     l1142 03BA                       l1214 03A5                       l1206 038A  
                     l1310 04ED                       l1302 04AA                       l1134 02AB  
                     l1232 0284                       l1160 03DB                       l1152 03CA  
                     l1144 03BB                       l1208 038E                       l1216 03AB  
                     l1224 02E2                       l1312 04FE                       l1304 04BB  
                     l1240 01DC                       l1136 02B2                       l1128 0298  
                     l1320 0537                       l1400 0747                       l1250 0225  
                     l1322 0254                       l1234 028A                       l1170 03FE  
                     l1162 03DE                       l1154 03CF                       l1146 03BF  
                     l1218 03B0                       l1314 050F                       l1306 04CC  
                     l1242 01E1                       l1138 02B8                       l1410 07A6  
                     l1402 075D                       l1260 01C1                       l1324 0255  
                     l1228 0274                       l1340 0321                       l1180 0417  
                     l1172 0404                       l1164 03E5                       l1156 03D3  
                     l1148 03C4                       l1316 0520                       l1308 04DD  
                     l1236 01CE                       l1252 02BD                       l1412 07AC  
                     l1404 0763                       l1262 01C7                       l1246 021B  
                     l1270 0426                       l1326 025D                       l1342 0328  
                     l1334 0312                       l1182 041C                       l1174 0405  
                     l1166 03E9                       l1158 03D5                       l1190 0366  
                     l1318 0531                       l1238 01D3                       l1414 07B9  
                     l1406 0779                       l1264 01C9                       l1256 01BA  
                     l1248 021E                       l1280 0449                       l1272 042C  
                     l1328 0265                       l1344 032F                       l1336 0313  
                     l1352 0344                       l1176 040C                       l1168 03ED  
                     l1192 036B                       l1416 07BF                       l1408 078F  
                     l1360 0610                       l1266 01CC                       l1258 01BE  
                     l1290 0470                       l1282 0452                       l1274 0434  
                     l1346 0336                       l1338 031A                       l1178 0412  
                     l1194 036D                       l1186 0361                       l1418 07CA  
                     l1370 0647                       l1362 0616                       l1292 0476  
                     l1284 0458                       l1276 043A                       l1268 0422  
                     l1348 033D                       l1196 0371                       l1188 0362  
                     l1380 06A5                       l1372 065D                       l1364 0620  
                     l1294 0483                       l1286 0461                       l1278 0443  
                     l1198 0376                       l1390 06EB                       l1382 06AB  
                     l1374 0673                       l1366 0639                       l1358 060B  
                     l1296 0489                       l1288 0467                       l1392 06FF  
                     l1384 06C1                       l1376 0679                       l1368 0641  
                     l1298 0496                       l1394 0715                       l1386 06D7  
                     l1378 068F                       l1476 0349                       l1396 072B  
                     l1388 06E4                       l1478 026D                       l1398 0731  
                     STR_1 0009                       STR_2 0036                       STR_3 003A  
                     STR_4 000E                       STR_5 0027                       STR_6 0022  
                     STR_7 0018                       STR_8 0013                       STR_9 0031  
                     _RCEN 048B                       _RSEN 0489          ?_LCD_Write_String 0070  
                     _date 0026                       _days 0312                       _main 060B  
                     _hour 007C                       _year 0020                       btemp 007E  
                     start 0000         ??_LCD_Write_String 0076       LCD_Write_4Bit@Nibble 0073  
         __end_of_LCD_Init 04AA           ?_I2C_Master_Init 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070            __end_of_bcd2dec 02E2                      ?_days 0079  
                    ?_main 0070            __end_of_dec2bcd 0312                      _ACKEN 048C  
                    _ACKDT 048D            __end_of___awdiv 0421                      STR_10 001D  
                    STR_11 002C            __end_of___awmod 03BA            ___awdiv@divisor 0070  
          ___awdiv@counter 0074                      _PORTC 0007                      _TRISC 0087  
                    _SSPIF 0063     __end_of_LCD_Set_Cursor 0273                      _hour1 002C  
                    _month 0024                      _setup 04AA                      pclath 000A  
                    status 0003                      wtemp0 007E             _LCD_Write_4Bit 01FF  
          __initialization 07DD               __end_of_days 0361               __end_of_main 07DD  
        _IO_Expander_Write 01E5         ?_IO_Expander_Write 0070                     ??_days 007B  
                   ??_main 0031                  ??_LCD_CMD 0074          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070        ??_IO_Expander_Write 0071            ?_LCD_Set_Cursor 0076  
       ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0070           ___awdiv@dividend 0072  
                   ?_setup 0070                     _SSPADD 0093                     _SSPCON 0014  
                   _SSPBUF 0013     __end_of_LCD_Write_4Bit 021A  __end_of_IO_Expander_Write 01FF  
         __end_of_lcd_data 0253                  ??_bcd2dec 0078              _I2C_Read_Byte 01CE  
                ??_dec2bcd 007A                     ___wmul 0298                  ??___awdiv 0074  
                ??___awmod 0074           ___awdiv@quotient 0076            ___awmod@divisor 0070  
          ___awmod@counter 0074                     _update 0537               __pdataCOMMON 007C  
  __end_of__initialization 07FC                  ?_LCD_Init 0070            ?_LCD_Write_4Bit 0070  
           ?_I2C_Read_Byte 0070             __pcstackCOMMON 0070               __pidataBANK0 017E  
            __end_of_setup 0537                    ??_setup 007C                 __pbssBANK0 002C  
               ??_LCD_Init 0076                 __pmaintext 060B                    ?___wmul 0070  
                  _ACKSTAT 048E                    ?_update 0070                    _LCD_CMD 021A  
                  _SSPCON2 0091                  ?_lcd_data 0070                    _SSPSTAT 0094  
               __stringtab 0003                    _i2c_add 0034            ??_I2C_Read_Byte 0070  
                  _bcd2dec 02BD                    _dec2bcd 02E2                    ___awdiv 03BA  
                  ___awmod 0361           ??_LCD_Set_Cursor 0077                    __ptext1 0537  
                  __ptext2 02BD                    __ptext3 0298                    __ptext4 01CE  
                  __ptext5 04AA                    __ptext6 02E2                    __ptext7 0361  
                  __ptext8 03BA                    __ptext9 0312           ___awmod@dividend 0072  
                  days@day 0079                 ??_lcd_data 0074       end_of_initialization 07FC  
              bcd2dec@temp 0076                 LCD_CMD@CMD 0075           ??_LCD_Write_4Bit 0072  
        LCD_Write_String@i 0076             __end_of___wmul 02BD           _LCD_Write_String 0273  
            __pidataCOMMON 016A                dec2bcd@temp 0078             __end_of_update 060B  
      start_initialization 07DD          ??_I2C_Master_Init 0070          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070                   ??___wmul 0074                 init_fetch0 01A7  
              __pdataBANK0 0020                   ??_update 007A                   ?_LCD_CMD 0070  
                ___latbits 0002              __pcstackBANK0 0031                  __pnvBANK0 0034  
         _I2C_Master_Start 016C           _I2C_Master_Write 0197      IO_Expander_Write@Data 0071  
                 ?_bcd2dec 0076                   ?_dec2bcd 0078                   ?___awdiv 0070  
                 ?___awmod 0070       I2C_Master_Write@data 0070                  __pstrings 0003  
                 _LCD_Init 0421             ___wmul@product 0074      __end_of_I2C_Read_Byte 01E5  
              __stringbase 0008          ___wmul@multiplier 0070   __end_of_LCD_Write_String 0298  
       __end_of__stringtab 0009            _I2C_Master_Init 01BA            _I2C_Master_Wait 018A  
          _I2C_Master_Stop 0175                   __ptext10 0273                   __ptext11 0236  
                 __ptext20 018A                   __ptext12 0253                   __ptext21 01BA  
                 __ptext13 0421                   __ptext14 021A                   __ptext15 01FF  
                 __ptext16 01E5                   __ptext17 0197                   __ptext18 0175  
                 __ptext19 016C                   _lcd_data 0236   __end_of_I2C_Master_Start 0175  
 __end_of_I2C_Master_Write 01A7                   init_ram0 01AB                  stringcode 0003  
  __end_of_I2C_Master_Init 01CE    __end_of_I2C_Master_Wait 0197    __end_of_I2C_Master_Stop 017E  
          LCD_Init@I2C_Add 0079                   stringdir 0003                   stringtab 0003  
        LCD_Set_Cursor@COL 0076          LCD_Set_Cursor@ROW 0079  
