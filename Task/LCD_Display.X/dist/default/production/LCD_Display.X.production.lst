

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Dec 31 21:36:22 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 22/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171                           
   172                           	psect	idataBANK0
   173     06E9                     __pidataBANK0:
   174                           
   175                           ;initializer for _arr
   176     06E9  3450               	retlw	80
   177     06EA  344F               	retlw	79
   178     06EB  344F               	retlw	79
   179     06EC  344A               	retlw	74
   180     06ED  3441               	retlw	65
   181     06EE  3441               	retlw	65
   182     06EF  345F               	retlw	95
   183     06F0  3452               	retlw	82
   184     06F1  3400               	retlw	0
   185     0008                     _PORTD	set	8
   186     0038                     _RC0	set	56
   187     003B                     _RC3	set	59
   188     0088                     _TRISD	set	136
   189     0087                     _TRISC	set	135
   190                           
   191                           	psect	cinit
   192     07ED                     start_initialization:	
   193                           ; #config settings
   194                           
   195     07ED                     __initialization:
   196                           
   197                           ; Initialize objects allocated to BANK0
   198     07ED  1383               	bcf	3,7	;select IRP bank0
   199     07EE  3029               	movlw	low (__pdataBANK0+9)
   200     07EF  00FD               	movwf	btemp+-1
   201     07F0  3006               	movlw	high __pidataBANK0
   202     07F1  00FE               	movwf	btemp
   203     07F2  30E9               	movlw	low __pidataBANK0
   204     07F3  00FF               	movwf	btemp+1
   205     07F4  3020               	movlw	low __pdataBANK0
   206     07F5  0084               	movwf	4
   207     07F6  120A  118A  271C  120A  118A  	fcall	init_ram0
   208                           
   209                           ; Clear objects allocated to COMMON
   210     07FB  01F7               	clrf	__pbssCOMMON& (0+127)
   211     07FC                     end_of_initialization:	
   212                           ;End of C runtime variable initialization code
   213                           
   214     07FC                     __end_of__initialization:
   215     07FC  0183               	clrf	3
   216     07FD  120A  118A  2F2B   	ljmp	_main	;jump to C main() function
   217                           
   218                           	psect	bssCOMMON
   219     0077                     __pbssCOMMON:
   220     0077                     _i:
   221     0077                     	ds	1
   222                           
   223                           	psect	dataBANK0
   224     0020                     __pdataBANK0:
   225     0020                     _arr:
   226     0020                     	ds	9
   227                           
   228                           	psect	inittext
   229     0718                     init_fetch0:	
   230                           ;	Called with low address in FSR and high address in W
   231                           
   232     0718  087E               	movf	btemp,w
   233     0719  008A               	movwf	10
   234     071A  087F               	movf	btemp+1,w
   235     071B  0082               	movwf	2
   236     071C                     init_ram0:	
   237                           ;Called with:
   238                           ;	high address of idata address in btemp 
   239                           ;	low address of idata address in btemp+1 
   240                           ;	low address of data in FSR
   241                           ;	high address + 1 of data in btemp-1
   242                           
   243     071C  120A  118A  2718  120A  118A  	fcall	init_fetch0
   244     0721  0080               	movwf	0
   245     0722  0A84               	incf	4,f
   246     0723  0804               	movf	4,w
   247     0724  067D               	xorwf	btemp+-1,w
   248     0725  1903               	btfsc	3,2
   249     0726  3400               	retlw	0
   250     0727  0AFF               	incf	btemp+1,f
   251     0728  1903               	btfsc	3,2
   252     0729  0AFE               	incf	btemp,f
   253     072A  2F1C               	goto	init_ram0
   254                           
   255                           	psect	cstackCOMMON
   256     0070                     __pcstackCOMMON:
   257     0070                     ?_init:
   258     0070                     ?_LCD_Command:	
   259                           ; 1 bytes @ 0x0
   260                           
   261     0070                     ??_LCD_Command:	
   262                           ; 1 bytes @ 0x0
   263                           
   264     0070                     ?_LCD_Data:	
   265                           ; 1 bytes @ 0x0
   266                           
   267     0070                     ??_LCD_Data:	
   268                           ; 1 bytes @ 0x0
   269                           
   270     0070                     ?_main:	
   271                           ; 1 bytes @ 0x0
   272                           
   273                           
   274                           ; 1 bytes @ 0x0
   275     0070                     	ds	2
   276     0072                     LCD_Command@n:
   277     0072                     LCD_Data@n:	
   278                           ; 1 bytes @ 0x2
   279                           
   280                           
   281                           ; 1 bytes @ 0x2
   282     0072                     	ds	1
   283     0073                     ??_init:
   284                           
   285                           ; 1 bytes @ 0x3
   286     0073                     	ds	2
   287     0075                     ??_main:
   288                           
   289                           ; 1 bytes @ 0x5
   290     0075                     	ds	2
   291                           
   292                           	psect	maintext
   293     072B                     __pmaintext:	
   294 ;;
   295 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   296 ;;
   297 ;; *************** function _main *****************
   298 ;; Defined at:
   299 ;;		line 27 in file "LCD_Disp.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : B00/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   313 ;;      Params:         0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0
   315 ;;      Temps:          2       0       0       0       0
   316 ;;      Totals:         2       0       0       0       0
   317 ;;Total ram usage:        2 bytes
   318 ;; Hardware stack levels required when called: 2
   319 ;; This function calls:
   320 ;;		_LCD_Command
   321 ;;		_LCD_Data
   322 ;;		_init
   323 ;; This function is called by:
   324 ;;		Startup code after reset
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328     072B                     _main:	
   329                           ;psect for function _main
   330                           
   331     072B                     l719:	
   332                           ;incstack = 0
   333                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   334                           
   335                           
   336                           ;LCD_Disp.c: 28:     init();
   337     072B  120A  118A  2778  120A  118A  	fcall	_init
   338                           
   339                           ;LCD_Disp.c: 29:     LCD_Command(0x80);
   340     0730  3080               	movlw	128
   341     0731  120A  118A  2705  120A  118A  	fcall	_LCD_Command
   342     0736                     l721:
   343                           
   344                           ;LCD_Disp.c: 30:     for(i=0; i<=7; i++) {
   345     0736  01F7               	clrf	_i
   346     0737                     l727:
   347                           
   348                           ;LCD_Disp.c: 31:         LCD_Data(arr[i]);
   349     0737  0877               	movf	_i,w
   350     0738  3E20               	addlw	(low (_arr| 0))& (0+255)
   351     0739  0084               	movwf	4
   352     073A  1383               	bcf	3,7	;select IRP bank0
   353     073B  0800               	movf	0,w
   354     073C  120A  118A  26F2  120A  118A  	fcall	_LCD_Data
   355     0741                     l729:
   356                           
   357                           ;LCD_Disp.c: 32:     }
   358     0741  3001               	movlw	1
   359     0742  00FF               	movwf	btemp+1
   360     0743  087F               	movf	btemp+1,w
   361     0744  07F7               	addwf	_i,f
   362     0745                     l731:
   363     0745  3008               	movlw	8
   364     0746  0277               	subwf	_i,w
   365     0747  1C03               	skipc
   366     0748  2F4A               	goto	u31
   367     0749  2F4B               	goto	u30
   368     074A                     u31:
   369     074A  2F37               	goto	l727
   370     074B                     u30:
   371     074B                     l733:
   372                           
   373                           ;LCD_Disp.c: 33:     LCD_Command (0x04);
   374     074B  3004               	movlw	4
   375     074C  120A  118A  2705  120A  118A  	fcall	_LCD_Command
   376     0751                     l735:
   377                           
   378                           ;LCD_Disp.c: 34:     _delay((unsigned long)((100)*(6000000/4000.0)));
   379     0751  30C3               	movlw	195
   380     0752  00F6               	movwf	??_main+1
   381     0753  30CD               	movlw	205
   382     0754  00F5               	movwf	??_main
   383     0755                     u57:
   384     0755  0BF5               	decfsz	??_main,f
   385     0756  2F55               	goto	u57
   386     0757  0BF6               	decfsz	??_main+1,f
   387     0758  2F55               	goto	u57
   388     0759                     l737:
   389                           
   390                           ;LCD_Disp.c: 35:     LCD_Command(0xC7);
   391     0759  30C7               	movlw	199
   392     075A  120A  118A  2705  120A  118A  	fcall	_LCD_Command
   393     075F                     l739:
   394                           
   395                           ;LCD_Disp.c: 36:     for(i=0; i<=7; i++) {
   396     075F  01F7               	clrf	_i
   397     0760                     l745:
   398                           
   399                           ;LCD_Disp.c: 37:         LCD_Data(arr[i]);
   400     0760  0877               	movf	_i,w
   401     0761  3E20               	addlw	(low (_arr| 0))& (0+255)
   402     0762  0084               	movwf	4
   403     0763  1383               	bcf	3,7	;select IRP bank0
   404     0764  0800               	movf	0,w
   405     0765  120A  118A  26F2  120A  118A  	fcall	_LCD_Data
   406     076A                     l747:
   407                           
   408                           ;LCD_Disp.c: 38:     }
   409     076A  3001               	movlw	1
   410     076B  00FF               	movwf	btemp+1
   411     076C  087F               	movf	btemp+1,w
   412     076D  07F7               	addwf	_i,f
   413     076E                     l749:
   414     076E  3008               	movlw	8
   415     076F  0277               	subwf	_i,w
   416     0770  1C03               	skipc
   417     0771  2F73               	goto	u41
   418     0772  2F74               	goto	u40
   419     0773                     u41:
   420     0773  2F60               	goto	l745
   421     0774                     u40:
   422     0774                     l31:	
   423                           ;LCD_Disp.c: 43:     while(1);
   424                           
   425     0774  2F74               	goto	l31
   426     0775  120A  118A  2800   	ljmp	start
   427     0778                     __end_of_main:
   428                           
   429                           	psect	text1
   430     0778                     __ptext1:	
   431 ;; *************** function _init *****************
   432 ;; Defined at:
   433 ;;		line 46 in file "LCD_Disp.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, status,2, status,0, pclath, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   447 ;;      Params:         0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0
   449 ;;      Temps:          2       0       0       0       0
   450 ;;      Totals:         2       0       0       0       0
   451 ;;Total ram usage:        2 bytes
   452 ;; Hardware stack levels used: 1
   453 ;; Hardware stack levels required when called: 1
   454 ;; This function calls:
   455 ;;		_LCD_Command
   456 ;; This function is called by:
   457 ;;		_main
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461     0778                     _init:	
   462                           ;psect for function _init
   463                           
   464     0778                     l677:	
   465                           ;incstack = 0
   466                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
   467                           
   468                           
   469                           ;LCD_Disp.c: 47:     TRISC = 0x00;
   470     0778  1683               	bsf	3,5	;RP0=1, select bank1
   471     0779  1303               	bcf	3,6	;RP1=0, select bank1
   472     077A  0187               	clrf	7	;volatile
   473                           
   474                           ;LCD_Disp.c: 48:     TRISD = 0x00;
   475     077B  0188               	clrf	8	;volatile
   476     077C                     l679:
   477                           
   478                           ;LCD_Disp.c: 49:     LCD_Command (0x30);
   479     077C  3030               	movlw	48
   480     077D  120A  118A  2705  120A  118A  	fcall	_LCD_Command
   481     0782                     l681:
   482                           
   483                           ;LCD_Disp.c: 50:     _delay((unsigned long)((100)*(6000000/4000.0)));
   484     0782  30C3               	movlw	195
   485     0783  00F4               	movwf	??_init+1
   486     0784  30CD               	movlw	205
   487     0785  00F3               	movwf	??_init
   488     0786                     u67:
   489     0786  0BF3               	decfsz	??_init,f
   490     0787  2F86               	goto	u67
   491     0788  0BF4               	decfsz	??_init+1,f
   492     0789  2F86               	goto	u67
   493     078A                     l683:
   494                           
   495                           ;LCD_Disp.c: 51:     LCD_Command (0x30);
   496     078A  3030               	movlw	48
   497     078B  120A  118A  2705  120A  118A  	fcall	_LCD_Command
   498     0790                     l685:
   499                           
   500                           ;LCD_Disp.c: 52:     _delay((unsigned long)((100)*(6000000/4000.0)));
   501     0790  30C3               	movlw	195
   502     0791  00F4               	movwf	??_init+1
   503     0792  30CD               	movlw	205
   504     0793  00F3               	movwf	??_init
   505     0794                     u77:
   506     0794  0BF3               	decfsz	??_init,f
   507     0795  2F94               	goto	u77
   508     0796  0BF4               	decfsz	??_init+1,f
   509     0797  2F94               	goto	u77
   510     0798                     l687:
   511                           
   512                           ;LCD_Disp.c: 53:     LCD_Command (0x30);
   513     0798  3030               	movlw	48
   514     0799  120A  118A  2705  120A  118A  	fcall	_LCD_Command
   515     079E                     l689:
   516                           
   517                           ;LCD_Disp.c: 54:     _delay((unsigned long)((100)*(6000000/4000.0)));
   518     079E  30C3               	movlw	195
   519     079F  00F4               	movwf	??_init+1
   520     07A0  30CD               	movlw	205
   521     07A1  00F3               	movwf	??_init
   522     07A2                     u87:
   523     07A2  0BF3               	decfsz	??_init,f
   524     07A3  2FA2               	goto	u87
   525     07A4  0BF4               	decfsz	??_init+1,f
   526     07A5  2FA2               	goto	u87
   527     07A6                     l691:
   528                           
   529                           ;LCD_Disp.c: 55:     LCD_Command (0x30);
   530     07A6  3030               	movlw	48
   531     07A7  120A  118A  2705  120A  118A  	fcall	_LCD_Command
   532     07AC                     l693:
   533                           
   534                           ;LCD_Disp.c: 56:     _delay((unsigned long)((100)*(6000000/4000.0)));
   535     07AC  30C3               	movlw	195
   536     07AD  00F4               	movwf	??_init+1
   537     07AE  30CD               	movlw	205
   538     07AF  00F3               	movwf	??_init
   539     07B0                     u97:
   540     07B0  0BF3               	decfsz	??_init,f
   541     07B1  2FB0               	goto	u97
   542     07B2  0BF4               	decfsz	??_init+1,f
   543     07B3  2FB0               	goto	u97
   544     07B4                     l695:
   545                           
   546                           ;LCD_Disp.c: 57:     LCD_Command (0x38);
   547     07B4  3038               	movlw	56
   548     07B5  120A  118A  2705  120A  118A  	fcall	_LCD_Command
   549     07BA                     l697:
   550                           
   551                           ;LCD_Disp.c: 58:     _delay((unsigned long)((100)*(6000000/4000.0)));
   552     07BA  30C3               	movlw	195
   553     07BB  00F4               	movwf	??_init+1
   554     07BC  30CD               	movlw	205
   555     07BD  00F3               	movwf	??_init
   556     07BE                     u107:
   557     07BE  0BF3               	decfsz	??_init,f
   558     07BF  2FBE               	goto	u107
   559     07C0  0BF4               	decfsz	??_init+1,f
   560     07C1  2FBE               	goto	u107
   561     07C2                     l699:
   562                           
   563                           ;LCD_Disp.c: 59:     LCD_Command (0x06);
   564     07C2  3006               	movlw	6
   565     07C3  120A  118A  2705  120A  118A  	fcall	_LCD_Command
   566     07C8                     l701:
   567                           
   568                           ;LCD_Disp.c: 60:     _delay((unsigned long)((100)*(6000000/4000.0)));
   569     07C8  30C3               	movlw	195
   570     07C9  00F4               	movwf	??_init+1
   571     07CA  30CD               	movlw	205
   572     07CB  00F3               	movwf	??_init
   573     07CC                     u117:
   574     07CC  0BF3               	decfsz	??_init,f
   575     07CD  2FCC               	goto	u117
   576     07CE  0BF4               	decfsz	??_init+1,f
   577     07CF  2FCC               	goto	u117
   578     07D0                     l703:
   579                           
   580                           ;LCD_Disp.c: 61:     LCD_Command (0x0F);
   581     07D0  300F               	movlw	15
   582     07D1  120A  118A  2705  120A  118A  	fcall	_LCD_Command
   583     07D6                     l705:
   584                           
   585                           ;LCD_Disp.c: 62:     _delay((unsigned long)((100)*(6000000/4000.0)));
   586     07D6  30C3               	movlw	195
   587     07D7  00F4               	movwf	??_init+1
   588     07D8  30CD               	movlw	205
   589     07D9  00F3               	movwf	??_init
   590     07DA                     u127:
   591     07DA  0BF3               	decfsz	??_init,f
   592     07DB  2FDA               	goto	u127
   593     07DC  0BF4               	decfsz	??_init+1,f
   594     07DD  2FDA               	goto	u127
   595     07DE                     l707:
   596                           
   597                           ;LCD_Disp.c: 63:     LCD_Command (0x01);
   598     07DE  3001               	movlw	1
   599     07DF  120A  118A  2705  120A  118A  	fcall	_LCD_Command
   600     07E4                     l709:
   601                           
   602                           ;LCD_Disp.c: 64:     _delay((unsigned long)((100)*(6000000/4000.0)));
   603     07E4  30C3               	movlw	195
   604     07E5  00F4               	movwf	??_init+1
   605     07E6  30CD               	movlw	205
   606     07E7  00F3               	movwf	??_init
   607     07E8                     u137:
   608     07E8  0BF3               	decfsz	??_init,f
   609     07E9  2FE8               	goto	u137
   610     07EA  0BF4               	decfsz	??_init+1,f
   611     07EB  2FE8               	goto	u137
   612     07EC                     l37:
   613     07EC  0008               	return
   614     07ED                     __end_of_init:
   615                           
   616                           	psect	text2
   617     0705                     __ptext2:	
   618 ;; *************** function _LCD_Command *****************
   619 ;; Defined at:
   620 ;;		line 67 in file "LCD_Disp.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;  n               1    wreg     unsigned char 
   623 ;; Auto vars:     Size  Location     Type
   624 ;;  n               1    2[COMMON] unsigned char 
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   634 ;;      Params:         0       0       0       0       0
   635 ;;      Locals:         1       0       0       0       0
   636 ;;      Temps:          2       0       0       0       0
   637 ;;      Totals:         3       0       0       0       0
   638 ;;Total ram usage:        3 bytes
   639 ;; Hardware stack levels used: 1
   640 ;; This function calls:
   641 ;;		Nothing
   642 ;; This function is called by:
   643 ;;		_main
   644 ;;		_init
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648     0705                     _LCD_Command:	
   649                           ;psect for function _LCD_Command
   650                           
   651                           
   652                           ;incstack = 0
   653                           ; Regs used in _LCD_Command: [wreg]
   654                           ;LCD_Command@n stored from wreg
   655     0705  00F2               	movwf	LCD_Command@n
   656     0706                     l669:
   657                           
   658                           ;LCD_Disp.c: 68:     RC3 = 0;
   659     0706  1283               	bcf	3,5	;RP0=0, select bank0
   660     0707  1303               	bcf	3,6	;RP1=0, select bank0
   661     0708  1187               	bcf	7,3	;volatile
   662     0709                     l671:
   663                           
   664                           ;LCD_Disp.c: 69:     PORTD = n;
   665     0709  0872               	movf	LCD_Command@n,w
   666     070A  0088               	movwf	8	;volatile
   667     070B                     l673:
   668                           
   669                           ;LCD_Disp.c: 70:     RC0 = 1;
   670     070B  1407               	bsf	7,0	;volatile
   671                           
   672                           ;LCD_Disp.c: 71:     _delay((unsigned long)((100)*(6000000/4000.0)));
   673     070C  30C3               	movlw	195
   674     070D  00F1               	movwf	??_LCD_Command+1
   675     070E  30CD               	movlw	205
   676     070F  00F0               	movwf	??_LCD_Command
   677     0710                     u147:
   678     0710  0BF0               	decfsz	??_LCD_Command,f
   679     0711  2F10               	goto	u147
   680     0712  0BF1               	decfsz	??_LCD_Command+1,f
   681     0713  2F10               	goto	u147
   682     0714                     l675:
   683                           
   684                           ;LCD_Disp.c: 72:     RC0 = 0;
   685     0714  1283               	bcf	3,5	;RP0=0, select bank0
   686     0715  1303               	bcf	3,6	;RP1=0, select bank0
   687     0716  1007               	bcf	7,0	;volatile
   688     0717                     l40:
   689     0717  0008               	return
   690     0718                     __end_of_LCD_Command:
   691                           
   692                           	psect	text3
   693     06F2                     __ptext3:	
   694 ;; *************** function _LCD_Data *****************
   695 ;; Defined at:
   696 ;;		line 75 in file "LCD_Disp.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;  n               1    wreg     unsigned char 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  n               1    2[COMMON] unsigned char 
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   710 ;;      Params:         0       0       0       0       0
   711 ;;      Locals:         1       0       0       0       0
   712 ;;      Temps:          2       0       0       0       0
   713 ;;      Totals:         3       0       0       0       0
   714 ;;Total ram usage:        3 bytes
   715 ;; Hardware stack levels used: 1
   716 ;; This function calls:
   717 ;;		Nothing
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723     06F2                     _LCD_Data:	
   724                           ;psect for function _LCD_Data
   725                           
   726                           
   727                           ;incstack = 0
   728                           ; Regs used in _LCD_Data: [wreg]
   729                           ;LCD_Data@n stored from wreg
   730     06F2  00F2               	movwf	LCD_Data@n
   731     06F3                     l711:
   732                           
   733                           ;LCD_Disp.c: 76:     RC3 = 1;
   734     06F3  1283               	bcf	3,5	;RP0=0, select bank0
   735     06F4  1303               	bcf	3,6	;RP1=0, select bank0
   736     06F5  1587               	bsf	7,3	;volatile
   737     06F6                     l713:
   738                           
   739                           ;LCD_Disp.c: 77:     PORTD = n;
   740     06F6  0872               	movf	LCD_Data@n,w
   741     06F7  0088               	movwf	8	;volatile
   742     06F8                     l715:
   743                           
   744                           ;LCD_Disp.c: 78:     RC0 = 1;
   745     06F8  1407               	bsf	7,0	;volatile
   746                           
   747                           ;LCD_Disp.c: 79:     _delay((unsigned long)((100)*(6000000/4000.0)));
   748     06F9  30C3               	movlw	195
   749     06FA  00F1               	movwf	??_LCD_Data+1
   750     06FB  30CD               	movlw	205
   751     06FC  00F0               	movwf	??_LCD_Data
   752     06FD                     u157:
   753     06FD  0BF0               	decfsz	??_LCD_Data,f
   754     06FE  2EFD               	goto	u157
   755     06FF  0BF1               	decfsz	??_LCD_Data+1,f
   756     0700  2EFD               	goto	u157
   757     0701                     l717:
   758                           
   759                           ;LCD_Disp.c: 80:     RC0 = 0;
   760     0701  1283               	bcf	3,5	;RP0=0, select bank0
   761     0702  1303               	bcf	3,6	;RP1=0, select bank0
   762     0703  1007               	bcf	7,0	;volatile
   763     0704                     l43:
   764     0704  0008               	return
   765     0705                     __end_of_LCD_Data:
   766     007E                     btemp	set	126	;btemp
   767     007E                     wtemp0	set	126
   768                           
   769                           	psect	config
   770                           
   771                           ;Config register CONFIG @ 0x2007
   772                           ;	Oscillator Selection bits
   773                           ;	FOSC = EXTRC, RC oscillator
   774                           ;	Watchdog Timer Enable bit
   775                           ;	WDTE = OFF, WDT disabled
   776                           ;	Power-up Timer Enable bit
   777                           ;	PWRTE = OFF, PWRT disabled
   778                           ;	Brown-out Reset Enable bit
   779                           ;	BOREN = OFF, BOR disabled
   780                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   781                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   782                           ;	Data EEPROM Memory Code Protection bit
   783                           ;	CPD = OFF, Data EEPROM code protection off
   784                           ;	Flash Program Memory Write Enable bits
   785                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   786                           ;	In-Circuit Debugger Mode bit
   787                           ;	DEBUG = 0x1, unprogrammed default
   788                           ;	Flash Program Memory Code Protection bit
   789                           ;	CP = OFF, Code protection off
   790     2007                     	org	8199
   791     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80      0       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_init
    _init->_LCD_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      66
                                              5 COMMON     2     2      0
                        _LCD_Command
                           _LCD_Data
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      22
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Command
   _LCD_Data
   _init
     _LCD_Command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       9       5       11.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      11      12        0.0%
ABS                  0      0      11       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Dec 31 21:36:22 2023

                      _i 0077                        pc 0002             ?_LCD_Command 0070  
                     l31 0774                       l40 0717                       l43 0704  
                     l37 07EC                       u30 074B                       u31 074A  
                     u40 0774                       u41 0773                       u57 0755  
                     u67 0786                       u77 0794                       u87 07A2  
                     u97 07B0                       fsr 0004                      l701 07C8  
                    l711 06F3                      l703 07D0                      l713 06F6  
                    l705 07D6                      l721 0736                      l715 06F8  
                    l707 07DE                      l731 0745                      l717 0701  
                    l709 07E4                      l733 074B                      l671 0709  
                    l735 0751                      l727 0737                      l719 072B  
                    l673 070B                      l681 0782                      l745 0760  
                    l737 0759                      l729 0741                      l675 0714  
                    l691 07A6                      l683 078A                      l747 076A  
                    l739 075F                      l669 0706                      l693 07AC  
                    l685 0790                      l677 0778                      l749 076E  
                    l695 07B4                      l687 0798                      l679 077C  
                    l697 07BA                      l689 079E                      l699 07C2  
                    _RC0 0038                      _RC3 003B                      u107 07BE  
                    u117 07CC                      u127 07DA                      u137 07E8  
                    u147 0710                      u157 06FD                      _arr 0020  
                    fsr0 0004                      indf 0000                     _main 072B  
                   _init 0778                     btemp 007E                     start 0000  
       __end_of_LCD_Data 0705                    ?_main 0070                    ?_init 0070  
                  _PORTD 0008                    _TRISC 0087                    _TRISD 0088  
           LCD_Command@n 0072                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07ED             __end_of_main 0778  
           __end_of_init 07ED                   ??_main 0075                   ??_init 0073  
              ?_LCD_Data 0070  __end_of__initialization 07FC                LCD_Data@n 0072  
         __pcstackCOMMON 0070             __pidataBANK0 06E9               ??_LCD_Data 0070  
             __pmaintext 072B                  __ptext1 0778                  __ptext2 0705  
                __ptext3 06F2     end_of_initialization 07FC            ??_LCD_Command 0070  
    start_initialization 07ED               init_fetch0 0718              __pdataBANK0 0020  
    __end_of_LCD_Command 0718              __pbssCOMMON 0077                ___latbits 0002  
               _LCD_Data 06F2              _LCD_Command 0705                 init_ram0 071C  
