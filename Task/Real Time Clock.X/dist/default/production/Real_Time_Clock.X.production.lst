

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed May 29 14:38:30 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34     0000                     
    35                           ; Generated 22/03/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F877A Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     000E                     	;# 
    84     000E                     	;# 
    85     000F                     	;# 
    86     0010                     	;# 
    87     0011                     	;# 
    88     0012                     	;# 
    89     0013                     	;# 
    90     0014                     	;# 
    91     0015                     	;# 
    92     0015                     	;# 
    93     0016                     	;# 
    94     0017                     	;# 
    95     0018                     	;# 
    96     0019                     	;# 
    97     001A                     	;# 
    98     001B                     	;# 
    99     001B                     	;# 
   100     001C                     	;# 
   101     001D                     	;# 
   102     001E                     	;# 
   103     001F                     	;# 
   104     0081                     	;# 
   105     0085                     	;# 
   106     0086                     	;# 
   107     0087                     	;# 
   108     0088                     	;# 
   109     0089                     	;# 
   110     008C                     	;# 
   111     008D                     	;# 
   112     008E                     	;# 
   113     0091                     	;# 
   114     0092                     	;# 
   115     0093                     	;# 
   116     0094                     	;# 
   117     0098                     	;# 
   118     0099                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009E                     	;# 
   122     009F                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     018C                     	;# 
   128     018D                     	;# 
   129     0000                     	;# 
   130     0001                     	;# 
   131     0002                     	;# 
   132     0003                     	;# 
   133     0004                     	;# 
   134     0005                     	;# 
   135     0006                     	;# 
   136     0007                     	;# 
   137     0008                     	;# 
   138     0009                     	;# 
   139     000A                     	;# 
   140     000B                     	;# 
   141     000C                     	;# 
   142     000D                     	;# 
   143     000E                     	;# 
   144     000E                     	;# 
   145     000F                     	;# 
   146     0010                     	;# 
   147     0011                     	;# 
   148     0012                     	;# 
   149     0013                     	;# 
   150     0014                     	;# 
   151     0015                     	;# 
   152     0015                     	;# 
   153     0016                     	;# 
   154     0017                     	;# 
   155     0018                     	;# 
   156     0019                     	;# 
   157     001A                     	;# 
   158     001B                     	;# 
   159     001B                     	;# 
   160     001C                     	;# 
   161     001D                     	;# 
   162     001E                     	;# 
   163     001F                     	;# 
   164     0081                     	;# 
   165     0085                     	;# 
   166     0086                     	;# 
   167     0087                     	;# 
   168     0088                     	;# 
   169     0089                     	;# 
   170     008C                     	;# 
   171     008D                     	;# 
   172     008E                     	;# 
   173     0091                     	;# 
   174     0092                     	;# 
   175     0093                     	;# 
   176     0094                     	;# 
   177     0098                     	;# 
   178     0099                     	;# 
   179     009C                     	;# 
   180     009D                     	;# 
   181     009E                     	;# 
   182     009F                     	;# 
   183     010C                     	;# 
   184     010D                     	;# 
   185     010E                     	;# 
   186     010F                     	;# 
   187     018C                     	;# 
   188     018D                     	;# 
   189                           
   190                           	psect	idataBANK0
   191     00E6                     __pidataBANK0:
   192                           
   193                           ;initializer for _msg2
   194     00E6  3444               	retlw	68
   195     00E7  3441               	retlw	65
   196     00E8  3454               	retlw	84
   197     00E9  343A               	retlw	58
   198     00EA  3400               	retlw	0
   199                           
   200                           ;initializer for _msg1
   201     00EB  3454               	retlw	84
   202     00EC  3449               	retlw	73
   203     00ED  344D               	retlw	77
   204     00EE  343A               	retlw	58
   205     00EF  3400               	retlw	0
   206                           
   207                           ;initializer for _mode2
   208     00F0  3420               	retlw	32
   209     00F1  3450               	retlw	80
   210     00F2  344D               	retlw	77
   211     00F3  3400               	retlw	0
   212                           
   213                           ;initializer for _mode1
   214     00F4  3420               	retlw	32
   215     00F5  3441               	retlw	65
   216     00F6  344D               	retlw	77
   217     00F7  3400               	retlw	0
   218                           
   219                           ;initializer for _year
   220     00F8  3418               	retlw	24
   221     00F9  3400               	retlw	0
   222                           
   223                           ;initializer for _day
   224     00FA  3401               	retlw	1
   225     00FB  3400               	retlw	0
   226                           
   227                           ;initializer for _month
   228     00FC  3404               	retlw	4
   229     00FD  3400               	retlw	0
   230                           
   231                           ;initializer for _date
   232     00FE  3408               	retlw	8
   233     00FF  3400               	retlw	0
   234                           
   235                           ;initializer for _hour
   236     0100  340B               	retlw	11
   237     0101  3400               	retlw	0
   238                           
   239                           ;initializer for _min
   240     0102  343B               	retlw	59
   241     0103  3400               	retlw	0
   242                           
   243                           ;initializer for _sec
   244     0104  343A               	retlw	58
   245     0105  3400               	retlw	0
   246                           
   247                           	psect	nvBANK0
   248     0040                     __pnvBANK0:
   249     0040                     _dataC:
   250     0040                     	ds	2
   251     0042                     _DRC:
   252     0042                     	ds	2
   253     0044                     _PIF1:
   254     0044                     	ds	2
   255     0046                     _SSP_ADD:
   256     0046                     	ds	2
   257     0048                     _SSP_STAT:
   258     0048                     	ds	2
   259     004A                     _SSP_BUF:
   260     004A                     	ds	2
   261     004C                     _SSPCON_1:
   262     004C                     	ds	2
   263     004E                     _SSPCON_2:
   264     004E                     	ds	2
   265     0019                     _TXREG	set	25
   266     0018                     _RCSTA	set	24
   267     0006                     _PORTB	set	6
   268     0099                     _SPBRG	set	153
   269     0098                     _TXSTA	set	152
   270     0087                     _TRISC	set	135
   271     0081                     _OPTION_REG	set	129
   272     0086                     _TRISB	set	134
   273                           
   274                           	psect	cinit
   275     07E8                     start_initialization:	
   276                           ; #config settings
   277                           
   278     07E8                     __initialization:
   279                           
   280                           ; Initialize objects allocated to BANK0
   281     07E8  1383               	bcf	3,7	;select IRP bank0
   282     07E9  3040               	movlw	low (__pdataBANK0+32)
   283     07EA  00FD               	movwf	btemp+-1
   284     07EB  3000               	movlw	high __pidataBANK0
   285     07EC  00FE               	movwf	btemp
   286     07ED  30E6               	movlw	low __pidataBANK0
   287     07EE  00FF               	movwf	btemp+1
   288     07EF  3020               	movlw	low __pdataBANK0
   289     07F0  0084               	movwf	4
   290     07F1  120A  118A  20A6  120A  118A  	fcall	init_ram0
   291                           
   292                           ; Clear objects allocated to BANK0
   293     07F6  01DB               	clrf	__pbssBANK0& (0+127)
   294     07F7  01DC               	clrf	(__pbssBANK0+1)& (0+127)
   295     07F8  01DD               	clrf	(__pbssBANK0+2)& (0+127)
   296     07F9  01DE               	clrf	(__pbssBANK0+3)& (0+127)
   297     07FA  01DF               	clrf	(__pbssBANK0+4)& (0+127)
   298     07FB  01E0               	clrf	(__pbssBANK0+5)& (0+127)
   299     07FC                     end_of_initialization:	
   300                           ;End of C runtime variable initialization code
   301                           
   302     07FC                     __end_of__initialization:
   303     07FC  0183               	clrf	3
   304     07FD  120A  118A  2D8F   	ljmp	_main	;jump to C main() function
   305                           
   306                           	psect	bssBANK0
   307     005B                     __pbssBANK0:
   308     005B                     _hour1:
   309     005B                     	ds	2
   310     005D                     _i:
   311     005D                     	ds	2
   312     005F                     _dataD:
   313     005F                     	ds	1
   314     0060                     _DRD:
   315     0060                     	ds	1
   316                           
   317                           	psect	dataBANK0
   318     0020                     __pdataBANK0:
   319     0020                     _msg2:
   320     0020                     	ds	5
   321     0025                     _msg1:
   322     0025                     	ds	5
   323     002A                     _mode2:
   324     002A                     	ds	4
   325     002E                     _mode1:
   326     002E                     	ds	4
   327     0032                     _year:
   328     0032                     	ds	2
   329     0034                     _day:
   330     0034                     	ds	2
   331     0036                     _month:
   332     0036                     	ds	2
   333     0038                     _date:
   334     0038                     	ds	2
   335     003A                     _hour:
   336     003A                     	ds	2
   337     003C                     _min:
   338     003C                     	ds	2
   339     003E                     _sec:
   340     003E                     	ds	2
   341                           
   342                           	psect	inittext
   343     00A2                     init_fetch0:	
   344                           ;	Called with low address in FSR and high address in W
   345                           
   346     00A2  087E               	movf	btemp,w
   347     00A3  008A               	movwf	10
   348     00A4  087F               	movf	btemp+1,w
   349     00A5  0082               	movwf	2
   350     00A6                     init_ram0:	
   351                           ;Called with:
   352                           ;	high address of idata address in btemp 
   353                           ;	low address of idata address in btemp+1 
   354                           ;	low address of data in FSR
   355                           ;	high address + 1 of data in btemp-1
   356                           
   357     00A6  120A  118A  20A2  120A  118A  	fcall	init_fetch0
   358     00AB  0080               	movwf	0
   359     00AC  0A84               	incf	4,f
   360     00AD  0804               	movf	4,w
   361     00AE  067D               	xorwf	btemp+-1,w
   362     00AF  1903               	btfsc	3,2
   363     00B0  3400               	retlw	0
   364     00B1  0AFF               	incf	btemp+1,f
   365     00B2  1903               	btfsc	3,2
   366     00B3  0AFE               	incf	btemp,f
   367     00B4  28A6               	goto	init_ram0
   368                           
   369                           	psect	cstackCOMMON
   370     0070                     __pcstackCOMMON:
   371     0070                     ?_init:
   372     0070                     ??_init:	
   373                           ; 1 bytes @ 0x0
   374                           
   375     0070                     ?_UART_init:	
   376                           ; 1 bytes @ 0x0
   377                           
   378     0070                     ??_UART_init:	
   379                           ; 1 bytes @ 0x0
   380                           
   381     0070                     ?_setup:	
   382                           ; 1 bytes @ 0x0
   383                           
   384     0070                     ?_update:	
   385                           ; 1 bytes @ 0x0
   386                           
   387     0070                     ?_UART_send:	
   388                           ; 1 bytes @ 0x0
   389                           
   390     0070                     ??_UART_send:	
   391                           ; 1 bytes @ 0x0
   392                           
   393     0070                     ?_UART_newline:	
   394                           ; 1 bytes @ 0x0
   395                           
   396     0070                     ??_UART_newline:	
   397                           ; 1 bytes @ 0x0
   398                           
   399     0070                     ?_main:	
   400                           ; 1 bytes @ 0x0
   401                           
   402     0070                     ?_i2c_wait:	
   403                           ; 1 bytes @ 0x0
   404                           
   405     0070                     ??_i2c_wait:	
   406                           ; 1 bytes @ 0x0
   407                           
   408     0070                     ?_i2c_start:	
   409                           ; 1 bytes @ 0x0
   410                           
   411     0070                     ??_i2c_start:	
   412                           ; 1 bytes @ 0x0
   413                           
   414     0070                     ?_i2c_stop:	
   415                           ; 1 bytes @ 0x0
   416                           
   417     0070                     ??_i2c_stop:	
   418                           ; 1 bytes @ 0x0
   419                           
   420     0070                     ?_i2c_read:	
   421                           ; 1 bytes @ 0x0
   422                           
   423     0070                     ??_i2c_read:	
   424                           ; 1 bytes @ 0x0
   425                           
   426     0070                     ?_i2c_write:	
   427                           ; 1 bytes @ 0x0
   428                           
   429     0070                     ??_i2c_write:	
   430                           ; 1 bytes @ 0x0
   431                           
   432     0070                     ?___wmul:	
   433                           ; 1 bytes @ 0x0
   434                           
   435     0070                     ?___awdiv:	
   436                           ; 2 bytes @ 0x0
   437                           
   438     0070                     ?___awmod:	
   439                           ; 2 bytes @ 0x0
   440                           
   441     0070                     ?___lldiv:	
   442                           ; 2 bytes @ 0x0
   443                           
   444     0070                     i2c_write@data:	
   445                           ; 4 bytes @ 0x0
   446                           
   447     0070                     ___wmul@multiplier:	
   448                           ; 1 bytes @ 0x0
   449                           
   450     0070                     ___awdiv@divisor:	
   451                           ; 2 bytes @ 0x0
   452                           
   453     0070                     ___awmod@divisor:	
   454                           ; 2 bytes @ 0x0
   455                           
   456     0070                     ___lldiv@divisor:	
   457                           ; 2 bytes @ 0x0
   458                           
   459                           
   460                           ; 4 bytes @ 0x0
   461     0070                     	ds	2
   462     0072                     UART_send@data:
   463     0072                     i2c_read@val:	
   464                           ; 1 bytes @ 0x2
   465                           
   466     0072                     ___wmul@multiplicand:	
   467                           ; 2 bytes @ 0x2
   468                           
   469     0072                     ___awdiv@dividend:	
   470                           ; 2 bytes @ 0x2
   471                           
   472     0072                     ___awmod@dividend:	
   473                           ; 2 bytes @ 0x2
   474                           
   475                           
   476                           ; 2 bytes @ 0x2
   477     0072                     	ds	1
   478     0073                     ?_days:
   479     0073                     days@day:	
   480                           ; 1 bytes @ 0x3
   481                           
   482                           
   483                           ; 2 bytes @ 0x3
   484     0073                     	ds	1
   485     0074                     ??___wmul:
   486     0074                     ??___awdiv:	
   487                           ; 1 bytes @ 0x4
   488                           
   489     0074                     ??___awmod:	
   490                           ; 1 bytes @ 0x4
   491                           
   492     0074                     ___awdiv@counter:	
   493                           ; 1 bytes @ 0x4
   494                           
   495     0074                     ___awmod@counter:	
   496                           ; 1 bytes @ 0x4
   497                           
   498     0074                     ___wmul@product:	
   499                           ; 1 bytes @ 0x4
   500                           
   501     0074                     ___lldiv@dividend:	
   502                           ; 2 bytes @ 0x4
   503                           
   504                           
   505                           ; 4 bytes @ 0x4
   506     0074                     	ds	1
   507     0075                     ??_days:
   508     0075                     ___awdiv@sign:	
   509                           ; 1 bytes @ 0x5
   510                           
   511     0075                     ___awmod@sign:	
   512                           ; 1 bytes @ 0x5
   513                           
   514                           
   515                           ; 1 bytes @ 0x5
   516     0075                     	ds	1
   517     0076                     ?_bcd2dec:
   518     0076                     bcd2dec@temp:	
   519                           ; 2 bytes @ 0x6
   520                           
   521     0076                     ___awdiv@quotient:	
   522                           ; 2 bytes @ 0x6
   523                           
   524                           
   525                           ; 2 bytes @ 0x6
   526     0076                     	ds	2
   527     0078                     ??_bcd2dec:
   528     0078                     ??___lldiv:	
   529                           ; 1 bytes @ 0x8
   530                           
   531     0078                     ?_dec2bcd:	
   532                           ; 1 bytes @ 0x8
   533                           
   534     0078                     dec2bcd@temp:	
   535                           ; 2 bytes @ 0x8
   536                           
   537                           
   538                           ; 2 bytes @ 0x8
   539     0078                     	ds	1
   540     0079                     ___lldiv@quotient:
   541                           
   542                           ; 4 bytes @ 0x9
   543     0079                     	ds	1
   544     007A                     ??_update:
   545     007A                     ??_dec2bcd:	
   546                           ; 1 bytes @ 0xA
   547                           
   548                           
   549                           ; 1 bytes @ 0xA
   550     007A                     	ds	2
   551     007C                     ??_setup:
   552                           
   553                           ; 1 bytes @ 0xC
   554     007C                     	ds	1
   555     007D                     ___lldiv@counter:
   556                           
   557                           ; 1 bytes @ 0xD
   558     007D                     	ds	1
   559                           
   560                           	psect	cstackBANK0
   561     0050                     __pcstackBANK0:
   562     0050                     ?_i2c_init:
   563     0050                     i2c_init@baud:	
   564                           ; 1 bytes @ 0x0
   565                           
   566                           
   567                           ; 4 bytes @ 0x0
   568     0050                     	ds	4
   569     0054                     ??_i2c_init:
   570                           
   571                           ; 1 bytes @ 0x4
   572     0054                     	ds	4
   573     0058                     ??_main:
   574                           
   575                           ; 1 bytes @ 0x8
   576     0058                     	ds	3
   577                           
   578                           	psect	maintext
   579     058F                     __pmaintext:	
   580 ;;
   581 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   582 ;;
   583 ;; *************** function _main *****************
   584 ;; Defined at:
   585 ;;		line 37 in file "RTC.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;		None
   588 ;; Auto vars:     Size  Location     Type
   589 ;;		None
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : B00/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   599 ;;      Params:         0       0       0       0       0
   600 ;;      Locals:         0       0       0       0       0
   601 ;;      Temps:          0       3       0       0       0
   602 ;;      Totals:         0       3       0       0       0
   603 ;;Total ram usage:        3 bytes
   604 ;; Hardware stack levels required when called: 3
   605 ;; This function calls:
   606 ;;		_UART_init
   607 ;;		_UART_newline
   608 ;;		_UART_send
   609 ;;		___awdiv
   610 ;;		___awmod
   611 ;;		_days
   612 ;;		_dec2bcd
   613 ;;		_i2c_init
   614 ;;		_init
   615 ;;		_setup
   616 ;;		_update
   617 ;; This function is called by:
   618 ;;		Startup code after reset
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622     058F                     _main:	
   623                           ;psect for function _main
   624                           
   625     058F                     l1382:	
   626                           ;incstack = 0
   627                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   628                           
   629                           
   630                           ;RTC.c: 38:     init();
   631     058F  120A  118A  2090  120A  118A  	fcall	_init
   632     0594                     l1384:
   633                           
   634                           ;RTC.c: 39:     UART_init();
   635     0594  120A  118A  20CC  120A  118A  	fcall	_UART_init
   636     0599                     l1386:
   637                           
   638                           ;RTC.c: 40:     i2c_init(10000);
   639     0599  3000               	movlw	0
   640     059A  1283               	bcf	3,5	;RP0=0, select bank0
   641     059B  1303               	bcf	3,6	;RP1=0, select bank0
   642     059C  00D3               	movwf	i2c_init@baud+3
   643     059D  3000               	movlw	0
   644     059E  00D2               	movwf	i2c_init@baud+2
   645     059F  3027               	movlw	39
   646     05A0  00D1               	movwf	i2c_init@baud+1
   647     05A1  3010               	movlw	16
   648     05A2  00D0               	movwf	i2c_init@baud
   649     05A3  120A  118A  21E3  120A  118A  	fcall	_i2c_init
   650     05A8                     l1388:
   651                           
   652                           ;RTC.c: 41:     setup();
   653     05A8  120A  118A  235D  120A  118A  	fcall	_setup
   654     05AD                     l1390:
   655                           
   656                           ;RTC.c: 43:         update();
   657     05AD  120A  118A  24B9  120A  118A  	fcall	_update
   658     05B2                     l1392:
   659                           
   660                           ;RTC.c: 44:         hour1=(dec2bcd(hour)&0x1F)-6;
   661     05B2  1283               	bcf	3,5	;RP0=0, select bank0
   662     05B3  1303               	bcf	3,6	;RP1=0, select bank0
   663     05B4  083B               	movf	_hour+1,w
   664     05B5  00F9               	movwf	dec2bcd@temp+1
   665     05B6  083A               	movf	_hour,w
   666     05B7  00F8               	movwf	dec2bcd@temp
   667     05B8  120A  118A  2172  120A  118A  	fcall	_dec2bcd
   668     05BD  301F               	movlw	31
   669     05BE  0578               	andwf	?_dec2bcd,w
   670     05BF  1283               	bcf	3,5	;RP0=0, select bank0
   671     05C0  1303               	bcf	3,6	;RP1=0, select bank0
   672     05C1  00D8               	movwf	??_main
   673     05C2  3000               	movlw	0
   674     05C3  0579               	andwf	?_dec2bcd+1,w
   675     05C4  00D9               	movwf	??_main+1
   676     05C5  0858               	movf	??_main,w
   677     05C6  3EFA               	addlw	250
   678     05C7  00DB               	movwf	_hour1
   679     05C8  0859               	movf	??_main+1,w
   680     05C9  1803               	skipnc
   681     05CA  3E01               	addlw	1
   682     05CB  3EFF               	addlw	255
   683     05CC  00DC               	movwf	_hour1+1
   684     05CD                     l1394:
   685                           
   686                           ;RTC.c: 46:         for(i=0; i<4; i++)
   687     05CD  01DD               	clrf	_i
   688     05CE  01DE               	clrf	_i+1
   689     05CF                     l1400:
   690                           
   691                           ;RTC.c: 47:             UART_send(msg1[i]);
   692     05CF  1283               	bcf	3,5	;RP0=0, select bank0
   693     05D0  1303               	bcf	3,6	;RP1=0, select bank0
   694     05D1  085D               	movf	_i,w
   695     05D2  3E25               	addlw	(low (_msg1| 0))& (0+255)
   696     05D3  0084               	movwf	4
   697     05D4  1383               	bcf	3,7	;select IRP bank0
   698     05D5  0800               	movf	0,w
   699     05D6  120A  118A  2081  120A  118A  	fcall	_UART_send
   700     05DB                     l1402:
   701     05DB  3001               	movlw	1
   702     05DC  1283               	bcf	3,5	;RP0=0, select bank0
   703     05DD  1303               	bcf	3,6	;RP1=0, select bank0
   704     05DE  07DD               	addwf	_i,f
   705     05DF  1803               	skipnc
   706     05E0  0ADE               	incf	_i+1,f
   707     05E1  3000               	movlw	0
   708     05E2  07DE               	addwf	_i+1,f
   709     05E3                     l1404:
   710     05E3  085E               	movf	_i+1,w
   711     05E4  3A80               	xorlw	128
   712     05E5  00FF               	movwf	btemp+1
   713     05E6  3080               	movlw	128
   714     05E7  027F               	subwf	btemp+1,w
   715     05E8  1D03               	skipz
   716     05E9  2DEC               	goto	u785
   717     05EA  3004               	movlw	4
   718     05EB  025D               	subwf	_i,w
   719     05EC                     u785:
   720     05EC  1C03               	skipc
   721     05ED  2DEF               	goto	u781
   722     05EE  2DF0               	goto	u780
   723     05EF                     u781:
   724     05EF  2DCF               	goto	l1400
   725     05F0                     u780:
   726     05F0                     l1406:
   727                           
   728                           ;RTC.c: 48:         UART_send(hour1/10+'0');
   729     05F0  300A               	movlw	10
   730     05F1  00F0               	movwf	___awdiv@divisor
   731     05F2  3000               	movlw	0
   732     05F3  00F1               	movwf	___awdiv@divisor+1
   733     05F4  1283               	bcf	3,5	;RP0=0, select bank0
   734     05F5  1303               	bcf	3,6	;RP1=0, select bank0
   735     05F6  085C               	movf	_hour1+1,w
   736     05F7  00F3               	movwf	___awdiv@dividend+1
   737     05F8  085B               	movf	_hour1,w
   738     05F9  00F2               	movwf	___awdiv@dividend
   739     05FA  120A  118A  22F6  120A  118A  	fcall	___awdiv
   740     05FF  0870               	movf	?___awdiv,w
   741     0600  3E30               	addlw	48
   742     0601  120A  118A  2081  120A  118A  	fcall	_UART_send
   743                           
   744                           ;RTC.c: 49:         UART_send(hour1%10+'0');
   745     0606  300A               	movlw	10
   746     0607  00F0               	movwf	___awmod@divisor
   747     0608  3000               	movlw	0
   748     0609  00F1               	movwf	___awmod@divisor+1
   749     060A  1283               	bcf	3,5	;RP0=0, select bank0
   750     060B  1303               	bcf	3,6	;RP1=0, select bank0
   751     060C  085C               	movf	_hour1+1,w
   752     060D  00F3               	movwf	___awmod@dividend+1
   753     060E  085B               	movf	_hour1,w
   754     060F  00F2               	movwf	___awmod@dividend
   755     0610  120A  118A  2237  120A  118A  	fcall	___awmod
   756     0615  0870               	movf	?___awmod,w
   757     0616  3E30               	addlw	48
   758     0617  120A  118A  2081  120A  118A  	fcall	_UART_send
   759     061C                     l1408:
   760                           
   761                           ;RTC.c: 50:         UART_send('-');
   762     061C  302D               	movlw	45
   763     061D  120A  118A  2081  120A  118A  	fcall	_UART_send
   764     0622                     l1410:
   765                           
   766                           ;RTC.c: 51:         UART_send(min/10+'0');
   767     0622  300A               	movlw	10
   768     0623  00F0               	movwf	___awdiv@divisor
   769     0624  3000               	movlw	0
   770     0625  00F1               	movwf	___awdiv@divisor+1
   771     0626  1283               	bcf	3,5	;RP0=0, select bank0
   772     0627  1303               	bcf	3,6	;RP1=0, select bank0
   773     0628  083D               	movf	_min+1,w
   774     0629  00F3               	movwf	___awdiv@dividend+1
   775     062A  083C               	movf	_min,w
   776     062B  00F2               	movwf	___awdiv@dividend
   777     062C  120A  118A  22F6  120A  118A  	fcall	___awdiv
   778     0631  0870               	movf	?___awdiv,w
   779     0632  3E30               	addlw	48
   780     0633  120A  118A  2081  120A  118A  	fcall	_UART_send
   781     0638                     l1412:
   782                           
   783                           ;RTC.c: 52:         UART_send(min%10+'0');
   784     0638  300A               	movlw	10
   785     0639  00F0               	movwf	___awmod@divisor
   786     063A  3000               	movlw	0
   787     063B  00F1               	movwf	___awmod@divisor+1
   788     063C  1283               	bcf	3,5	;RP0=0, select bank0
   789     063D  1303               	bcf	3,6	;RP1=0, select bank0
   790     063E  083D               	movf	_min+1,w
   791     063F  00F3               	movwf	___awmod@dividend+1
   792     0640  083C               	movf	_min,w
   793     0641  00F2               	movwf	___awmod@dividend
   794     0642  120A  118A  2237  120A  118A  	fcall	___awmod
   795     0647  0870               	movf	?___awmod,w
   796     0648  3E30               	addlw	48
   797     0649  120A  118A  2081  120A  118A  	fcall	_UART_send
   798     064E                     l1414:
   799                           
   800                           ;RTC.c: 53:         UART_send('-');
   801     064E  302D               	movlw	45
   802     064F  120A  118A  2081  120A  118A  	fcall	_UART_send
   803                           
   804                           ;RTC.c: 54:         UART_send(sec/10+'0');
   805     0654  300A               	movlw	10
   806     0655  00F0               	movwf	___awdiv@divisor
   807     0656  3000               	movlw	0
   808     0657  00F1               	movwf	___awdiv@divisor+1
   809     0658  1283               	bcf	3,5	;RP0=0, select bank0
   810     0659  1303               	bcf	3,6	;RP1=0, select bank0
   811     065A  083F               	movf	_sec+1,w
   812     065B  00F3               	movwf	___awdiv@dividend+1
   813     065C  083E               	movf	_sec,w
   814     065D  00F2               	movwf	___awdiv@dividend
   815     065E  120A  118A  22F6  120A  118A  	fcall	___awdiv
   816     0663  0870               	movf	?___awdiv,w
   817     0664  3E30               	addlw	48
   818     0665  120A  118A  2081  120A  118A  	fcall	_UART_send
   819                           
   820                           ;RTC.c: 55:         UART_send(sec%10+'0');
   821     066A  300A               	movlw	10
   822     066B  00F0               	movwf	___awmod@divisor
   823     066C  3000               	movlw	0
   824     066D  00F1               	movwf	___awmod@divisor+1
   825     066E  1283               	bcf	3,5	;RP0=0, select bank0
   826     066F  1303               	bcf	3,6	;RP1=0, select bank0
   827     0670  083F               	movf	_sec+1,w
   828     0671  00F3               	movwf	___awmod@dividend+1
   829     0672  083E               	movf	_sec,w
   830     0673  00F2               	movwf	___awmod@dividend
   831     0674  120A  118A  2237  120A  118A  	fcall	___awmod
   832     0679  0870               	movf	?___awmod,w
   833     067A  3E30               	addlw	48
   834     067B  120A  118A  2081  120A  118A  	fcall	_UART_send
   835                           
   836                           ;RTC.c: 56:         if(!(dec2bcd(hour)&0x20))
   837     0680  1283               	bcf	3,5	;RP0=0, select bank0
   838     0681  1303               	bcf	3,6	;RP1=0, select bank0
   839     0682  083B               	movf	_hour+1,w
   840     0683  00F9               	movwf	dec2bcd@temp+1
   841     0684  083A               	movf	_hour,w
   842     0685  00F8               	movwf	dec2bcd@temp
   843     0686  120A  118A  2172  120A  118A  	fcall	_dec2bcd
   844     068B  1AF8               	btfsc	?_dec2bcd,5
   845     068C  2E8E               	goto	u791
   846     068D  2E8F               	goto	u790
   847     068E                     u791:
   848     068E  2EB5               	goto	l1428
   849     068F                     u790:
   850     068F                     l1416:
   851                           
   852                           ;RTC.c: 57:             for(i=0; i<3; i++)
   853     068F  1283               	bcf	3,5	;RP0=0, select bank0
   854     0690  1303               	bcf	3,6	;RP1=0, select bank0
   855     0691  01DD               	clrf	_i
   856     0692  01DE               	clrf	_i+1
   857     0693                     l1422:
   858                           
   859                           ;RTC.c: 58:                 UART_send(mode1[i]);
   860     0693  1283               	bcf	3,5	;RP0=0, select bank0
   861     0694  1303               	bcf	3,6	;RP1=0, select bank0
   862     0695  085D               	movf	_i,w
   863     0696  3E2E               	addlw	(low (_mode1| 0))& (0+255)
   864     0697  0084               	movwf	4
   865     0698  1383               	bcf	3,7	;select IRP bank0
   866     0699  0800               	movf	0,w
   867     069A  120A  118A  2081  120A  118A  	fcall	_UART_send
   868     069F                     l1424:
   869     069F  3001               	movlw	1
   870     06A0  1283               	bcf	3,5	;RP0=0, select bank0
   871     06A1  1303               	bcf	3,6	;RP1=0, select bank0
   872     06A2  07DD               	addwf	_i,f
   873     06A3  1803               	skipnc
   874     06A4  0ADE               	incf	_i+1,f
   875     06A5  3000               	movlw	0
   876     06A6  07DE               	addwf	_i+1,f
   877     06A7                     l1426:
   878     06A7  085E               	movf	_i+1,w
   879     06A8  3A80               	xorlw	128
   880     06A9  00FF               	movwf	btemp+1
   881     06AA  3080               	movlw	128
   882     06AB  027F               	subwf	btemp+1,w
   883     06AC  1D03               	skipz
   884     06AD  2EB0               	goto	u805
   885     06AE  3003               	movlw	3
   886     06AF  025D               	subwf	_i,w
   887     06B0                     u805:
   888     06B0  1C03               	skipc
   889     06B1  2EB3               	goto	u801
   890     06B2  2EB4               	goto	u800
   891     06B3                     u801:
   892     06B3  2E93               	goto	l1422
   893     06B4                     u800:
   894     06B4  2EDA               	goto	l1440
   895     06B5                     l1428:
   896                           
   897                           ;RTC.c: 60:             for(i=0; i<3; i++)
   898     06B5  1283               	bcf	3,5	;RP0=0, select bank0
   899     06B6  1303               	bcf	3,6	;RP1=0, select bank0
   900     06B7  01DD               	clrf	_i
   901     06B8  01DE               	clrf	_i+1
   902     06B9                     l1434:
   903                           
   904                           ;RTC.c: 61:                 UART_send(mode2[i]);
   905     06B9  1283               	bcf	3,5	;RP0=0, select bank0
   906     06BA  1303               	bcf	3,6	;RP1=0, select bank0
   907     06BB  085D               	movf	_i,w
   908     06BC  3E2A               	addlw	(low (_mode2| 0))& (0+255)
   909     06BD  0084               	movwf	4
   910     06BE  1383               	bcf	3,7	;select IRP bank0
   911     06BF  0800               	movf	0,w
   912     06C0  120A  118A  2081  120A  118A  	fcall	_UART_send
   913     06C5                     l1436:
   914     06C5  3001               	movlw	1
   915     06C6  1283               	bcf	3,5	;RP0=0, select bank0
   916     06C7  1303               	bcf	3,6	;RP1=0, select bank0
   917     06C8  07DD               	addwf	_i,f
   918     06C9  1803               	skipnc
   919     06CA  0ADE               	incf	_i+1,f
   920     06CB  3000               	movlw	0
   921     06CC  07DE               	addwf	_i+1,f
   922     06CD                     l1438:
   923     06CD  085E               	movf	_i+1,w
   924     06CE  3A80               	xorlw	128
   925     06CF  00FF               	movwf	btemp+1
   926     06D0  3080               	movlw	128
   927     06D1  027F               	subwf	btemp+1,w
   928     06D2  1D03               	skipz
   929     06D3  2ED6               	goto	u815
   930     06D4  3003               	movlw	3
   931     06D5  025D               	subwf	_i,w
   932     06D6                     u815:
   933     06D6  1C03               	skipc
   934     06D7  2ED9               	goto	u811
   935     06D8  2EDA               	goto	u810
   936     06D9                     u811:
   937     06D9  2EB9               	goto	l1434
   938     06DA                     u810:
   939     06DA                     l1440:
   940                           
   941                           ;RTC.c: 62:         UART_newline();
   942     06DA  120A  118A  205E  120A  118A  	fcall	_UART_newline
   943     06DF                     l1442:
   944                           
   945                           ;RTC.c: 64:         for(i=0; i<4; i++)
   946     06DF  1283               	bcf	3,5	;RP0=0, select bank0
   947     06E0  1303               	bcf	3,6	;RP1=0, select bank0
   948     06E1  01DD               	clrf	_i
   949     06E2  01DE               	clrf	_i+1
   950     06E3                     l1448:
   951                           
   952                           ;RTC.c: 65:             UART_send(msg2[i]);
   953     06E3  1283               	bcf	3,5	;RP0=0, select bank0
   954     06E4  1303               	bcf	3,6	;RP1=0, select bank0
   955     06E5  085D               	movf	_i,w
   956     06E6  3E20               	addlw	(low (_msg2| 0))& (0+255)
   957     06E7  0084               	movwf	4
   958     06E8  1383               	bcf	3,7	;select IRP bank0
   959     06E9  0800               	movf	0,w
   960     06EA  120A  118A  2081  120A  118A  	fcall	_UART_send
   961     06EF                     l1450:
   962     06EF  3001               	movlw	1
   963     06F0  1283               	bcf	3,5	;RP0=0, select bank0
   964     06F1  1303               	bcf	3,6	;RP1=0, select bank0
   965     06F2  07DD               	addwf	_i,f
   966     06F3  1803               	skipnc
   967     06F4  0ADE               	incf	_i+1,f
   968     06F5  3000               	movlw	0
   969     06F6  07DE               	addwf	_i+1,f
   970     06F7                     l1452:
   971     06F7  085E               	movf	_i+1,w
   972     06F8  3A80               	xorlw	128
   973     06F9  00FF               	movwf	btemp+1
   974     06FA  3080               	movlw	128
   975     06FB  027F               	subwf	btemp+1,w
   976     06FC  1D03               	skipz
   977     06FD  2F00               	goto	u825
   978     06FE  3004               	movlw	4
   979     06FF  025D               	subwf	_i,w
   980     0700                     u825:
   981     0700  1C03               	skipc
   982     0701  2F03               	goto	u821
   983     0702  2F04               	goto	u820
   984     0703                     u821:
   985     0703  2EE3               	goto	l1448
   986     0704                     u820:
   987     0704                     l1454:
   988                           
   989                           ;RTC.c: 66:         UART_send(date/10+'0');
   990     0704  300A               	movlw	10
   991     0705  00F0               	movwf	___awdiv@divisor
   992     0706  3000               	movlw	0
   993     0707  00F1               	movwf	___awdiv@divisor+1
   994     0708  1283               	bcf	3,5	;RP0=0, select bank0
   995     0709  1303               	bcf	3,6	;RP1=0, select bank0
   996     070A  0839               	movf	_date+1,w
   997     070B  00F3               	movwf	___awdiv@dividend+1
   998     070C  0838               	movf	_date,w
   999     070D  00F2               	movwf	___awdiv@dividend
  1000     070E  120A  118A  22F6  120A  118A  	fcall	___awdiv
  1001     0713  0870               	movf	?___awdiv,w
  1002     0714  3E30               	addlw	48
  1003     0715  120A  118A  2081  120A  118A  	fcall	_UART_send
  1004                           
  1005                           ;RTC.c: 67:         UART_send(date%10+'0');
  1006     071A  300A               	movlw	10
  1007     071B  00F0               	movwf	___awmod@divisor
  1008     071C  3000               	movlw	0
  1009     071D  00F1               	movwf	___awmod@divisor+1
  1010     071E  1283               	bcf	3,5	;RP0=0, select bank0
  1011     071F  1303               	bcf	3,6	;RP1=0, select bank0
  1012     0720  0839               	movf	_date+1,w
  1013     0721  00F3               	movwf	___awmod@dividend+1
  1014     0722  0838               	movf	_date,w
  1015     0723  00F2               	movwf	___awmod@dividend
  1016     0724  120A  118A  2237  120A  118A  	fcall	___awmod
  1017     0729  0870               	movf	?___awmod,w
  1018     072A  3E30               	addlw	48
  1019     072B  120A  118A  2081  120A  118A  	fcall	_UART_send
  1020     0730                     l1456:
  1021                           
  1022                           ;RTC.c: 68:         UART_send('-');
  1023     0730  302D               	movlw	45
  1024     0731  120A  118A  2081  120A  118A  	fcall	_UART_send
  1025     0736                     l1458:
  1026                           
  1027                           ;RTC.c: 69:         UART_send(month/10+'0');
  1028     0736  300A               	movlw	10
  1029     0737  00F0               	movwf	___awdiv@divisor
  1030     0738  3000               	movlw	0
  1031     0739  00F1               	movwf	___awdiv@divisor+1
  1032     073A  1283               	bcf	3,5	;RP0=0, select bank0
  1033     073B  1303               	bcf	3,6	;RP1=0, select bank0
  1034     073C  0837               	movf	_month+1,w
  1035     073D  00F3               	movwf	___awdiv@dividend+1
  1036     073E  0836               	movf	_month,w
  1037     073F  00F2               	movwf	___awdiv@dividend
  1038     0740  120A  118A  22F6  120A  118A  	fcall	___awdiv
  1039     0745  0870               	movf	?___awdiv,w
  1040     0746  3E30               	addlw	48
  1041     0747  120A  118A  2081  120A  118A  	fcall	_UART_send
  1042     074C                     l1460:
  1043                           
  1044                           ;RTC.c: 70:         UART_send(month%10+'0');
  1045     074C  300A               	movlw	10
  1046     074D  00F0               	movwf	___awmod@divisor
  1047     074E  3000               	movlw	0
  1048     074F  00F1               	movwf	___awmod@divisor+1
  1049     0750  1283               	bcf	3,5	;RP0=0, select bank0
  1050     0751  1303               	bcf	3,6	;RP1=0, select bank0
  1051     0752  0837               	movf	_month+1,w
  1052     0753  00F3               	movwf	___awmod@dividend+1
  1053     0754  0836               	movf	_month,w
  1054     0755  00F2               	movwf	___awmod@dividend
  1055     0756  120A  118A  2237  120A  118A  	fcall	___awmod
  1056     075B  0870               	movf	?___awmod,w
  1057     075C  3E30               	addlw	48
  1058     075D  120A  118A  2081  120A  118A  	fcall	_UART_send
  1059     0762                     l1462:
  1060                           
  1061                           ;RTC.c: 71:         UART_send('-');
  1062     0762  302D               	movlw	45
  1063     0763  120A  118A  2081  120A  118A  	fcall	_UART_send
  1064                           
  1065                           ;RTC.c: 72:         UART_send(year/10+'0');
  1066     0768  300A               	movlw	10
  1067     0769  00F0               	movwf	___awdiv@divisor
  1068     076A  3000               	movlw	0
  1069     076B  00F1               	movwf	___awdiv@divisor+1
  1070     076C  1283               	bcf	3,5	;RP0=0, select bank0
  1071     076D  1303               	bcf	3,6	;RP1=0, select bank0
  1072     076E  0833               	movf	_year+1,w
  1073     076F  00F3               	movwf	___awdiv@dividend+1
  1074     0770  0832               	movf	_year,w
  1075     0771  00F2               	movwf	___awdiv@dividend
  1076     0772  120A  118A  22F6  120A  118A  	fcall	___awdiv
  1077     0777  0870               	movf	?___awdiv,w
  1078     0778  3E30               	addlw	48
  1079     0779  120A  118A  2081  120A  118A  	fcall	_UART_send
  1080                           
  1081                           ;RTC.c: 73:         UART_send(year%10+'0');
  1082     077E  300A               	movlw	10
  1083     077F  00F0               	movwf	___awmod@divisor
  1084     0780  3000               	movlw	0
  1085     0781  00F1               	movwf	___awmod@divisor+1
  1086     0782  1283               	bcf	3,5	;RP0=0, select bank0
  1087     0783  1303               	bcf	3,6	;RP1=0, select bank0
  1088     0784  0833               	movf	_year+1,w
  1089     0785  00F3               	movwf	___awmod@dividend+1
  1090     0786  0832               	movf	_year,w
  1091     0787  00F2               	movwf	___awmod@dividend
  1092     0788  120A  118A  2237  120A  118A  	fcall	___awmod
  1093     078D  0870               	movf	?___awmod,w
  1094     078E  3E30               	addlw	48
  1095     078F  120A  118A  2081  120A  118A  	fcall	_UART_send
  1096                           
  1097                           ;RTC.c: 74:         if(dec2bcd(hour)&0x52) {
  1098     0794  1283               	bcf	3,5	;RP0=0, select bank0
  1099     0795  1303               	bcf	3,6	;RP1=0, select bank0
  1100     0796  083B               	movf	_hour+1,w
  1101     0797  00F9               	movwf	dec2bcd@temp+1
  1102     0798  083A               	movf	_hour,w
  1103     0799  00F8               	movwf	dec2bcd@temp
  1104     079A  120A  118A  2172  120A  118A  	fcall	_dec2bcd
  1105     079F  3052               	movlw	82
  1106     07A0  0578               	andwf	?_dec2bcd,w
  1107     07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1108     07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1109     07A3  00D8               	movwf	??_main
  1110     07A4  3000               	movlw	0
  1111     07A5  0579               	andwf	?_dec2bcd+1,w
  1112     07A6  00D9               	movwf	??_main+1
  1113     07A7  0858               	movf	??_main,w
  1114     07A8  0459               	iorwf	??_main+1,w
  1115     07A9  1903               	btfsc	3,2
  1116     07AA  2FAC               	goto	u831
  1117     07AB  2FAD               	goto	u830
  1118     07AC                     u831:
  1119     07AC  2FC6               	goto	l1470
  1120     07AD                     u830:
  1121     07AD                     l1464:
  1122                           
  1123                           ;RTC.c: 75:             day++;
  1124     07AD  3001               	movlw	1
  1125     07AE  07B4               	addwf	_day,f
  1126     07AF  1803               	skipnc
  1127     07B0  0AB5               	incf	_day+1,f
  1128     07B1  3000               	movlw	0
  1129     07B2  07B5               	addwf	_day+1,f
  1130     07B3                     l1466:
  1131                           
  1132                           ;RTC.c: 76:             if(day>7)
  1133     07B3  0835               	movf	_day+1,w
  1134     07B4  3A80               	xorlw	128
  1135     07B5  00FF               	movwf	btemp+1
  1136     07B6  3080               	movlw	128
  1137     07B7  027F               	subwf	btemp+1,w
  1138     07B8  1D03               	skipz
  1139     07B9  2FBC               	goto	u845
  1140     07BA  3008               	movlw	8
  1141     07BB  0234               	subwf	_day,w
  1142     07BC                     u845:
  1143     07BC  1C03               	skipc
  1144     07BD  2FBF               	goto	u841
  1145     07BE  2FC0               	goto	u840
  1146     07BF                     u841:
  1147     07BF  2FC6               	goto	l1470
  1148     07C0                     u840:
  1149     07C0                     l1468:
  1150                           
  1151                           ;RTC.c: 77:                 day=1;
  1152     07C0  3001               	movlw	1
  1153     07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1154     07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1155     07C3  00B4               	movwf	_day
  1156     07C4  3000               	movlw	0
  1157     07C5  00B5               	movwf	_day+1
  1158     07C6                     l1470:
  1159                           
  1160                           ;RTC.c: 79:         days(day);
  1161     07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1162     07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1163     07C8  0835               	movf	_day+1,w
  1164     07C9  00F4               	movwf	days@day+1
  1165     07CA  0834               	movf	_day,w
  1166     07CB  00F3               	movwf	days@day
  1167     07CC  120A  118A  23EC  120A  118A  	fcall	_days
  1168     07D1                     l1472:
  1169                           
  1170                           ;RTC.c: 80:         UART_newline();
  1171     07D1  120A  118A  205E  120A  118A  	fcall	_UART_newline
  1172     07D6                     l1474:
  1173                           
  1174                           ;RTC.c: 81:         _delay((unsigned long)((100)*(20000000/4000.0)));
  1175     07D6  3003               	movlw	3
  1176     07D7  1283               	bcf	3,5	;RP0=0, select bank0
  1177     07D8  1303               	bcf	3,6	;RP1=0, select bank0
  1178     07D9  00DA               	movwf	??_main+2
  1179     07DA  308A               	movlw	138
  1180     07DB  00D9               	movwf	??_main+1
  1181     07DC  3055               	movlw	85
  1182     07DD  00D8               	movwf	??_main
  1183     07DE                     u857:
  1184     07DE  0BD8               	decfsz	??_main,f
  1185     07DF  2FDE               	goto	u857
  1186     07E0  0BD9               	decfsz	??_main+1,f
  1187     07E1  2FDE               	goto	u857
  1188     07E2  0BDA               	decfsz	??_main+2,f
  1189     07E3  2FDE               	goto	u857
  1190     07E4  2DAD               	goto	l1390
  1191     07E5  120A  118A  2800   	ljmp	start
  1192     07E8                     __end_of_main:
  1193                           
  1194                           	psect	text1
  1195     04B9                     __ptext1:	
  1196 ;; *************** function _update *****************
  1197 ;; Defined at:
  1198 ;;		line 296 in file "RTC.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         0       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0
  1214 ;;      Temps:          2       0       0       0       0
  1215 ;;      Totals:         2       0       0       0       0
  1216 ;;Total ram usage:        2 bytes
  1217 ;; Hardware stack levels used: 1
  1218 ;; Hardware stack levels required when called: 2
  1219 ;; This function calls:
  1220 ;;		_bcd2dec
  1221 ;;		_i2c_read
  1222 ;;		_i2c_start
  1223 ;;		_i2c_stop
  1224 ;;		_i2c_write
  1225 ;; This function is called by:
  1226 ;;		_main
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230     04B9                     _update:	
  1231                           ;psect for function _update
  1232                           
  1233     04B9                     l1330:	
  1234                           ;incstack = 0
  1235                           ; Regs used in _update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1236                           
  1237                           
  1238                           ;RTC.c: 297:     i2c_start();
  1239     04B9  120A  118A  2065  120A  118A  	fcall	_i2c_start
  1240     04BE                     l1332:
  1241                           
  1242                           ;RTC.c: 298:     i2c_write(0xD0);
  1243     04BE  30D0               	movlw	208
  1244     04BF  120A  118A  2106  120A  118A  	fcall	_i2c_write
  1245     04C4                     l1334:
  1246                           
  1247                           ;RTC.c: 299:     i2c_write(0x00);
  1248     04C4  3000               	movlw	0
  1249     04C5  120A  118A  2106  120A  118A  	fcall	_i2c_write
  1250                           
  1251                           ;RTC.c: 300:     i2c_stop();
  1252     04CA  120A  118A  2073  120A  118A  	fcall	_i2c_stop
  1253                           
  1254                           ;RTC.c: 302:     i2c_start();
  1255     04CF  120A  118A  2065  120A  118A  	fcall	_i2c_start
  1256     04D4                     l1336:
  1257                           
  1258                           ;RTC.c: 303:     i2c_write(0xD1);
  1259     04D4  30D1               	movlw	209
  1260     04D5  120A  118A  2106  120A  118A  	fcall	_i2c_write
  1261     04DA                     l1338:
  1262                           
  1263                           ;RTC.c: 304:     sec = bcd2dec(i2c_read());
  1264     04DA  120A  118A  21A2  120A  118A  	fcall	_i2c_read
  1265     04DF  00FA               	movwf	??_update
  1266     04E0  01FB               	clrf	??_update+1
  1267     04E1  087A               	movf	??_update,w
  1268     04E2  00F6               	movwf	bcd2dec@temp
  1269     04E3  087B               	movf	??_update+1,w
  1270     04E4  00F7               	movwf	bcd2dec@temp+1
  1271     04E5  120A  118A  214D  120A  118A  	fcall	_bcd2dec
  1272     04EA  0877               	movf	?_bcd2dec+1,w
  1273     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  1274     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  1275     04ED  00BF               	movwf	_sec+1
  1276     04EE  0876               	movf	?_bcd2dec,w
  1277     04EF  00BE               	movwf	_sec
  1278     04F0                     l1340:
  1279                           
  1280                           ;RTC.c: 305:     min = bcd2dec(i2c_read());
  1281     04F0  120A  118A  21A2  120A  118A  	fcall	_i2c_read
  1282     04F5  00FA               	movwf	??_update
  1283     04F6  01FB               	clrf	??_update+1
  1284     04F7  087A               	movf	??_update,w
  1285     04F8  00F6               	movwf	bcd2dec@temp
  1286     04F9  087B               	movf	??_update+1,w
  1287     04FA  00F7               	movwf	bcd2dec@temp+1
  1288     04FB  120A  118A  214D  120A  118A  	fcall	_bcd2dec
  1289     0500  0877               	movf	?_bcd2dec+1,w
  1290     0501  1283               	bcf	3,5	;RP0=0, select bank0
  1291     0502  1303               	bcf	3,6	;RP1=0, select bank0
  1292     0503  00BD               	movwf	_min+1
  1293     0504  0876               	movf	?_bcd2dec,w
  1294     0505  00BC               	movwf	_min
  1295     0506                     l1342:
  1296                           
  1297                           ;RTC.c: 306:     hour = bcd2dec(i2c_read());
  1298     0506  120A  118A  21A2  120A  118A  	fcall	_i2c_read
  1299     050B  00FA               	movwf	??_update
  1300     050C  01FB               	clrf	??_update+1
  1301     050D  087A               	movf	??_update,w
  1302     050E  00F6               	movwf	bcd2dec@temp
  1303     050F  087B               	movf	??_update+1,w
  1304     0510  00F7               	movwf	bcd2dec@temp+1
  1305     0511  120A  118A  214D  120A  118A  	fcall	_bcd2dec
  1306     0516  0877               	movf	?_bcd2dec+1,w
  1307     0517  1283               	bcf	3,5	;RP0=0, select bank0
  1308     0518  1303               	bcf	3,6	;RP1=0, select bank0
  1309     0519  00BB               	movwf	_hour+1
  1310     051A  0876               	movf	?_bcd2dec,w
  1311     051B  00BA               	movwf	_hour
  1312     051C                     l1344:
  1313                           
  1314                           ;RTC.c: 307:     day = bcd2dec(i2c_read());
  1315     051C  120A  118A  21A2  120A  118A  	fcall	_i2c_read
  1316     0521  00FA               	movwf	??_update
  1317     0522  01FB               	clrf	??_update+1
  1318     0523  087A               	movf	??_update,w
  1319     0524  00F6               	movwf	bcd2dec@temp
  1320     0525  087B               	movf	??_update+1,w
  1321     0526  00F7               	movwf	bcd2dec@temp+1
  1322     0527  120A  118A  214D  120A  118A  	fcall	_bcd2dec
  1323     052C  0877               	movf	?_bcd2dec+1,w
  1324     052D  1283               	bcf	3,5	;RP0=0, select bank0
  1325     052E  1303               	bcf	3,6	;RP1=0, select bank0
  1326     052F  00B5               	movwf	_day+1
  1327     0530  0876               	movf	?_bcd2dec,w
  1328     0531  00B4               	movwf	_day
  1329     0532                     l1346:
  1330                           
  1331                           ;RTC.c: 308:     date = bcd2dec(i2c_read());
  1332     0532  120A  118A  21A2  120A  118A  	fcall	_i2c_read
  1333     0537  00FA               	movwf	??_update
  1334     0538  01FB               	clrf	??_update+1
  1335     0539  087A               	movf	??_update,w
  1336     053A  00F6               	movwf	bcd2dec@temp
  1337     053B  087B               	movf	??_update+1,w
  1338     053C  00F7               	movwf	bcd2dec@temp+1
  1339     053D  120A  118A  214D  120A  118A  	fcall	_bcd2dec
  1340     0542  0877               	movf	?_bcd2dec+1,w
  1341     0543  1283               	bcf	3,5	;RP0=0, select bank0
  1342     0544  1303               	bcf	3,6	;RP1=0, select bank0
  1343     0545  00B9               	movwf	_date+1
  1344     0546  0876               	movf	?_bcd2dec,w
  1345     0547  00B8               	movwf	_date
  1346     0548                     l1348:
  1347                           
  1348                           ;RTC.c: 309:     month = bcd2dec(i2c_read());
  1349     0548  120A  118A  21A2  120A  118A  	fcall	_i2c_read
  1350     054D  00FA               	movwf	??_update
  1351     054E  01FB               	clrf	??_update+1
  1352     054F  087A               	movf	??_update,w
  1353     0550  00F6               	movwf	bcd2dec@temp
  1354     0551  087B               	movf	??_update+1,w
  1355     0552  00F7               	movwf	bcd2dec@temp+1
  1356     0553  120A  118A  214D  120A  118A  	fcall	_bcd2dec
  1357     0558  0877               	movf	?_bcd2dec+1,w
  1358     0559  1283               	bcf	3,5	;RP0=0, select bank0
  1359     055A  1303               	bcf	3,6	;RP1=0, select bank0
  1360     055B  00B7               	movwf	_month+1
  1361     055C  0876               	movf	?_bcd2dec,w
  1362     055D  00B6               	movwf	_month
  1363     055E                     l1350:
  1364                           
  1365                           ;RTC.c: 310:     year = bcd2dec(i2c_read());
  1366     055E  120A  118A  21A2  120A  118A  	fcall	_i2c_read
  1367     0563  00FA               	movwf	??_update
  1368     0564  01FB               	clrf	??_update+1
  1369     0565  087A               	movf	??_update,w
  1370     0566  00F6               	movwf	bcd2dec@temp
  1371     0567  087B               	movf	??_update+1,w
  1372     0568  00F7               	movwf	bcd2dec@temp+1
  1373     0569  120A  118A  214D  120A  118A  	fcall	_bcd2dec
  1374     056E  0877               	movf	?_bcd2dec+1,w
  1375     056F  1283               	bcf	3,5	;RP0=0, select bank0
  1376     0570  1303               	bcf	3,6	;RP1=0, select bank0
  1377     0571  00B3               	movwf	_year+1
  1378     0572  0876               	movf	?_bcd2dec,w
  1379     0573  00B2               	movwf	_year
  1380                           
  1381                           ;RTC.c: 311:     i2c_stop();
  1382     0574  120A  118A  2073  120A  118A  	fcall	_i2c_stop
  1383                           
  1384                           ;RTC.c: 312:     i2c_start();
  1385     0579  120A  118A  2065  120A  118A  	fcall	_i2c_start
  1386     057E                     l1352:
  1387                           
  1388                           ;RTC.c: 313:     i2c_write(0xD1);
  1389     057E  30D1               	movlw	209
  1390     057F  120A  118A  2106  120A  118A  	fcall	_i2c_write
  1391     0584                     l1354:
  1392                           
  1393                           ;RTC.c: 314:     i2c_read();
  1394     0584  120A  118A  21A2  120A  118A  	fcall	_i2c_read
  1395                           
  1396                           ;RTC.c: 315:     i2c_stop();
  1397     0589  120A  118A  2073  120A  118A  	fcall	_i2c_stop
  1398     058E                     l155:
  1399     058E  0008               	return
  1400     058F                     __end_of_update:
  1401                           
  1402                           	psect	text2
  1403     01A2                     __ptext2:	
  1404 ;; *************** function _i2c_read *****************
  1405 ;; Defined at:
  1406 ;;		line 156 in file "RTC.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  val             2    2[COMMON] int 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      unsigned char 
  1413 ;; Registers used:
  1414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1420 ;;      Params:         0       0       0       0       0
  1421 ;;      Locals:         2       0       0       0       0
  1422 ;;      Temps:          2       0       0       0       0
  1423 ;;      Totals:         4       0       0       0       0
  1424 ;;Total ram usage:        4 bytes
  1425 ;; Hardware stack levels used: 1
  1426 ;; Hardware stack levels required when called: 1
  1427 ;; This function calls:
  1428 ;;		_i2c_wait
  1429 ;; This function is called by:
  1430 ;;		_update
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434     01A2                     _i2c_read:	
  1435                           ;psect for function _i2c_read
  1436                           
  1437     01A2                     l1220:	
  1438                           ;incstack = 0
  1439                           ; Regs used in _i2c_read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1440                           
  1441                           
  1442                           ;RTC.c: 157:     int val;;RTC.c: 158:     i2c_wait();
  1443     01A2  120A  118A  20B5  120A  118A  	fcall	_i2c_wait
  1444     01A7                     l1222:
  1445                           
  1446                           ;RTC.c: 159:     (*SSPCON_2)|=0X08;
  1447     01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1448     01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1449     01A9  084E               	movf	_SSPCON_2,w
  1450     01AA  0084               	movwf	4
  1451     01AB  1783               	bsf	3,7
  1452     01AC  1C4F               	btfss	_SSPCON_2+1,0
  1453     01AD  1383               	bcf	3,7
  1454     01AE  1580               	bsf	0,3
  1455     01AF                     l1224:
  1456                           
  1457                           ;RTC.c: 160:     i2c_wait();
  1458     01AF  120A  118A  20B5  120A  118A  	fcall	_i2c_wait
  1459                           
  1460                           ;RTC.c: 161:     if((*PIF1)&0x08)
  1461     01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1462     01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1463     01B6  0844               	movf	_PIF1,w
  1464     01B7  0084               	movwf	4
  1465     01B8  1783               	bsf	3,7
  1466     01B9  1C45               	btfss	_PIF1+1,0
  1467     01BA  1383               	bcf	3,7
  1468     01BB  1D80               	btfss	0,3
  1469     01BC  29BE               	goto	u681
  1470     01BD  29BF               	goto	u680
  1471     01BE                     u681:
  1472     01BE  29C8               	goto	l1228
  1473     01BF                     u680:
  1474     01BF                     l1226:
  1475                           
  1476                           ;RTC.c: 162:         (*PIF1)&=~0x08;
  1477     01BF  30F7               	movlw	247
  1478     01C0  00FF               	movwf	btemp+1
  1479     01C1  0844               	movf	_PIF1,w
  1480     01C2  0084               	movwf	4
  1481     01C3  1783               	bsf	3,7
  1482     01C4  1C45               	btfss	_PIF1+1,0
  1483     01C5  1383               	bcf	3,7
  1484     01C6  087F               	movf	btemp+1,w
  1485     01C7  0580               	andwf	0,f
  1486     01C8                     l1228:
  1487                           
  1488                           ;RTC.c: 163:     val = *SSP_BUF;
  1489     01C8  084A               	movf	_SSP_BUF,w
  1490     01C9  0084               	movwf	4
  1491     01CA  1783               	bsf	3,7
  1492     01CB  1C4B               	btfss	_SSP_BUF+1,0
  1493     01CC  1383               	bcf	3,7
  1494     01CD  0800               	movf	0,w
  1495     01CE  00F0               	movwf	??_i2c_read
  1496     01CF  01F1               	clrf	??_i2c_read+1
  1497     01D0  0870               	movf	??_i2c_read,w
  1498     01D1  00F2               	movwf	i2c_read@val
  1499     01D2  0871               	movf	??_i2c_read+1,w
  1500     01D3  00F3               	movwf	i2c_read@val+1
  1501     01D4                     l1230:
  1502                           
  1503                           ;RTC.c: 164:     i2c_wait();
  1504     01D4  120A  118A  20B5  120A  118A  	fcall	_i2c_wait
  1505     01D9                     l1232:
  1506                           
  1507                           ;RTC.c: 166:     (*SSPCON_2)|=0x10;
  1508     01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1509     01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1510     01DB  084E               	movf	_SSPCON_2,w
  1511     01DC  0084               	movwf	4
  1512     01DD  1783               	bsf	3,7
  1513     01DE  1C4F               	btfss	_SSPCON_2+1,0
  1514     01DF  1383               	bcf	3,7
  1515     01E0  1600               	bsf	0,4
  1516     01E1                     l1234:
  1517                           
  1518                           ;RTC.c: 167:     return val;
  1519     01E1  0872               	movf	i2c_read@val,w
  1520     01E2                     l124:
  1521     01E2  0008               	return
  1522     01E3                     __end_of_i2c_read:
  1523                           
  1524                           	psect	text3
  1525     014D                     __ptext3:	
  1526 ;; *************** function _bcd2dec *****************
  1527 ;; Defined at:
  1528 ;;		line 280 in file "RTC.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  temp            2    6[COMMON] int 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;		None
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  2    6[COMMON] int 
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0, pclath, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1542 ;;      Params:         2       0       0       0       0
  1543 ;;      Locals:         0       0       0       0       0
  1544 ;;      Temps:          2       0       0       0       0
  1545 ;;      Totals:         4       0       0       0       0
  1546 ;;Total ram usage:        4 bytes
  1547 ;; Hardware stack levels used: 1
  1548 ;; Hardware stack levels required when called: 1
  1549 ;; This function calls:
  1550 ;;		___wmul
  1551 ;; This function is called by:
  1552 ;;		_update
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556     014D                     _bcd2dec:	
  1557                           ;psect for function _bcd2dec
  1558                           
  1559     014D                     l1248:	
  1560                           ;incstack = 0
  1561                           ; Regs used in _bcd2dec: [wreg+status,2+status,0+pclath+cstack]
  1562                           
  1563                           
  1564                           ;RTC.c: 281:     return ((temp>>4)*10)+((temp&0x0F));
  1565     014D  300F               	movlw	15
  1566     014E  0576               	andwf	bcd2dec@temp,w
  1567     014F  00F8               	movwf	??_bcd2dec
  1568     0150  3000               	movlw	0
  1569     0151  0577               	andwf	bcd2dec@temp+1,w
  1570     0152  00F9               	movwf	??_bcd2dec+1
  1571     0153  0E76               	swapf	bcd2dec@temp,w
  1572     0154  390F               	andlw	15
  1573     0155  00F0               	movwf	___wmul@multiplier
  1574     0156  0E77               	swapf	bcd2dec@temp+1,w
  1575     0157  39F0               	andlw	240
  1576     0158  04F0               	iorwf	___wmul@multiplier,f
  1577     0159  0E77               	swapf	bcd2dec@temp+1,w
  1578     015A  390F               	andlw	15
  1579     015B  00F1               	movwf	___wmul@multiplier+1
  1580     015C  30F0               	movlw	240
  1581     015D  1DF1               	btfss	___wmul@multiplier+1,3
  1582     015E  3000               	movlw	0
  1583     015F  04F1               	iorwf	___wmul@multiplier+1,f
  1584     0160  300A               	movlw	10
  1585     0161  00F2               	movwf	___wmul@multiplicand
  1586     0162  3000               	movlw	0
  1587     0163  00F3               	movwf	___wmul@multiplicand+1
  1588     0164  120A  118A  2128  120A  118A  	fcall	___wmul
  1589     0169  0878               	movf	??_bcd2dec,w
  1590     016A  0770               	addwf	?___wmul,w
  1591     016B  00F6               	movwf	?_bcd2dec
  1592     016C  0879               	movf	??_bcd2dec+1,w
  1593     016D  1803               	skipnc
  1594     016E  0A79               	incf	??_bcd2dec+1,w
  1595     016F  0771               	addwf	?___wmul+1,w
  1596     0170  00F7               	movwf	?_bcd2dec+1
  1597     0171                     l149:
  1598     0171  0008               	return
  1599     0172                     __end_of_bcd2dec:
  1600                           
  1601                           	psect	text4
  1602     0128                     __ptext4:	
  1603 ;; *************** function ___wmul *****************
  1604 ;; Defined at:
  1605 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;  multiplier      2    0[COMMON] unsigned int 
  1608 ;;  multiplicand    2    2[COMMON] unsigned int 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  product         2    4[COMMON] unsigned int 
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  2    0[COMMON] unsigned int 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1620 ;;      Params:         4       0       0       0       0
  1621 ;;      Locals:         2       0       0       0       0
  1622 ;;      Temps:          0       0       0       0       0
  1623 ;;      Totals:         6       0       0       0       0
  1624 ;;Total ram usage:        6 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; This function calls:
  1627 ;;		Nothing
  1628 ;; This function is called by:
  1629 ;;		_bcd2dec
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633     0128                     ___wmul:	
  1634                           ;psect for function ___wmul
  1635                           
  1636     0128                     l1110:	
  1637                           ;incstack = 0
  1638                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1639                           
  1640     0128  01F4               	clrf	___wmul@product
  1641     0129  01F5               	clrf	___wmul@product+1
  1642     012A                     l1112:
  1643     012A  1C70               	btfss	___wmul@multiplier,0
  1644     012B  292D               	goto	u451
  1645     012C  292E               	goto	u450
  1646     012D                     u451:
  1647     012D  2934               	goto	l250
  1648     012E                     u450:
  1649     012E                     l1114:
  1650     012E  0872               	movf	___wmul@multiplicand,w
  1651     012F  07F4               	addwf	___wmul@product,f
  1652     0130  1803               	skipnc
  1653     0131  0AF5               	incf	___wmul@product+1,f
  1654     0132  0873               	movf	___wmul@multiplicand+1,w
  1655     0133  07F5               	addwf	___wmul@product+1,f
  1656     0134                     l250:
  1657     0134  3001               	movlw	1
  1658     0135                     u465:
  1659     0135  1003               	clrc
  1660     0136  0DF2               	rlf	___wmul@multiplicand,f
  1661     0137  0DF3               	rlf	___wmul@multiplicand+1,f
  1662     0138  3EFF               	addlw	-1
  1663     0139  1D03               	skipz
  1664     013A  2935               	goto	u465
  1665     013B                     l1116:
  1666     013B  3001               	movlw	1
  1667     013C                     u475:
  1668     013C  1003               	clrc
  1669     013D  0CF1               	rrf	___wmul@multiplier+1,f
  1670     013E  0CF0               	rrf	___wmul@multiplier,f
  1671     013F  3EFF               	addlw	-1
  1672     0140  1D03               	skipz
  1673     0141  293C               	goto	u475
  1674     0142                     l1118:
  1675     0142  0870               	movf	___wmul@multiplier,w
  1676     0143  0471               	iorwf	___wmul@multiplier+1,w
  1677     0144  1D03               	btfss	3,2
  1678     0145  2947               	goto	u481
  1679     0146  2948               	goto	u480
  1680     0147                     u481:
  1681     0147  292A               	goto	l1112
  1682     0148                     u480:
  1683     0148                     l1120:
  1684     0148  0875               	movf	___wmul@product+1,w
  1685     0149  00F1               	movwf	?___wmul+1
  1686     014A  0874               	movf	___wmul@product,w
  1687     014B  00F0               	movwf	?___wmul
  1688     014C                     l252:
  1689     014C  0008               	return
  1690     014D                     __end_of___wmul:
  1691                           
  1692                           	psect	text5
  1693     035D                     __ptext5:	
  1694 ;; *************** function _setup *****************
  1695 ;; Defined at:
  1696 ;;		line 283 in file "RTC.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;		None
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;		None
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1710 ;;      Params:         0       0       0       0       0
  1711 ;;      Locals:         0       0       0       0       0
  1712 ;;      Temps:          0       0       0       0       0
  1713 ;;      Totals:         0       0       0       0       0
  1714 ;;Total ram usage:        0 bytes
  1715 ;; Hardware stack levels used: 1
  1716 ;; Hardware stack levels required when called: 2
  1717 ;; This function calls:
  1718 ;;		_dec2bcd
  1719 ;;		_i2c_start
  1720 ;;		_i2c_stop
  1721 ;;		_i2c_write
  1722 ;; This function is called by:
  1723 ;;		_main
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727     035D                     _setup:	
  1728                           ;psect for function _setup
  1729                           
  1730     035D                     l1308:	
  1731                           ;incstack = 0
  1732                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1733                           
  1734                           
  1735                           ;RTC.c: 284:     i2c_start();
  1736     035D  120A  118A  2065  120A  118A  	fcall	_i2c_start
  1737     0362                     l1310:
  1738                           
  1739                           ;RTC.c: 285:     i2c_write(0xD0);
  1740     0362  30D0               	movlw	208
  1741     0363  120A  118A  2106  120A  118A  	fcall	_i2c_write
  1742     0368                     l1312:
  1743                           
  1744                           ;RTC.c: 286:     i2c_write(0x00);
  1745     0368  3000               	movlw	0
  1746     0369  120A  118A  2106  120A  118A  	fcall	_i2c_write
  1747     036E                     l1314:
  1748                           
  1749                           ;RTC.c: 287:     i2c_write(dec2bcd(sec));
  1750     036E  1283               	bcf	3,5	;RP0=0, select bank0
  1751     036F  1303               	bcf	3,6	;RP1=0, select bank0
  1752     0370  083F               	movf	_sec+1,w
  1753     0371  00F9               	movwf	dec2bcd@temp+1
  1754     0372  083E               	movf	_sec,w
  1755     0373  00F8               	movwf	dec2bcd@temp
  1756     0374  120A  118A  2172  120A  118A  	fcall	_dec2bcd
  1757     0379  0878               	movf	?_dec2bcd,w
  1758     037A  120A  118A  2106  120A  118A  	fcall	_i2c_write
  1759     037F                     l1316:
  1760                           
  1761                           ;RTC.c: 288:     i2c_write(dec2bcd(min));
  1762     037F  1283               	bcf	3,5	;RP0=0, select bank0
  1763     0380  1303               	bcf	3,6	;RP1=0, select bank0
  1764     0381  083D               	movf	_min+1,w
  1765     0382  00F9               	movwf	dec2bcd@temp+1
  1766     0383  083C               	movf	_min,w
  1767     0384  00F8               	movwf	dec2bcd@temp
  1768     0385  120A  118A  2172  120A  118A  	fcall	_dec2bcd
  1769     038A  0878               	movf	?_dec2bcd,w
  1770     038B  120A  118A  2106  120A  118A  	fcall	_i2c_write
  1771     0390                     l1318:
  1772                           
  1773                           ;RTC.c: 289:     i2c_write(dec2bcd(hour)|0x60);
  1774     0390  1283               	bcf	3,5	;RP0=0, select bank0
  1775     0391  1303               	bcf	3,6	;RP1=0, select bank0
  1776     0392  083B               	movf	_hour+1,w
  1777     0393  00F9               	movwf	dec2bcd@temp+1
  1778     0394  083A               	movf	_hour,w
  1779     0395  00F8               	movwf	dec2bcd@temp
  1780     0396  120A  118A  2172  120A  118A  	fcall	_dec2bcd
  1781     039B  0878               	movf	?_dec2bcd,w
  1782     039C  3860               	iorlw	96
  1783     039D  120A  118A  2106  120A  118A  	fcall	_i2c_write
  1784     03A2                     l1320:
  1785                           
  1786                           ;RTC.c: 290:     i2c_write(dec2bcd(day));
  1787     03A2  1283               	bcf	3,5	;RP0=0, select bank0
  1788     03A3  1303               	bcf	3,6	;RP1=0, select bank0
  1789     03A4  0835               	movf	_day+1,w
  1790     03A5  00F9               	movwf	dec2bcd@temp+1
  1791     03A6  0834               	movf	_day,w
  1792     03A7  00F8               	movwf	dec2bcd@temp
  1793     03A8  120A  118A  2172  120A  118A  	fcall	_dec2bcd
  1794     03AD  0878               	movf	?_dec2bcd,w
  1795     03AE  120A  118A  2106  120A  118A  	fcall	_i2c_write
  1796     03B3                     l1322:
  1797                           
  1798                           ;RTC.c: 291:     i2c_write(dec2bcd(date));
  1799     03B3  1283               	bcf	3,5	;RP0=0, select bank0
  1800     03B4  1303               	bcf	3,6	;RP1=0, select bank0
  1801     03B5  0839               	movf	_date+1,w
  1802     03B6  00F9               	movwf	dec2bcd@temp+1
  1803     03B7  0838               	movf	_date,w
  1804     03B8  00F8               	movwf	dec2bcd@temp
  1805     03B9  120A  118A  2172  120A  118A  	fcall	_dec2bcd
  1806     03BE  0878               	movf	?_dec2bcd,w
  1807     03BF  120A  118A  2106  120A  118A  	fcall	_i2c_write
  1808     03C4                     l1324:
  1809                           
  1810                           ;RTC.c: 292:     i2c_write(dec2bcd(month));
  1811     03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1812     03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1813     03C6  0837               	movf	_month+1,w
  1814     03C7  00F9               	movwf	dec2bcd@temp+1
  1815     03C8  0836               	movf	_month,w
  1816     03C9  00F8               	movwf	dec2bcd@temp
  1817     03CA  120A  118A  2172  120A  118A  	fcall	_dec2bcd
  1818     03CF  0878               	movf	?_dec2bcd,w
  1819     03D0  120A  118A  2106  120A  118A  	fcall	_i2c_write
  1820     03D5                     l1326:
  1821                           
  1822                           ;RTC.c: 293:     i2c_write(dec2bcd(year));
  1823     03D5  1283               	bcf	3,5	;RP0=0, select bank0
  1824     03D6  1303               	bcf	3,6	;RP1=0, select bank0
  1825     03D7  0833               	movf	_year+1,w
  1826     03D8  00F9               	movwf	dec2bcd@temp+1
  1827     03D9  0832               	movf	_year,w
  1828     03DA  00F8               	movwf	dec2bcd@temp
  1829     03DB  120A  118A  2172  120A  118A  	fcall	_dec2bcd
  1830     03E0  0878               	movf	?_dec2bcd,w
  1831     03E1  120A  118A  2106  120A  118A  	fcall	_i2c_write
  1832     03E6                     l1328:
  1833                           
  1834                           ;RTC.c: 294:     i2c_stop();
  1835     03E6  120A  118A  2073  120A  118A  	fcall	_i2c_stop
  1836     03EB                     l152:
  1837     03EB  0008               	return
  1838     03EC                     __end_of_setup:
  1839                           
  1840                           	psect	text6
  1841     0106                     __ptext6:	
  1842 ;; *************** function _i2c_write *****************
  1843 ;; Defined at:
  1844 ;;		line 169 in file "RTC.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  data            1    wreg     unsigned char 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  data            1    0[COMMON] unsigned char 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      unsigned char 
  1851 ;; Registers used:
  1852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1858 ;;      Params:         0       0       0       0       0
  1859 ;;      Locals:         1       0       0       0       0
  1860 ;;      Temps:          0       0       0       0       0
  1861 ;;      Totals:         1       0       0       0       0
  1862 ;;Total ram usage:        1 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; Hardware stack levels required when called: 1
  1865 ;; This function calls:
  1866 ;;		_i2c_wait
  1867 ;; This function is called by:
  1868 ;;		_setup
  1869 ;;		_update
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873     0106                     _i2c_write:	
  1874                           ;psect for function _i2c_write
  1875                           
  1876                           
  1877                           ;incstack = 0
  1878                           ; Regs used in _i2c_write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1879                           ;i2c_write@data stored from wreg
  1880     0106  00F0               	movwf	i2c_write@data
  1881     0107                     l1238:
  1882                           
  1883                           ;RTC.c: 170:     i2c_wait();
  1884     0107  120A  118A  20B5  120A  118A  	fcall	_i2c_wait
  1885     010C                     l1240:
  1886                           
  1887                           ;RTC.c: 171:     *SSP_BUF = data;
  1888     010C  1283               	bcf	3,5	;RP0=0, select bank0
  1889     010D  1303               	bcf	3,6	;RP1=0, select bank0
  1890     010E  084A               	movf	_SSP_BUF,w
  1891     010F  0084               	movwf	4
  1892     0110  1783               	bsf	3,7
  1893     0111  1C4B               	btfss	_SSP_BUF+1,0
  1894     0112  1383               	bcf	3,7
  1895     0113  0870               	movf	i2c_write@data,w
  1896     0114  0080               	movwf	0
  1897     0115                     l1242:
  1898                           
  1899                           ;RTC.c: 172:     if((*PIF1)&0x08)
  1900     0115  0844               	movf	_PIF1,w
  1901     0116  0084               	movwf	4
  1902     0117  1783               	bsf	3,7
  1903     0118  1C45               	btfss	_PIF1+1,0
  1904     0119  1383               	bcf	3,7
  1905     011A  1D80               	btfss	0,3
  1906     011B  291D               	goto	u691
  1907     011C  291E               	goto	u690
  1908     011D                     u691:
  1909     011D  2927               	goto	l128
  1910     011E                     u690:
  1911     011E                     l1244:
  1912                           
  1913                           ;RTC.c: 173:         (*PIF1)&=~0x08;
  1914     011E  30F7               	movlw	247
  1915     011F  00FF               	movwf	btemp+1
  1916     0120  0844               	movf	_PIF1,w
  1917     0121  0084               	movwf	4
  1918     0122  1783               	bsf	3,7
  1919     0123  1C45               	btfss	_PIF1+1,0
  1920     0124  1383               	bcf	3,7
  1921     0125  087F               	movf	btemp+1,w
  1922     0126  0580               	andwf	0,f
  1923     0127                     l128:
  1924     0127  0008               	return
  1925     0128                     __end_of_i2c_write:
  1926                           
  1927                           	psect	text7
  1928     0073                     __ptext7:	
  1929 ;; *************** function _i2c_stop *****************
  1930 ;; Defined at:
  1931 ;;		line 152 in file "RTC.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1945 ;;      Params:         0       0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0
  1948 ;;      Totals:         0       0       0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; Hardware stack levels required when called: 1
  1952 ;; This function calls:
  1953 ;;		_i2c_wait
  1954 ;; This function is called by:
  1955 ;;		_setup
  1956 ;;		_update
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960     0073                     _i2c_stop:	
  1961                           ;psect for function _i2c_stop
  1962                           
  1963     0073                     l1216:	
  1964                           ;incstack = 0
  1965                           ; Regs used in _i2c_stop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1966                           
  1967                           
  1968                           ;RTC.c: 153:     i2c_wait();
  1969     0073  120A  118A  20B5  120A  118A  	fcall	_i2c_wait
  1970     0078                     l1218:
  1971                           
  1972                           ;RTC.c: 154:     (*SSPCON_2)|=0x04;
  1973     0078  1283               	bcf	3,5	;RP0=0, select bank0
  1974     0079  1303               	bcf	3,6	;RP1=0, select bank0
  1975     007A  084E               	movf	_SSPCON_2,w
  1976     007B  0084               	movwf	4
  1977     007C  1783               	bsf	3,7
  1978     007D  1C4F               	btfss	_SSPCON_2+1,0
  1979     007E  1383               	bcf	3,7
  1980     007F  1500               	bsf	0,2
  1981     0080                     l120:
  1982     0080  0008               	return
  1983     0081                     __end_of_i2c_stop:
  1984                           
  1985                           	psect	text8
  1986     0065                     __ptext8:	
  1987 ;; *************** function _i2c_start *****************
  1988 ;; Defined at:
  1989 ;;		line 144 in file "RTC.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2003 ;;      Params:         0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0
  2006 ;;      Totals:         0       0       0       0       0
  2007 ;;Total ram usage:        0 bytes
  2008 ;; Hardware stack levels used: 1
  2009 ;; Hardware stack levels required when called: 1
  2010 ;; This function calls:
  2011 ;;		_i2c_wait
  2012 ;; This function is called by:
  2013 ;;		_setup
  2014 ;;		_update
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018     0065                     _i2c_start:	
  2019                           ;psect for function _i2c_start
  2020                           
  2021     0065                     l1212:	
  2022                           ;incstack = 0
  2023                           ; Regs used in _i2c_start: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2024                           
  2025                           
  2026                           ;RTC.c: 145:     i2c_wait();
  2027     0065  120A  118A  20B5  120A  118A  	fcall	_i2c_wait
  2028     006A                     l1214:
  2029                           
  2030                           ;RTC.c: 146:     (*SSPCON_2)|=0x01;
  2031     006A  1283               	bcf	3,5	;RP0=0, select bank0
  2032     006B  1303               	bcf	3,6	;RP1=0, select bank0
  2033     006C  084E               	movf	_SSPCON_2,w
  2034     006D  0084               	movwf	4
  2035     006E  1783               	bsf	3,7
  2036     006F  1C4F               	btfss	_SSPCON_2+1,0
  2037     0070  1383               	bcf	3,7
  2038     0071  1400               	bsf	0,0
  2039     0072                     l114:
  2040     0072  0008               	return
  2041     0073                     __end_of_i2c_start:
  2042                           
  2043                           	psect	text9
  2044     00B5                     __ptext9:	
  2045 ;; *************** function _i2c_wait *****************
  2046 ;; Defined at:
  2047 ;;		line 141 in file "RTC.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;		None
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;		None
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  1    wreg      void 
  2054 ;; Registers used:
  2055 ;;		wreg, fsr0l, fsr0h, status,2
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2061 ;;      Params:         0       0       0       0       0
  2062 ;;      Locals:         0       0       0       0       0
  2063 ;;      Temps:          0       0       0       0       0
  2064 ;;      Totals:         0       0       0       0       0
  2065 ;;Total ram usage:        0 bytes
  2066 ;; Hardware stack levels used: 1
  2067 ;; This function calls:
  2068 ;;		Nothing
  2069 ;; This function is called by:
  2070 ;;		_i2c_start
  2071 ;;		_i2c_stop
  2072 ;;		_i2c_read
  2073 ;;		_i2c_write
  2074 ;;		_i2c_rep_start
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078     00B5                     _i2c_wait:	
  2079                           ;psect for function _i2c_wait
  2080                           
  2081     00B5                     l1104:	
  2082                           ;incstack = 0
  2083                           ; Regs used in _i2c_wait: [wreg-fsr0h+status,2]
  2084                           
  2085     00B5                     l1106:	
  2086                           ;RTC.c: 142:     while((*SSP_STAT)&0X04 || (*SSPCON_2&0X1F));
  2087                           
  2088     00B5  1283               	bcf	3,5	;RP0=0, select bank0
  2089     00B6  1303               	bcf	3,6	;RP1=0, select bank0
  2090     00B7  0848               	movf	_SSP_STAT,w
  2091     00B8  0084               	movwf	4
  2092     00B9  1783               	bsf	3,7
  2093     00BA  1C49               	btfss	_SSP_STAT+1,0
  2094     00BB  1383               	bcf	3,7
  2095     00BC  1900               	btfsc	0,2
  2096     00BD  28BF               	goto	u431
  2097     00BE  28C0               	goto	u430
  2098     00BF                     u431:
  2099     00BF  28B5               	goto	l1106
  2100     00C0                     u430:
  2101     00C0                     l1108:
  2102     00C0  084E               	movf	_SSPCON_2,w
  2103     00C1  0084               	movwf	4
  2104     00C2  1783               	bsf	3,7
  2105     00C3  1C4F               	btfss	_SSPCON_2+1,0
  2106     00C4  1383               	bcf	3,7
  2107     00C5  0800               	movf	0,w
  2108     00C6  391F               	andlw	31
  2109     00C7  1D03               	btfss	3,2
  2110     00C8  28CA               	goto	u441
  2111     00C9  28CB               	goto	u440
  2112     00CA                     u441:
  2113     00CA  28B5               	goto	l1106
  2114     00CB                     u440:
  2115     00CB                     l111:
  2116     00CB  0008               	return
  2117     00CC                     __end_of_i2c_wait:
  2118                           
  2119                           	psect	text10
  2120     0172                     __ptext10:	
  2121 ;; *************** function _dec2bcd *****************
  2122 ;; Defined at:
  2123 ;;		line 277 in file "RTC.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  temp            2    8[COMMON] int 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  2    8[COMMON] int 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2137 ;;      Params:         2       0       0       0       0
  2138 ;;      Locals:         0       0       0       0       0
  2139 ;;      Temps:          2       0       0       0       0
  2140 ;;      Totals:         4       0       0       0       0
  2141 ;;Total ram usage:        4 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; Hardware stack levels required when called: 1
  2144 ;; This function calls:
  2145 ;;		___awdiv
  2146 ;;		___awmod
  2147 ;; This function is called by:
  2148 ;;		_main
  2149 ;;		_setup
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153     0172                     _dec2bcd:	
  2154                           ;psect for function _dec2bcd
  2155                           
  2156     0172                     l1206:	
  2157                           ;incstack = 0
  2158                           ; Regs used in _dec2bcd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2159                           
  2160                           
  2161                           ;RTC.c: 278:     return ((temp/10)<<4)+((temp%10));
  2162     0172  300A               	movlw	10
  2163     0173  00F0               	movwf	___awdiv@divisor
  2164     0174  3000               	movlw	0
  2165     0175  00F1               	movwf	___awdiv@divisor+1
  2166     0176  0879               	movf	dec2bcd@temp+1,w
  2167     0177  00F3               	movwf	___awdiv@dividend+1
  2168     0178  0878               	movf	dec2bcd@temp,w
  2169     0179  00F2               	movwf	___awdiv@dividend
  2170     017A  120A  118A  22F6  120A  118A  	fcall	___awdiv
  2171     017F  0870               	movf	?___awdiv,w
  2172     0180  00FA               	movwf	??_dec2bcd
  2173     0181  0871               	movf	?___awdiv+1,w
  2174     0182  00FB               	movwf	??_dec2bcd+1
  2175     0183  0EFA               	swapf	??_dec2bcd,f
  2176     0184  0EFB               	swapf	??_dec2bcd+1,f
  2177     0185  30F0               	movlw	240
  2178     0186  05FB               	andwf	??_dec2bcd+1,f
  2179     0187  087A               	movf	??_dec2bcd,w
  2180     0188  390F               	andlw	15
  2181     0189  04FB               	iorwf	??_dec2bcd+1,f
  2182     018A  30F0               	movlw	240
  2183     018B  05FA               	andwf	??_dec2bcd,f
  2184     018C  300A               	movlw	10
  2185     018D  00F0               	movwf	___awmod@divisor
  2186     018E  3000               	movlw	0
  2187     018F  00F1               	movwf	___awmod@divisor+1
  2188     0190  0879               	movf	dec2bcd@temp+1,w
  2189     0191  00F3               	movwf	___awmod@dividend+1
  2190     0192  0878               	movf	dec2bcd@temp,w
  2191     0193  00F2               	movwf	___awmod@dividend
  2192     0194  120A  118A  2237  120A  118A  	fcall	___awmod
  2193     0199  0870               	movf	?___awmod,w
  2194     019A  077A               	addwf	??_dec2bcd,w
  2195     019B  00F8               	movwf	?_dec2bcd
  2196     019C  0871               	movf	?___awmod+1,w
  2197     019D  1803               	skipnc
  2198     019E  0A71               	incf	?___awmod+1,w
  2199     019F  077B               	addwf	??_dec2bcd+1,w
  2200     01A0  00F9               	movwf	?_dec2bcd+1
  2201     01A1                     l146:
  2202     01A1  0008               	return
  2203     01A2                     __end_of_dec2bcd:
  2204                           
  2205                           	psect	text11
  2206     0237                     __ptext11:	
  2207 ;; *************** function ___awmod *****************
  2208 ;; Defined at:
  2209 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  divisor         2    0[COMMON] int 
  2212 ;;  dividend        2    2[COMMON] int 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  sign            1    5[COMMON] unsigned char 
  2215 ;;  counter         1    4[COMMON] unsigned char 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  2    0[COMMON] int 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2, status,0, btemp+1
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2225 ;;      Params:         4       0       0       0       0
  2226 ;;      Locals:         2       0       0       0       0
  2227 ;;      Temps:          0       0       0       0       0
  2228 ;;      Totals:         6       0       0       0       0
  2229 ;;Total ram usage:        6 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; This function calls:
  2232 ;;		Nothing
  2233 ;; This function is called by:
  2234 ;;		_main
  2235 ;;		_dec2bcd
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239     0237                     ___awmod:	
  2240                           ;psect for function ___awmod
  2241                           
  2242     0237                     l1168:	
  2243                           ;incstack = 0
  2244                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  2245                           
  2246     0237  01F5               	clrf	___awmod@sign
  2247     0238                     l1170:
  2248     0238  1FF3               	btfss	___awmod@dividend+1,7
  2249     0239  2A3B               	goto	u591
  2250     023A  2A3C               	goto	u590
  2251     023B                     u591:
  2252     023B  2A43               	goto	l1176
  2253     023C                     u590:
  2254     023C                     l1172:
  2255     023C  09F2               	comf	___awmod@dividend,f
  2256     023D  09F3               	comf	___awmod@dividend+1,f
  2257     023E  0AF2               	incf	___awmod@dividend,f
  2258     023F  1903               	skipnz
  2259     0240  0AF3               	incf	___awmod@dividend+1,f
  2260     0241                     l1174:
  2261     0241  01F5               	clrf	___awmod@sign
  2262     0242  0AF5               	incf	___awmod@sign,f
  2263     0243                     l1176:
  2264     0243  1FF1               	btfss	___awmod@divisor+1,7
  2265     0244  2A46               	goto	u601
  2266     0245  2A47               	goto	u600
  2267     0246                     u601:
  2268     0246  2A4C               	goto	l1180
  2269     0247                     u600:
  2270     0247                     l1178:
  2271     0247  09F0               	comf	___awmod@divisor,f
  2272     0248  09F1               	comf	___awmod@divisor+1,f
  2273     0249  0AF0               	incf	___awmod@divisor,f
  2274     024A  1903               	skipnz
  2275     024B  0AF1               	incf	___awmod@divisor+1,f
  2276     024C                     l1180:
  2277     024C  0870               	movf	___awmod@divisor,w
  2278     024D  0471               	iorwf	___awmod@divisor+1,w
  2279     024E  1903               	btfsc	3,2
  2280     024F  2A51               	goto	u611
  2281     0250  2A52               	goto	u610
  2282     0251                     u611:
  2283     0251  2A81               	goto	l1198
  2284     0252                     u610:
  2285     0252                     l1182:
  2286     0252  01F4               	clrf	___awmod@counter
  2287     0253  0AF4               	incf	___awmod@counter,f
  2288     0254  2A60               	goto	l1188
  2289     0255                     l1184:
  2290     0255  3001               	movlw	1
  2291     0256                     u625:
  2292     0256  1003               	clrc
  2293     0257  0DF0               	rlf	___awmod@divisor,f
  2294     0258  0DF1               	rlf	___awmod@divisor+1,f
  2295     0259  3EFF               	addlw	-1
  2296     025A  1D03               	skipz
  2297     025B  2A56               	goto	u625
  2298     025C                     l1186:
  2299     025C  3001               	movlw	1
  2300     025D  00FF               	movwf	btemp+1
  2301     025E  087F               	movf	btemp+1,w
  2302     025F  07F4               	addwf	___awmod@counter,f
  2303     0260                     l1188:
  2304     0260  1FF1               	btfss	___awmod@divisor+1,7
  2305     0261  2A63               	goto	u631
  2306     0262  2A64               	goto	u630
  2307     0263                     u631:
  2308     0263  2A55               	goto	l1184
  2309     0264                     u630:
  2310     0264                     l1190:
  2311     0264  0871               	movf	___awmod@divisor+1,w
  2312     0265  0273               	subwf	___awmod@dividend+1,w
  2313     0266  1D03               	skipz
  2314     0267  2A6A               	goto	u645
  2315     0268  0870               	movf	___awmod@divisor,w
  2316     0269  0272               	subwf	___awmod@dividend,w
  2317     026A                     u645:
  2318     026A  1C03               	skipc
  2319     026B  2A6D               	goto	u641
  2320     026C  2A6E               	goto	u640
  2321     026D                     u641:
  2322     026D  2A74               	goto	l1194
  2323     026E                     u640:
  2324     026E                     l1192:
  2325     026E  0870               	movf	___awmod@divisor,w
  2326     026F  02F2               	subwf	___awmod@dividend,f
  2327     0270  0871               	movf	___awmod@divisor+1,w
  2328     0271  1C03               	skipc
  2329     0272  03F3               	decf	___awmod@dividend+1,f
  2330     0273  02F3               	subwf	___awmod@dividend+1,f
  2331     0274                     l1194:
  2332     0274  3001               	movlw	1
  2333     0275                     u655:
  2334     0275  1003               	clrc
  2335     0276  0CF1               	rrf	___awmod@divisor+1,f
  2336     0277  0CF0               	rrf	___awmod@divisor,f
  2337     0278  3EFF               	addlw	-1
  2338     0279  1D03               	skipz
  2339     027A  2A75               	goto	u655
  2340     027B                     l1196:
  2341     027B  3001               	movlw	1
  2342     027C  02F4               	subwf	___awmod@counter,f
  2343     027D  1D03               	btfss	3,2
  2344     027E  2A80               	goto	u661
  2345     027F  2A81               	goto	u660
  2346     0280                     u661:
  2347     0280  2A64               	goto	l1190
  2348     0281                     u660:
  2349     0281                     l1198:
  2350     0281  0875               	movf	___awmod@sign,w
  2351     0282  1903               	btfsc	3,2
  2352     0283  2A85               	goto	u671
  2353     0284  2A86               	goto	u670
  2354     0285                     u671:
  2355     0285  2A8B               	goto	l1202
  2356     0286                     u670:
  2357     0286                     l1200:
  2358     0286  09F2               	comf	___awmod@dividend,f
  2359     0287  09F3               	comf	___awmod@dividend+1,f
  2360     0288  0AF2               	incf	___awmod@dividend,f
  2361     0289  1903               	skipnz
  2362     028A  0AF3               	incf	___awmod@dividend+1,f
  2363     028B                     l1202:
  2364     028B  0873               	movf	___awmod@dividend+1,w
  2365     028C  00F1               	movwf	?___awmod+1
  2366     028D  0872               	movf	___awmod@dividend,w
  2367     028E  00F0               	movwf	?___awmod
  2368     028F                     l416:
  2369     028F  0008               	return
  2370     0290                     __end_of___awmod:
  2371                           
  2372                           	psect	text12
  2373     02F6                     __ptext12:	
  2374 ;; *************** function ___awdiv *****************
  2375 ;; Defined at:
  2376 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;  divisor         2    0[COMMON] int 
  2379 ;;  dividend        2    2[COMMON] int 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  quotient        2    6[COMMON] int 
  2382 ;;  sign            1    5[COMMON] unsigned char 
  2383 ;;  counter         1    4[COMMON] unsigned char 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  2    0[COMMON] int 
  2386 ;; Registers used:
  2387 ;;		wreg, status,2, status,0, btemp+1
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2393 ;;      Params:         4       0       0       0       0
  2394 ;;      Locals:         4       0       0       0       0
  2395 ;;      Temps:          0       0       0       0       0
  2396 ;;      Totals:         8       0       0       0       0
  2397 ;;Total ram usage:        8 bytes
  2398 ;; Hardware stack levels used: 1
  2399 ;; This function calls:
  2400 ;;		Nothing
  2401 ;; This function is called by:
  2402 ;;		_main
  2403 ;;		_dec2bcd
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407     02F6                     ___awdiv:	
  2408                           ;psect for function ___awdiv
  2409                           
  2410     02F6                     l1124:	
  2411                           ;incstack = 0
  2412                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2413                           
  2414     02F6  01F5               	clrf	___awdiv@sign
  2415     02F7                     l1126:
  2416     02F7  1FF1               	btfss	___awdiv@divisor+1,7
  2417     02F8  2AFA               	goto	u491
  2418     02F9  2AFB               	goto	u490
  2419     02FA                     u491:
  2420     02FA  2B02               	goto	l1132
  2421     02FB                     u490:
  2422     02FB                     l1128:
  2423     02FB  09F0               	comf	___awdiv@divisor,f
  2424     02FC  09F1               	comf	___awdiv@divisor+1,f
  2425     02FD  0AF0               	incf	___awdiv@divisor,f
  2426     02FE  1903               	skipnz
  2427     02FF  0AF1               	incf	___awdiv@divisor+1,f
  2428     0300                     l1130:
  2429     0300  01F5               	clrf	___awdiv@sign
  2430     0301  0AF5               	incf	___awdiv@sign,f
  2431     0302                     l1132:
  2432     0302  1FF3               	btfss	___awdiv@dividend+1,7
  2433     0303  2B05               	goto	u501
  2434     0304  2B06               	goto	u500
  2435     0305                     u501:
  2436     0305  2B0F               	goto	l1138
  2437     0306                     u500:
  2438     0306                     l1134:
  2439     0306  09F2               	comf	___awdiv@dividend,f
  2440     0307  09F3               	comf	___awdiv@dividend+1,f
  2441     0308  0AF2               	incf	___awdiv@dividend,f
  2442     0309  1903               	skipnz
  2443     030A  0AF3               	incf	___awdiv@dividend+1,f
  2444     030B                     l1136:
  2445     030B  3001               	movlw	1
  2446     030C  00FF               	movwf	btemp+1
  2447     030D  087F               	movf	btemp+1,w
  2448     030E  06F5               	xorwf	___awdiv@sign,f
  2449     030F                     l1138:
  2450     030F  01F6               	clrf	___awdiv@quotient
  2451     0310  01F7               	clrf	___awdiv@quotient+1
  2452     0311                     l1140:
  2453     0311  0870               	movf	___awdiv@divisor,w
  2454     0312  0471               	iorwf	___awdiv@divisor+1,w
  2455     0313  1903               	btfsc	3,2
  2456     0314  2B16               	goto	u511
  2457     0315  2B17               	goto	u510
  2458     0316                     u511:
  2459     0316  2B4E               	goto	l1160
  2460     0317                     u510:
  2461     0317                     l1142:
  2462     0317  01F4               	clrf	___awdiv@counter
  2463     0318  0AF4               	incf	___awdiv@counter,f
  2464     0319  2B25               	goto	l1148
  2465     031A                     l1144:
  2466     031A  3001               	movlw	1
  2467     031B                     u525:
  2468     031B  1003               	clrc
  2469     031C  0DF0               	rlf	___awdiv@divisor,f
  2470     031D  0DF1               	rlf	___awdiv@divisor+1,f
  2471     031E  3EFF               	addlw	-1
  2472     031F  1D03               	skipz
  2473     0320  2B1B               	goto	u525
  2474     0321                     l1146:
  2475     0321  3001               	movlw	1
  2476     0322  00FF               	movwf	btemp+1
  2477     0323  087F               	movf	btemp+1,w
  2478     0324  07F4               	addwf	___awdiv@counter,f
  2479     0325                     l1148:
  2480     0325  1FF1               	btfss	___awdiv@divisor+1,7
  2481     0326  2B28               	goto	u531
  2482     0327  2B29               	goto	u530
  2483     0328                     u531:
  2484     0328  2B1A               	goto	l1144
  2485     0329                     u530:
  2486     0329                     l1150:
  2487     0329  3001               	movlw	1
  2488     032A                     u545:
  2489     032A  1003               	clrc
  2490     032B  0DF6               	rlf	___awdiv@quotient,f
  2491     032C  0DF7               	rlf	___awdiv@quotient+1,f
  2492     032D  3EFF               	addlw	-1
  2493     032E  1D03               	skipz
  2494     032F  2B2A               	goto	u545
  2495     0330  0871               	movf	___awdiv@divisor+1,w
  2496     0331  0273               	subwf	___awdiv@dividend+1,w
  2497     0332  1D03               	skipz
  2498     0333  2B36               	goto	u555
  2499     0334  0870               	movf	___awdiv@divisor,w
  2500     0335  0272               	subwf	___awdiv@dividend,w
  2501     0336                     u555:
  2502     0336  1C03               	skipc
  2503     0337  2B39               	goto	u551
  2504     0338  2B3A               	goto	u550
  2505     0339                     u551:
  2506     0339  2B41               	goto	l1156
  2507     033A                     u550:
  2508     033A                     l1152:
  2509     033A  0870               	movf	___awdiv@divisor,w
  2510     033B  02F2               	subwf	___awdiv@dividend,f
  2511     033C  0871               	movf	___awdiv@divisor+1,w
  2512     033D  1C03               	skipc
  2513     033E  03F3               	decf	___awdiv@dividend+1,f
  2514     033F  02F3               	subwf	___awdiv@dividend+1,f
  2515     0340                     l1154:
  2516     0340  1476               	bsf	___awdiv@quotient,0
  2517     0341                     l1156:
  2518     0341  3001               	movlw	1
  2519     0342                     u565:
  2520     0342  1003               	clrc
  2521     0343  0CF1               	rrf	___awdiv@divisor+1,f
  2522     0344  0CF0               	rrf	___awdiv@divisor,f
  2523     0345  3EFF               	addlw	-1
  2524     0346  1D03               	skipz
  2525     0347  2B42               	goto	u565
  2526     0348                     l1158:
  2527     0348  3001               	movlw	1
  2528     0349  02F4               	subwf	___awdiv@counter,f
  2529     034A  1D03               	btfss	3,2
  2530     034B  2B4D               	goto	u571
  2531     034C  2B4E               	goto	u570
  2532     034D                     u571:
  2533     034D  2B29               	goto	l1150
  2534     034E                     u570:
  2535     034E                     l1160:
  2536     034E  0875               	movf	___awdiv@sign,w
  2537     034F  1903               	btfsc	3,2
  2538     0350  2B52               	goto	u581
  2539     0351  2B53               	goto	u580
  2540     0352                     u581:
  2541     0352  2B58               	goto	l1164
  2542     0353                     u580:
  2543     0353                     l1162:
  2544     0353  09F6               	comf	___awdiv@quotient,f
  2545     0354  09F7               	comf	___awdiv@quotient+1,f
  2546     0355  0AF6               	incf	___awdiv@quotient,f
  2547     0356  1903               	skipnz
  2548     0357  0AF7               	incf	___awdiv@quotient+1,f
  2549     0358                     l1164:
  2550     0358  0877               	movf	___awdiv@quotient+1,w
  2551     0359  00F1               	movwf	?___awdiv+1
  2552     035A  0876               	movf	___awdiv@quotient,w
  2553     035B  00F0               	movwf	?___awdiv
  2554     035C                     l403:
  2555     035C  0008               	return
  2556     035D                     __end_of___awdiv:
  2557                           
  2558                           	psect	text13
  2559     0090                     __ptext13:	
  2560 ;; *************** function _init *****************
  2561 ;; Defined at:
  2562 ;;		line 190 in file "RTC.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2576 ;;      Params:         0       0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0
  2579 ;;      Totals:         0       0       0       0       0
  2580 ;;Total ram usage:        0 bytes
  2581 ;; Hardware stack levels used: 1
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_main
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589     0090                     _init:	
  2590                           ;psect for function _init
  2591                           
  2592     0090                     l1278:	
  2593                           ;incstack = 0
  2594                           ; Regs used in _init: [wreg+status,2]
  2595                           
  2596                           
  2597                           ;RTC.c: 191:     DRC = (unsigned char*)0X87;
  2598     0090  3087               	movlw	135
  2599     0091  1283               	bcf	3,5	;RP0=0, select bank0
  2600     0092  1303               	bcf	3,6	;RP1=0, select bank0
  2601     0093  00C2               	movwf	_DRC
  2602     0094  3000               	movlw	0
  2603     0095  00C3               	movwf	_DRC+1
  2604                           
  2605                           ;RTC.c: 193:     dataC = (unsigned char*)0x07;
  2606     0096  3007               	movlw	7
  2607     0097  00C0               	movwf	_dataC
  2608     0098  3000               	movlw	0
  2609     0099  00C1               	movwf	_dataC+1
  2610     009A                     l1280:
  2611                           
  2612                           ;RTC.c: 195:     *DRC = (unsigned char*)0X18;
  2613     009A  3018               	movlw	24
  2614     009B  1683               	bsf	3,5	;RP0=1, select bank1
  2615     009C  1303               	bcf	3,6	;RP1=0, select bank1
  2616     009D  0087               	movwf	7
  2617     009E                     l1282:
  2618                           
  2619                           ;RTC.c: 196:     *dataC = (unsigned char*)0x00;
  2620     009E  1283               	bcf	3,5	;RP0=0, select bank0
  2621     009F  1303               	bcf	3,6	;RP1=0, select bank0
  2622     00A0  0187               	clrf	7
  2623     00A1                     l131:
  2624     00A1  0008               	return
  2625     00A2                     __end_of_init:
  2626                           
  2627                           	psect	text14
  2628     01E3                     __ptext14:	
  2629 ;; *************** function _i2c_init *****************
  2630 ;; Defined at:
  2631 ;;		line 129 in file "RTC.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  baud            4    0[BANK0 ] unsigned long 
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;		None
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      void 
  2638 ;; Registers used:
  2639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2645 ;;      Params:         0       4       0       0       0
  2646 ;;      Locals:         0       0       0       0       0
  2647 ;;      Temps:          0       4       0       0       0
  2648 ;;      Totals:         0       8       0       0       0
  2649 ;;Total ram usage:        8 bytes
  2650 ;; Hardware stack levels used: 1
  2651 ;; Hardware stack levels required when called: 1
  2652 ;; This function calls:
  2653 ;;		___lldiv
  2654 ;; This function is called by:
  2655 ;;		_main
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659     01E3                     _i2c_init:	
  2660                           ;psect for function _i2c_init
  2661                           
  2662     01E3                     l1298:	
  2663                           ;incstack = 0
  2664                           ; Regs used in _i2c_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2665                           
  2666                           
  2667                           ;RTC.c: 130:     SSPCON_1 = (unsigned char*)0x14;
  2668     01E3  3014               	movlw	20
  2669     01E4  1283               	bcf	3,5	;RP0=0, select bank0
  2670     01E5  1303               	bcf	3,6	;RP1=0, select bank0
  2671     01E6  00CC               	movwf	_SSPCON_1
  2672     01E7  3000               	movlw	0
  2673     01E8  00CD               	movwf	_SSPCON_1+1
  2674                           
  2675                           ;RTC.c: 131:     SSPCON_2 = (unsigned char*)0x91;
  2676     01E9  3091               	movlw	145
  2677     01EA  00CE               	movwf	_SSPCON_2
  2678     01EB  3000               	movlw	0
  2679     01EC  00CF               	movwf	_SSPCON_2+1
  2680                           
  2681                           ;RTC.c: 132:     SSP_STAT = (unsigned char*)0x94;
  2682     01ED  3094               	movlw	148
  2683     01EE  00C8               	movwf	_SSP_STAT
  2684     01EF  3000               	movlw	0
  2685     01F0  00C9               	movwf	_SSP_STAT+1
  2686                           
  2687                           ;RTC.c: 133:     SSP_ADD = (unsigned char*)0x93;
  2688     01F1  3093               	movlw	147
  2689     01F2  00C6               	movwf	_SSP_ADD
  2690     01F3  3000               	movlw	0
  2691     01F4  00C7               	movwf	_SSP_ADD+1
  2692                           
  2693                           ;RTC.c: 134:     SSP_BUF = (unsigned char*)0x13;
  2694     01F5  3013               	movlw	19
  2695     01F6  00CA               	movwf	_SSP_BUF
  2696     01F7  3000               	movlw	0
  2697     01F8  00CB               	movwf	_SSP_BUF+1
  2698                           
  2699                           ;RTC.c: 135:     PIF1 = (unsigned char*)0x0C;
  2700     01F9  300C               	movlw	12
  2701     01FA  00C4               	movwf	_PIF1
  2702     01FB  3000               	movlw	0
  2703     01FC  00C5               	movwf	_PIF1+1
  2704     01FD                     l1300:
  2705                           
  2706                           ;RTC.c: 136:     *SSPCON_1 = 0x28;
  2707     01FD  3028               	movlw	40
  2708     01FE  0094               	movwf	20
  2709     01FF                     l1302:
  2710                           
  2711                           ;RTC.c: 137:     *SSP_STAT = 0x00;
  2712     01FF  0848               	movf	_SSP_STAT,w
  2713     0200  0084               	movwf	4
  2714     0201  1783               	bsf	3,7
  2715     0202  1C49               	btfss	_SSP_STAT+1,0
  2716     0203  1383               	bcf	3,7
  2717     0204  0180               	clrf	0
  2718     0205                     l1304:
  2719                           
  2720                           ;RTC.c: 138:     *SSPCON_2 = 0x00;
  2721     0205  084E               	movf	_SSPCON_2,w
  2722     0206  0084               	movwf	4
  2723     0207  1783               	bsf	3,7
  2724     0208  1C4F               	btfss	_SSPCON_2+1,0
  2725     0209  1383               	bcf	3,7
  2726     020A  0180               	clrf	0
  2727     020B                     l1306:
  2728                           
  2729                           ;RTC.c: 139:     *SSP_ADD = (20000000/(4*baud))-1;
  2730     020B  0850               	movf	i2c_init@baud,w
  2731     020C  00D4               	movwf	??_i2c_init
  2732     020D  0851               	movf	i2c_init@baud+1,w
  2733     020E  00D5               	movwf	??_i2c_init+1
  2734     020F  0852               	movf	i2c_init@baud+2,w
  2735     0210  00D6               	movwf	??_i2c_init+2
  2736     0211  0853               	movf	i2c_init@baud+3,w
  2737     0212  00D7               	movwf	??_i2c_init+3
  2738     0213  3002               	movlw	2
  2739     0214                     u775:
  2740     0214  1003               	clrc
  2741     0215  0DD4               	rlf	??_i2c_init,f
  2742     0216  0DD5               	rlf	??_i2c_init+1,f
  2743     0217  0DD6               	rlf	??_i2c_init+2,f
  2744     0218  0DD7               	rlf	??_i2c_init+3,f
  2745     0219                     u770:
  2746     0219  3EFF               	addlw	-1
  2747     021A  1D03               	skipz
  2748     021B  2A14               	goto	u775
  2749     021C  0857               	movf	??_i2c_init+3,w
  2750     021D  00F3               	movwf	___lldiv@divisor+3
  2751     021E  0856               	movf	??_i2c_init+2,w
  2752     021F  00F2               	movwf	___lldiv@divisor+2
  2753     0220  0855               	movf	??_i2c_init+1,w
  2754     0221  00F1               	movwf	___lldiv@divisor+1
  2755     0222  0854               	movf	??_i2c_init,w
  2756     0223  00F0               	movwf	___lldiv@divisor
  2757     0224  3001               	movlw	1
  2758     0225  00F7               	movwf	___lldiv@dividend+3
  2759     0226  3031               	movlw	49
  2760     0227  00F6               	movwf	___lldiv@dividend+2
  2761     0228  302D               	movlw	45
  2762     0229  00F5               	movwf	___lldiv@dividend+1
  2763     022A  3000               	movlw	0
  2764     022B  00F4               	movwf	___lldiv@dividend
  2765     022C  120A  118A  2290  120A  118A  	fcall	___lldiv
  2766     0231  0870               	movf	?___lldiv,w
  2767     0232  3EFF               	addlw	255
  2768     0233  1683               	bsf	3,5	;RP0=1, select bank1
  2769     0234  1303               	bcf	3,6	;RP1=0, select bank1
  2770     0235  0093               	movwf	19
  2771     0236                     l105:
  2772     0236  0008               	return
  2773     0237                     __end_of_i2c_init:
  2774                           
  2775                           	psect	text15
  2776     0290                     __ptext15:	
  2777 ;; *************** function ___lldiv *****************
  2778 ;; Defined at:
  2779 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;  divisor         4    0[COMMON] unsigned long 
  2782 ;;  dividend        4    4[COMMON] unsigned long 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;  quotient        4    9[COMMON] unsigned long 
  2785 ;;  counter         1   13[COMMON] unsigned char 
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  4    0[COMMON] unsigned long 
  2788 ;; Registers used:
  2789 ;;		wreg, status,2, status,0, btemp+1
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2795 ;;      Params:         8       0       0       0       0
  2796 ;;      Locals:         5       0       0       0       0
  2797 ;;      Temps:          1       0       0       0       0
  2798 ;;      Totals:        14       0       0       0       0
  2799 ;;Total ram usage:       14 bytes
  2800 ;; Hardware stack levels used: 1
  2801 ;; This function calls:
  2802 ;;		Nothing
  2803 ;; This function is called by:
  2804 ;;		_i2c_init
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808     0290                     ___lldiv:	
  2809                           ;psect for function ___lldiv
  2810                           
  2811     0290                     l1252:	
  2812                           ;incstack = 0
  2813                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  2814                           
  2815     0290  3000               	movlw	0
  2816     0291  00FC               	movwf	___lldiv@quotient+3
  2817     0292  3000               	movlw	0
  2818     0293  00FB               	movwf	___lldiv@quotient+2
  2819     0294  3000               	movlw	0
  2820     0295  00FA               	movwf	___lldiv@quotient+1
  2821     0296  3000               	movlw	0
  2822     0297  00F9               	movwf	___lldiv@quotient
  2823     0298  0873               	movf	___lldiv@divisor+3,w
  2824     0299  0472               	iorwf	___lldiv@divisor+2,w
  2825     029A  0471               	iorwf	___lldiv@divisor+1,w
  2826     029B  0470               	iorwf	___lldiv@divisor,w
  2827     029C  1903               	skipnz
  2828     029D  2A9F               	goto	u701
  2829     029E  2AA0               	goto	u700
  2830     029F                     u701:
  2831     029F  2AED               	goto	l1274
  2832     02A0                     u700:
  2833     02A0                     l1254:
  2834     02A0  01FD               	clrf	___lldiv@counter
  2835     02A1  0AFD               	incf	___lldiv@counter,f
  2836     02A2  2AB0               	goto	l1260
  2837     02A3                     l1256:
  2838     02A3  3001               	movlw	1
  2839     02A4  00F8               	movwf	??___lldiv
  2840     02A5                     u715:
  2841     02A5  1003               	clrc
  2842     02A6  0DF0               	rlf	___lldiv@divisor,f
  2843     02A7  0DF1               	rlf	___lldiv@divisor+1,f
  2844     02A8  0DF2               	rlf	___lldiv@divisor+2,f
  2845     02A9  0DF3               	rlf	___lldiv@divisor+3,f
  2846     02AA  0BF8               	decfsz	??___lldiv,f
  2847     02AB  2AA5               	goto	u715
  2848     02AC                     l1258:
  2849     02AC  3001               	movlw	1
  2850     02AD  00FF               	movwf	btemp+1
  2851     02AE  087F               	movf	btemp+1,w
  2852     02AF  07FD               	addwf	___lldiv@counter,f
  2853     02B0                     l1260:
  2854     02B0  1FF3               	btfss	___lldiv@divisor+3,7
  2855     02B1  2AB3               	goto	u721
  2856     02B2  2AB4               	goto	u720
  2857     02B3                     u721:
  2858     02B3  2AA3               	goto	l1256
  2859     02B4                     u720:
  2860     02B4                     l1262:
  2861     02B4  3001               	movlw	1
  2862     02B5  00F8               	movwf	??___lldiv
  2863     02B6                     u735:
  2864     02B6  1003               	clrc
  2865     02B7  0DF9               	rlf	___lldiv@quotient,f
  2866     02B8  0DFA               	rlf	___lldiv@quotient+1,f
  2867     02B9  0DFB               	rlf	___lldiv@quotient+2,f
  2868     02BA  0DFC               	rlf	___lldiv@quotient+3,f
  2869     02BB  0BF8               	decfsz	??___lldiv,f
  2870     02BC  2AB6               	goto	u735
  2871     02BD                     l1264:
  2872     02BD  0873               	movf	___lldiv@divisor+3,w
  2873     02BE  0277               	subwf	___lldiv@dividend+3,w
  2874     02BF  1D03               	skipz
  2875     02C0  2ACB               	goto	u745
  2876     02C1  0872               	movf	___lldiv@divisor+2,w
  2877     02C2  0276               	subwf	___lldiv@dividend+2,w
  2878     02C3  1D03               	skipz
  2879     02C4  2ACB               	goto	u745
  2880     02C5  0871               	movf	___lldiv@divisor+1,w
  2881     02C6  0275               	subwf	___lldiv@dividend+1,w
  2882     02C7  1D03               	skipz
  2883     02C8  2ACB               	goto	u745
  2884     02C9  0870               	movf	___lldiv@divisor,w
  2885     02CA  0274               	subwf	___lldiv@dividend,w
  2886     02CB                     u745:
  2887     02CB  1C03               	skipc
  2888     02CC  2ACE               	goto	u741
  2889     02CD  2ACF               	goto	u740
  2890     02CE                     u741:
  2891     02CE  2ADE               	goto	l1270
  2892     02CF                     u740:
  2893     02CF                     l1266:
  2894     02CF  0870               	movf	___lldiv@divisor,w
  2895     02D0  02F4               	subwf	___lldiv@dividend,f
  2896     02D1  0871               	movf	___lldiv@divisor+1,w
  2897     02D2  1C03               	skipc
  2898     02D3  0F71               	incfsz	___lldiv@divisor+1,w
  2899     02D4  02F5               	subwf	___lldiv@dividend+1,f
  2900     02D5  0872               	movf	___lldiv@divisor+2,w
  2901     02D6  1C03               	skipc
  2902     02D7  0F72               	incfsz	___lldiv@divisor+2,w
  2903     02D8  02F6               	subwf	___lldiv@dividend+2,f
  2904     02D9  0873               	movf	___lldiv@divisor+3,w
  2905     02DA  1C03               	skipc
  2906     02DB  0F73               	incfsz	___lldiv@divisor+3,w
  2907     02DC  02F7               	subwf	___lldiv@dividend+3,f
  2908     02DD                     l1268:
  2909     02DD  1479               	bsf	___lldiv@quotient,0
  2910     02DE                     l1270:
  2911     02DE  3001               	movlw	1
  2912     02DF                     u755:
  2913     02DF  1003               	clrc
  2914     02E0  0CF3               	rrf	___lldiv@divisor+3,f
  2915     02E1  0CF2               	rrf	___lldiv@divisor+2,f
  2916     02E2  0CF1               	rrf	___lldiv@divisor+1,f
  2917     02E3  0CF0               	rrf	___lldiv@divisor,f
  2918     02E4  3EFF               	addlw	-1
  2919     02E5  1D03               	skipz
  2920     02E6  2ADF               	goto	u755
  2921     02E7                     l1272:
  2922     02E7  3001               	movlw	1
  2923     02E8  02FD               	subwf	___lldiv@counter,f
  2924     02E9  1D03               	btfss	3,2
  2925     02EA  2AEC               	goto	u761
  2926     02EB  2AED               	goto	u760
  2927     02EC                     u761:
  2928     02EC  2AB4               	goto	l1262
  2929     02ED                     u760:
  2930     02ED                     l1274:
  2931     02ED  087C               	movf	___lldiv@quotient+3,w
  2932     02EE  00F3               	movwf	?___lldiv+3
  2933     02EF  087B               	movf	___lldiv@quotient+2,w
  2934     02F0  00F2               	movwf	?___lldiv+2
  2935     02F1  087A               	movf	___lldiv@quotient+1,w
  2936     02F2  00F1               	movwf	?___lldiv+1
  2937     02F3  0879               	movf	___lldiv@quotient,w
  2938     02F4  00F0               	movwf	?___lldiv
  2939     02F5                     l286:
  2940     02F5  0008               	return
  2941     02F6                     __end_of___lldiv:
  2942                           
  2943                           	psect	text16
  2944     03EC                     __ptext16:	
  2945 ;; *************** function _days *****************
  2946 ;; Defined at:
  2947 ;;		line 216 in file "RTC.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  day             2    3[COMMON] int 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;		None
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      void 
  2954 ;; Registers used:
  2955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2961 ;;      Params:         2       0       0       0       0
  2962 ;;      Locals:         0       0       0       0       0
  2963 ;;      Temps:          0       0       0       0       0
  2964 ;;      Totals:         2       0       0       0       0
  2965 ;;Total ram usage:        2 bytes
  2966 ;; Hardware stack levels used: 1
  2967 ;; Hardware stack levels required when called: 1
  2968 ;; This function calls:
  2969 ;;		_UART_send
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975     03EC                     _days:	
  2976                           ;psect for function _days
  2977                           
  2978     03EC                     l1358:	
  2979                           ;incstack = 0
  2980                           ; Regs used in _days: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2981                           
  2982                           
  2983                           ;RTC.c: 217:     switch(day) {
  2984     03EC  2C9C               	goto	l1376
  2985     03ED                     l1360:
  2986                           
  2987                           ;RTC.c: 219:                 UART_send(' '); UART_send('S');
  2988     03ED  3020               	movlw	32
  2989     03EE  120A  118A  2081  120A  118A  	fcall	_UART_send
  2990     03F3  3053               	movlw	83
  2991     03F4  120A  118A  2081  120A  118A  	fcall	_UART_send
  2992                           
  2993                           ;RTC.c: 220:                 UART_send('U'); UART_send('N');
  2994     03F9  3055               	movlw	85
  2995     03FA  120A  118A  2081  120A  118A  	fcall	_UART_send
  2996     03FF  304E               	movlw	78
  2997     0400  120A  118A  2081  120A  118A  	fcall	_UART_send
  2998                           
  2999                           ;RTC.c: 221:                 break;
  3000     0405  2CB8               	goto	l143
  3001     0406                     l1362:
  3002                           
  3003                           ;RTC.c: 223:                 UART_send(' '); UART_send('M');
  3004     0406  3020               	movlw	32
  3005     0407  120A  118A  2081  120A  118A  	fcall	_UART_send
  3006     040C  304D               	movlw	77
  3007     040D  120A  118A  2081  120A  118A  	fcall	_UART_send
  3008                           
  3009                           ;RTC.c: 224:                 UART_send('O'); UART_send('N');
  3010     0412  304F               	movlw	79
  3011     0413  120A  118A  2081  120A  118A  	fcall	_UART_send
  3012     0418  304E               	movlw	78
  3013     0419  120A  118A  2081  120A  118A  	fcall	_UART_send
  3014                           
  3015                           ;RTC.c: 225:                 break;
  3016     041E  2CB8               	goto	l143
  3017     041F                     l1364:
  3018                           
  3019                           ;RTC.c: 227:                 UART_send(' '); UART_send('T');
  3020     041F  3020               	movlw	32
  3021     0420  120A  118A  2081  120A  118A  	fcall	_UART_send
  3022     0425  3054               	movlw	84
  3023     0426  120A  118A  2081  120A  118A  	fcall	_UART_send
  3024                           
  3025                           ;RTC.c: 228:                 UART_send('U'); UART_send('E');
  3026     042B  3055               	movlw	85
  3027     042C  120A  118A  2081  120A  118A  	fcall	_UART_send
  3028     0431  3045               	movlw	69
  3029     0432  120A  118A  2081  120A  118A  	fcall	_UART_send
  3030                           
  3031                           ;RTC.c: 229:                 break;
  3032     0437  2CB8               	goto	l143
  3033     0438                     l1366:
  3034                           
  3035                           ;RTC.c: 231:                 UART_send(' '); UART_send('W');
  3036     0438  3020               	movlw	32
  3037     0439  120A  118A  2081  120A  118A  	fcall	_UART_send
  3038     043E  3057               	movlw	87
  3039     043F  120A  118A  2081  120A  118A  	fcall	_UART_send
  3040                           
  3041                           ;RTC.c: 232:                 UART_send('E'); UART_send('D');
  3042     0444  3045               	movlw	69
  3043     0445  120A  118A  2081  120A  118A  	fcall	_UART_send
  3044     044A  3044               	movlw	68
  3045     044B  120A  118A  2081  120A  118A  	fcall	_UART_send
  3046                           
  3047                           ;RTC.c: 233:                 break;
  3048     0450  2CB8               	goto	l143
  3049     0451                     l1368:
  3050                           
  3051                           ;RTC.c: 235:                 UART_send(' '); UART_send('T');
  3052     0451  3020               	movlw	32
  3053     0452  120A  118A  2081  120A  118A  	fcall	_UART_send
  3054     0457  3054               	movlw	84
  3055     0458  120A  118A  2081  120A  118A  	fcall	_UART_send
  3056                           
  3057                           ;RTC.c: 236:                 UART_send('H'); UART_send('U');
  3058     045D  3048               	movlw	72
  3059     045E  120A  118A  2081  120A  118A  	fcall	_UART_send
  3060     0463  3055               	movlw	85
  3061     0464  120A  118A  2081  120A  118A  	fcall	_UART_send
  3062                           
  3063                           ;RTC.c: 237:                 break;
  3064     0469  2CB8               	goto	l143
  3065     046A                     l1370:
  3066                           
  3067                           ;RTC.c: 239:                 UART_send(' '); UART_send('F');
  3068     046A  3020               	movlw	32
  3069     046B  120A  118A  2081  120A  118A  	fcall	_UART_send
  3070     0470  3046               	movlw	70
  3071     0471  120A  118A  2081  120A  118A  	fcall	_UART_send
  3072                           
  3073                           ;RTC.c: 240:                 UART_send('R'); UART_send('I');
  3074     0476  3052               	movlw	82
  3075     0477  120A  118A  2081  120A  118A  	fcall	_UART_send
  3076     047C  3049               	movlw	73
  3077     047D  120A  118A  2081  120A  118A  	fcall	_UART_send
  3078                           
  3079                           ;RTC.c: 241:                 break;
  3080     0482  2CB8               	goto	l143
  3081     0483                     l1372:
  3082                           
  3083                           ;RTC.c: 243:                 UART_send(' '); UART_send('S');
  3084     0483  3020               	movlw	32
  3085     0484  120A  118A  2081  120A  118A  	fcall	_UART_send
  3086     0489  3053               	movlw	83
  3087     048A  120A  118A  2081  120A  118A  	fcall	_UART_send
  3088                           
  3089                           ;RTC.c: 244:                 UART_send('A'); UART_send('T');
  3090     048F  3041               	movlw	65
  3091     0490  120A  118A  2081  120A  118A  	fcall	_UART_send
  3092     0495  3054               	movlw	84
  3093     0496  120A  118A  2081  120A  118A  	fcall	_UART_send
  3094                           
  3095                           ;RTC.c: 245:                 break;
  3096     049B  2CB8               	goto	l143
  3097     049C                     l1376:
  3098                           
  3099                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3100                           ; Switch size 1, requested type "simple"
  3101                           ; Number of cases is 1, Range of values is 0 to 0
  3102                           ; switch strategies available:
  3103                           ; Name         Instructions Cycles
  3104                           ; simple_byte            4     3 (average)
  3105                           ; direct_byte           11     8 (fixed)
  3106                           ; jumptable            260     6 (fixed)
  3107                           ;	Chosen strategy is simple_byte
  3108     049C  0874               	movf	days@day+1,w
  3109     049D  3A00               	xorlw	0	; case 0
  3110     049E  1903               	skipnz
  3111     049F  2CA1               	goto	l1500
  3112     04A0  2CB8               	goto	l143
  3113     04A1                     l1500:
  3114                           
  3115                           ; Switch size 1, requested type "simple"
  3116                           ; Number of cases is 7, Range of values is 1 to 7
  3117                           ; switch strategies available:
  3118                           ; Name         Instructions Cycles
  3119                           ; simple_byte           22    12 (average)
  3120                           ; direct_byte           32    11 (fixed)
  3121                           ; jumptable            263     9 (fixed)
  3122                           ;	Chosen strategy is simple_byte
  3123     04A1  0873               	movf	days@day,w
  3124     04A2  3A01               	xorlw	1	; case 1
  3125     04A3  1903               	skipnz
  3126     04A4  2BED               	goto	l1360
  3127     04A5  3A03               	xorlw	3	; case 2
  3128     04A6  1903               	skipnz
  3129     04A7  2C06               	goto	l1362
  3130     04A8  3A01               	xorlw	1	; case 3
  3131     04A9  1903               	skipnz
  3132     04AA  2C1F               	goto	l1364
  3133     04AB  3A07               	xorlw	7	; case 4
  3134     04AC  1903               	skipnz
  3135     04AD  2C38               	goto	l1366
  3136     04AE  3A01               	xorlw	1	; case 5
  3137     04AF  1903               	skipnz
  3138     04B0  2C51               	goto	l1368
  3139     04B1  3A03               	xorlw	3	; case 6
  3140     04B2  1903               	skipnz
  3141     04B3  2C6A               	goto	l1370
  3142     04B4  3A01               	xorlw	1	; case 7
  3143     04B5  1903               	skipnz
  3144     04B6  2C83               	goto	l1372
  3145     04B7  2CB8               	goto	l143
  3146     04B8                     l143:
  3147     04B8  0008               	return
  3148     04B9                     __end_of_days:
  3149                           
  3150                           	psect	text17
  3151     0081                     __ptext17:	
  3152 ;; *************** function _UART_send *****************
  3153 ;; Defined at:
  3154 ;;		line 326 in file "RTC.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  data            1    wreg     unsigned char 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  data            1    2[COMMON] unsigned char 
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  1    wreg      void 
  3161 ;; Registers used:
  3162 ;;		wreg
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3168 ;;      Params:         0       0       0       0       0
  3169 ;;      Locals:         1       0       0       0       0
  3170 ;;      Temps:          2       0       0       0       0
  3171 ;;      Totals:         3       0       0       0       0
  3172 ;;Total ram usage:        3 bytes
  3173 ;; Hardware stack levels used: 1
  3174 ;; This function calls:
  3175 ;;		Nothing
  3176 ;; This function is called by:
  3177 ;;		_main
  3178 ;;		_days
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182     0081                     _UART_send:	
  3183                           ;psect for function _UART_send
  3184                           
  3185                           
  3186                           ;incstack = 0
  3187                           ; Regs used in _UART_send: [wreg]
  3188                           ;UART_send@data stored from wreg
  3189     0081  00F2               	movwf	UART_send@data
  3190     0082                     l1210:
  3191                           
  3192                           ;RTC.c: 327:     TXREG = data;
  3193     0082  0872               	movf	UART_send@data,w
  3194     0083  1283               	bcf	3,5	;RP0=0, select bank0
  3195     0084  1303               	bcf	3,6	;RP1=0, select bank0
  3196     0085  0099               	movwf	25	;volatile
  3197                           
  3198                           ;RTC.c: 328:     _delay((unsigned long)((3)*(20000000/4000.0)));
  3199     0086  3014               	movlw	20
  3200     0087  00F1               	movwf	??_UART_send+1
  3201     0088  3079               	movlw	121
  3202     0089  00F0               	movwf	??_UART_send
  3203     008A                     u867:
  3204     008A  0BF0               	decfsz	??_UART_send,f
  3205     008B  288A               	goto	u867
  3206     008C  0BF1               	decfsz	??_UART_send+1,f
  3207     008D  288A               	goto	u867
  3208     008E  288F               	nop2
  3209     008F                     l161:
  3210     008F  0008               	return
  3211     0090                     __end_of_UART_send:
  3212                           
  3213                           	psect	text18
  3214     005E                     __ptext18:	
  3215 ;; *************** function _UART_newline *****************
  3216 ;; Defined at:
  3217 ;;		line 330 in file "RTC.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;		None
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;		None
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      void 
  3224 ;; Registers used:
  3225 ;;		wreg
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3231 ;;      Params:         0       0       0       0       0
  3232 ;;      Locals:         0       0       0       0       0
  3233 ;;      Temps:          0       0       0       0       0
  3234 ;;      Totals:         0       0       0       0       0
  3235 ;;Total ram usage:        0 bytes
  3236 ;; Hardware stack levels used: 1
  3237 ;; This function calls:
  3238 ;;		Nothing
  3239 ;; This function is called by:
  3240 ;;		_main
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244     005E                     _UART_newline:	
  3245                           ;psect for function _UART_newline
  3246                           
  3247     005E                     l1356:	
  3248                           ;incstack = 0
  3249                           ; Regs used in _UART_newline: [wreg]
  3250                           
  3251                           
  3252                           ;RTC.c: 331:     TXREG = 0x0A;
  3253     005E  300A               	movlw	10
  3254     005F  1283               	bcf	3,5	;RP0=0, select bank0
  3255     0060  1303               	bcf	3,6	;RP1=0, select bank0
  3256     0061  0099               	movwf	25	;volatile
  3257                           
  3258                           ;RTC.c: 332:     TXREG = 0x0D;
  3259     0062  300D               	movlw	13
  3260     0063  0099               	movwf	25	;volatile
  3261     0064                     l164:
  3262     0064  0008               	return
  3263     0065                     __end_of_UART_newline:
  3264                           
  3265                           	psect	text19
  3266     00CC                     __ptext19:	
  3267 ;; *************** function _UART_init *****************
  3268 ;; Defined at:
  3269 ;;		line 317 in file "RTC.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;		None
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;		None
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      void 
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, status,0, btemp+1
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3283 ;;      Params:         0       0       0       0       0
  3284 ;;      Locals:         0       0       0       0       0
  3285 ;;      Temps:          0       0       0       0       0
  3286 ;;      Totals:         0       0       0       0       0
  3287 ;;Total ram usage:        0 bytes
  3288 ;; Hardware stack levels used: 1
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_main
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296     00CC                     _UART_init:	
  3297                           ;psect for function _UART_init
  3298                           
  3299     00CC                     l1284:	
  3300                           ;incstack = 0
  3301                           ; Regs used in _UART_init: [wreg+status,2+status,0+btemp+1]
  3302                           
  3303                           
  3304                           ;RTC.c: 318:     TRISB = 0xF0;
  3305     00CC  30F0               	movlw	240
  3306     00CD  1683               	bsf	3,5	;RP0=1, select bank1
  3307     00CE  1303               	bcf	3,6	;RP1=0, select bank1
  3308     00CF  0086               	movwf	6	;volatile
  3309     00D0                     l1286:
  3310                           
  3311                           ;RTC.c: 319:     PORTB = 0x00;
  3312     00D0  1283               	bcf	3,5	;RP0=0, select bank0
  3313     00D1  1303               	bcf	3,6	;RP1=0, select bank0
  3314     00D2  0186               	clrf	6	;volatile
  3315     00D3                     l1288:
  3316                           
  3317                           ;RTC.c: 320:     OPTION_REG &= 0x7F;
  3318     00D3  307F               	movlw	127
  3319     00D4  00FF               	movwf	btemp+1
  3320     00D5  087F               	movf	btemp+1,w
  3321     00D6  1683               	bsf	3,5	;RP0=1, select bank1
  3322     00D7  1303               	bcf	3,6	;RP1=0, select bank1
  3323     00D8  0581               	andwf	1,f	;volatile
  3324     00D9                     l1290:
  3325                           
  3326                           ;RTC.c: 321:     TRISC = 0xC0;
  3327     00D9  30C0               	movlw	192
  3328     00DA  0087               	movwf	7	;volatile
  3329     00DB                     l1292:
  3330                           
  3331                           ;RTC.c: 322:     TXSTA = 0x20;
  3332     00DB  3020               	movlw	32
  3333     00DC  0098               	movwf	24	;volatile
  3334     00DD                     l1294:
  3335                           
  3336                           ;RTC.c: 323:     RCSTA = 0x90;
  3337     00DD  3090               	movlw	144
  3338     00DE  1283               	bcf	3,5	;RP0=0, select bank0
  3339     00DF  1303               	bcf	3,6	;RP1=0, select bank0
  3340     00E0  0098               	movwf	24	;volatile
  3341     00E1                     l1296:
  3342                           
  3343                           ;RTC.c: 324:     SPBRG = 0x20;
  3344     00E1  3020               	movlw	32
  3345     00E2  1683               	bsf	3,5	;RP0=1, select bank1
  3346     00E3  1303               	bcf	3,6	;RP1=0, select bank1
  3347     00E4  0099               	movwf	25	;volatile
  3348     00E5                     l158:
  3349     00E5  0008               	return
  3350     00E6                     __end_of_UART_init:
  3351     007E                     btemp	set	126	;btemp
  3352     007E                     wtemp0	set	126
  3353                           
  3354                           	psect	config
  3355                           
  3356                           ;Config register CONFIG @ 0x2007
  3357                           ;	Oscillator Selection bits
  3358                           ;	FOSC = HS, HS oscillator
  3359                           ;	Watchdog Timer Enable bit
  3360                           ;	WDTE = OFF, WDT disabled
  3361                           ;	Power-up Timer Enable bit
  3362                           ;	PWRTE = OFF, PWRT disabled
  3363                           ;	Brown-out Reset Enable bit
  3364                           ;	BOREN = OFF, BOR disabled
  3365                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3366                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3367                           ;	Data EEPROM Memory Code Protection bit
  3368                           ;	CPD = OFF, Data EEPROM code protection off
  3369                           ;	Flash Program Memory Write Enable bits
  3370                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3371                           ;	In-Circuit Debugger Mode bit
  3372                           ;	DEBUG = 0x1, unprogrammed default
  3373                           ;	Flash Program Memory Code Protection bit
  3374                           ;	CP = OFF, Code protection off
  3375     2007                     	org	8199
  3376     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         6
    Persistent  16
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      65
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    dataC	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), NULL(NULL[0]), 

    dataD	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    DRC	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), NULL(NULL[0]), 

    DRD	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    PIF1	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), NULL(NULL[0]), 

    SSP_ADD	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), NULL(NULL[0]), 

    SSP_BUF	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), NULL(NULL[0]), 

    SSP_STAT	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), NULL(NULL[0]), 

    SSPCON_1	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), NULL(NULL[0]), 

    SSPCON_2	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _update->_bcd2dec
    _bcd2dec->___wmul
    _setup->_dec2bcd
    _dec2bcd->___awdiv
    _i2c_init->___lldiv
    _days->_UART_send

Critical Paths under _main in BANK0

    _main->_i2c_init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   11221
                                              8 BANK0      3     3      0
                          _UART_init
                       _UART_newline
                          _UART_send
                            ___awdiv
                            ___awmod
                               _days
                            _dec2bcd
                           _i2c_init
                               _init
                              _setup
                             _update
 ---------------------------------------------------------------------------------
 (1) _update                                               2     2      0     865
                                             10 COMMON     2     2      0
                            _bcd2dec
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             4     4      0      23
                                              0 COMMON     4     4      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _bcd2dec                                              4     2      2     820
                                              6 COMMON     4     2      2
                             ___wmul
                           _i2c_read (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    3550
                            _dec2bcd
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _dec2bcd                                              4     2      2    3528
                                              8 COMMON     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1360
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _days                                                 2     0      2     120
                                              3 COMMON     2     0      2
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _UART_send                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _UART_newline                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
   _UART_newline
   _UART_send
   ___awdiv
   ___awmod
   _days
     _UART_send
   _dec2bcd
     ___awdiv
     ___awmod
   _i2c_init
     ___lldiv
   _init
   _setup
     _dec2bcd
     _i2c_start
       _i2c_wait
     _i2c_stop
       _i2c_wait
     _i2c_write
       _i2c_wait
   _update
     _bcd2dec
       ___wmul
       _i2c_read (ARG)
         _i2c_wait
     _i2c_read
     _i2c_start
     _i2c_stop
     _i2c_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      41       5       81.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4F      12        0.0%
ABS                  0      0      4F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed May 29 14:38:30 2024

                      _i 005D                        pc 0002             ___awdiv@sign 0075  
                     fsr 0004      ___wmul@multiplicand 0072                      l111 00CB  
                    l120 0080                      l105 0236                      l114 0072  
                    l131 00A1                      l124 01E2                      l143 04B8  
                    l128 0127                      l152 03EB                      l161 008F  
                    l146 01A1                      l250 0134                      l403 035C  
                    l155 058E                      l164 0064                      l252 014C  
                    l149 0171                      l158 00E5                      l416 028F  
                    l286 02F5                      _DRC 0042                      _DRD 0060  
                    u500 0306                      u501 0305                      u510 0317  
                    u430 00C0                      u511 0316                      u431 00BF  
                    u600 0247                      u440 00CB                      u601 0246  
                    u441 00CA                      u530 0329                      u610 0252  
                    u450 012E                      u531 0328                      u611 0251  
                    u451 012D                      u700 02A0                      u701 029F  
                    u525 031B                      u550 033A                      u630 0264  
                    u551 0339                      u631 0263                      u720 02B4  
                    u640 026E                      u480 0148                      u800 06B4  
                    u721 02B3                      u545 032A                      u641 026D  
                    u625 0256                      u481 0147                      u465 0135  
                    u801 06B3                      u570 034E                      u490 02FB  
                    u810 06DA                      u715 02A5                      u571 034D  
                    u555 0336                      u491 02FA                      u475 013C  
                    u811 06D9                      u740 02CF                      u580 0353  
                    u660 0281                      u820 0704                      u741 02CE  
                    u581 0352                      u565 0342                      u661 0280  
                    u645 026A                      u821 0703                      u805 06B0  
                    u670 0286                      u590 023C                      u830 07AD  
                    u735 02B6                      u671 0285                      u655 0275  
                    u591 023B                      u831 07AC                      u815 06D6  
                    u760 02ED                      u680 01BF                      u840 07C0  
                    u761 02EC                      u745 02CB                      u681 01BE  
                    u841 07BF                      u825 0700                      u770 0219  
                    u690 011E                      u755 02DF                      u691 011D  
                    u780 05F0                      u845 07BC                      u781 05EF  
                    u790 068F                      u775 0214                      u791 068E  
                    u857 07DE                      u785 05EC                      u867 008A  
                    _day 0034                      _min 003C                      _sec 003E  
                    fsr0 0004                      indf 0000             ___awmod@sign 0075  
                   l1110 0128                     l1200 0286                     l1104 00B5  
                   l1120 0148                     l1112 012A                     l1210 0082  
                   l1130 0300                     l1202 028B                     l1106 00B5  
                   l1114 012E                     l1300 01FD                     l1140 0311  
                   l1132 0302                     l1124 02F6                     l1108 00C0  
                   l1212 0065                     l1116 013B                     l1220 01A2  
                   l1302 01FF                     l1150 0329                     l1142 0317  
                   l1134 0306                     l1126 02F7                     l1206 0172  
                   l1214 006A                     l1310 0362                     l1118 0142  
                   l1230 01D4                     l1222 01A7                     l1304 0205  
                   l1152 033A                     l1144 031A                     l1160 034E  
                   l1136 030B                     l1128 02FB                     l1216 0073  
                   l1240 010C                     l1320 03A2                     l1312 0368  
                   l1232 01D9                     l1224 01AF                     l1400 05CF  
                   l1306 020B                     l1162 0353                     l1154 0340  
                   l1146 0321                     l1138 030F                     l1170 0238  
                   l1218 0078                     l1242 0115                     l1322 03B3  
                   l1314 036E                     l1234 01E1                     l1226 01BF  
                   l1330 04B9                     l1410 0622                     l1402 05DB  
                   l1500 04A1                     l1260 02B0                     l1252 0290  
                   l1164 0358                     l1156 0341                     l1148 0325  
                   l1180 024C                     l1172 023C                     l1244 011E  
                   l1324 03C4                     l1316 037F                     l1308 035D  
                   l1228 01C8                     l1340 04F0                     l1332 04BE  
                   l1412 0638                     l1404 05E3                     l1270 02DE  
                   l1262 02B4                     l1254 02A0                     l1158 0348  
                   l1190 0264                     l1182 0252                     l1174 0241  
                   l1238 0107                     l1326 03D5                     l1318 0390  
                   l1350 055E                     l1342 0506                     l1334 04C4  
                   l1422 0693                     l1414 064E                     l1406 05F0  
                   l1360 03ED                     l1272 02E7                     l1264 02BD  
                   l1256 02A3                     l1280 009A                     l1192 026E  
                   l1184 0255                     l1176 0243                     l1168 0237  
                   l1328 03E6                     l1248 014D                     l1352 057E  
                   l1344 051C                     l1336 04D4                     l1440 06DA  
                   l1424 069F                     l1416 068F                     l1408 061C  
                   l1290 00D9                     l1370 046A                     l1362 0406  
                   l1266 02CF                     l1258 02AC                     l1274 02ED  
                   l1282 009E                     l1194 0274                     l1186 025C  
                   l1178 0247                     l1354 0584                     l1346 0532  
                   l1338 04DA                     l1450 06EF                     l1442 06DF  
                   l1434 06B9                     l1426 06A7                     l1292 00DB  
                   l1284 00CC                     l1356 005E                     l1372 0483  
                   l1364 041F                     l1268 02DD                     l1196 027B  
                   l1188 0260                     l1348 0548                     l1460 074C  
                   l1452 06F7                     l1436 06C5                     l1428 06B5  
                   l1294 00DD                     l1286 00D0                     l1366 0438  
                   l1358 03EC                     l1278 0090                     l1198 0281  
                   l1470 07C6                     l1462 0762                     l1454 0704  
                   l1438 06CD                     l1390 05AD                     l1382 058F  
                   l1296 00E1                     l1288 00D3                     l1368 0451  
                   l1376 049C                     l1472 07D1                     l1464 07AD  
                   l1456 0730                     l1448 06E3                     l1392 05B2  
                   l1384 0594                     l1298 01E3                     l1474 07D6  
                   l1466 07B3                     l1458 0736                     l1394 05CD  
                   l1386 0599                     l1468 07C0                     l1388 05A8  
                   _PIF1 0044                     _date 0038                     _days 03EC  
                   _main 058F                     _msg1 0025                     _msg2 0020  
                   _init 0090                     _hour 003A                     _year 0032  
                   btemp 007E                     start 0000          __end_of_bcd2dec 0172  
                  ?_days 0073                    ?_main 0070          __end_of_dec2bcd 01A2  
                  ?_init 0070          __end_of___awdiv 035D          __end_of___awmod 0290  
        __end_of___lldiv 02F6          ___awdiv@divisor 0070              i2c_read@val 0072  
        ___awdiv@counter 0074                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTB 0006                    _TRISB 0086                    _TRISC 0087  
                  _TXREG 0019                    _TXSTA 0098                    _dataC 0040  
                  _dataD 005F                    _mode1 002E                    _mode2 002A  
                  _hour1 005B                    _month 0036                    _setup 035D  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07E8             __end_of_days 04B9             __end_of_main 07E8  
           __end_of_init 00A2         __end_of_i2c_init 0237         __end_of_i2c_read 01E3  
       __end_of_i2c_wait 00CC         __end_of_i2c_stop 0081                   ??_days 0075  
                 ??_main 0058                   ??_init 0070         ___awdiv@dividend 0072  
           i2c_init@baud 0050                   ?_setup 0070                ??_bcd2dec 0078  
              ??_dec2bcd 007A                   ___wmul 0128        __end_of_UART_init 00E6  
              ??___awdiv 0074        __end_of_UART_send 0090                ??___awmod 0074  
              ??___lldiv 0078         ___awdiv@quotient 0076          ___awmod@divisor 0070  
        ___awmod@counter 0074                   _update 04B9  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 00E6            __end_of_setup 03EC  
      __end_of_i2c_start 0073        __end_of_i2c_write 0128                  ??_setup 007C  
             __pbssBANK0 005B                ?_i2c_init 0050                ?_i2c_read 0070  
              ?_i2c_wait 0070                ?_i2c_stop 0070               __pmaintext 058F  
                ?___wmul 0070                  ?_update 0070                  _SSP_ADD 0046  
                _SSP_BUF 004A               ??_i2c_init 0054               ??_i2c_read 0070  
             ??_i2c_wait 0070               ??_i2c_stop 0070                  _bcd2dec 014D  
                _dec2bcd 0172                  ___awdiv 02F6                  ___awmod 0237  
                ___lldiv 0290                  __ptext1 04B9                  __ptext2 01A2  
                __ptext3 014D                  __ptext4 0128                  __ptext5 035D  
                __ptext6 0106                  __ptext7 0073                  __ptext8 0065  
                __ptext9 00B5            ?_UART_newline 0070         ___awmod@dividend 0072  
                days@day 0073     end_of_initialization 07FC          ___lldiv@divisor 0070  
        ___lldiv@counter 007D              bcd2dec@temp 0076           ??_UART_newline 0070  
              _UART_init 00CC                _UART_send 0081            i2c_write@data 0070  
         __end_of___wmul 014D               ?_UART_init 0070               ?_UART_send 0070  
            dec2bcd@temp 0078           __end_of_update 058F      start_initialization 07E8  
              _i2c_start 0065                _i2c_write 0106                 ??___wmul 0074  
             init_fetch0 00A2              __pdataBANK0 0020                 ??_update 007A  
              ___latbits 0002            __pcstackBANK0 0050               ?_i2c_start 0070  
             ?_i2c_write 0070     __end_of_UART_newline 0065                __pnvBANK0 0040  
               ?_bcd2dec 0076                 ?_dec2bcd 0078                 ?___awdiv 0070  
               ?___awmod 0070                 ?___lldiv 0070              ??_UART_init 0070  
            ??_UART_send 0070           ___wmul@product 0074                 _SSPCON_1 004C  
               _SSPCON_2 004E        ___wmul@multiplier 0070                 _SSP_STAT 0048  
            ??_i2c_start 0070              ??_i2c_write 0070                 _i2c_init 01E3  
               _i2c_read 01A2                 _i2c_wait 00B5                 _i2c_stop 0073  
          UART_send@data 0072                 __ptext10 0172                 __ptext11 0237  
               __ptext12 02F6                 __ptext13 0090                 __ptext14 01E3  
               __ptext15 0290                 __ptext16 03EC                 __ptext17 0081  
               __ptext18 005E                 __ptext19 00CC             _UART_newline 005E  
               init_ram0 00A6         ___lldiv@dividend 0074               _OPTION_REG 0081  
       ___lldiv@quotient 0079  
