

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun May 12 23:26:16 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 22/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     000E                     _TMR1	set	14
   169     000C                     _PIR1	set	12
   170     000B                     _INTCON	set	11
   171     0008                     _PORTD	set	8
   172     0010                     _T1CON	set	16
   173     0007                     _PORTC	set	7
   174     008C                     _PIE1	set	140
   175     0087                     _TRISC	set	135
   176     0088                     _TRISD	set	136
   177                           
   178                           	psect	cinit
   179     0011                     start_initialization:	
   180                           ; #config settings
   181                           
   182     0011                     __initialization:
   183                           
   184                           ; Clear objects allocated to COMMON
   185     0011  01F6               	clrf	__pbssCOMMON& (0+127)
   186     0012                     end_of_initialization:	
   187                           ;End of C runtime variable initialization code
   188                           
   189     0012                     __end_of__initialization:
   190     0012  0183               	clrf	3
   191     0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   192                           
   193                           	psect	bssCOMMON
   194     0076                     __pbssCOMMON:
   195     0076                     _count:
   196     0076                     	ds	1
   197                           
   198                           	psect	cstackCOMMON
   199     0070                     __pcstackCOMMON:
   200     0070                     ?_init:
   201     0070                     ?_main:	
   202                           ; 1 bytes @ 0x0
   203                           
   204     0070                     ?_TIMER_INT_ISR:	
   205                           ; 1 bytes @ 0x0
   206                           
   207     0070                     ??_TIMER_INT_ISR:	
   208                           ; 1 bytes @ 0x0
   209                           
   210                           
   211                           ; 1 bytes @ 0x0
   212     0070                     	ds	3
   213     0073                     ??_init:
   214     0073                     ??_main:	
   215                           ; 1 bytes @ 0x3
   216                           
   217                           
   218                           ; 1 bytes @ 0x3
   219     0073                     	ds	3
   220                           
   221                           	psect	maintext
   222     0016                     __pmaintext:	
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 13 in file "Timer_INT_Task.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : B00/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         0       0       0       0       0
   244 ;;      Temps:          3       0       0       0       0
   245 ;;      Totals:         3       0       0       0       0
   246 ;;Total ram usage:        3 bytes
   247 ;; Hardware stack levels required when called: 2
   248 ;; This function calls:
   249 ;;		_init
   250 ;; This function is called by:
   251 ;;		Startup code after reset
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255     0016                     _main:	
   256                           ;psect for function _main
   257                           
   258     0016                     l598:	
   259                           ;incstack = 0
   260                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   261                           
   262                           
   263                           ;Timer_INT_Task.c: 14:     init();
   264     0016  120A  118A  2064  120A  118A  	fcall	_init
   265     001B                     l600:
   266                           
   267                           ;Timer_INT_Task.c: 15:     PORTC = 0x04;
   268     001B  3004               	movlw	4
   269     001C  1283               	bcf	3,5	;RP0=0, select bank0
   270     001D  1303               	bcf	3,6	;RP1=0, select bank0
   271     001E  0087               	movwf	7	;volatile
   272     001F                     l602:
   273                           
   274                           ;Timer_INT_Task.c: 16:     T1CON |= 0x01;
   275     001F  1410               	bsf	16,0	;volatile
   276     0020                     l604:
   277                           
   278                           ;Timer_INT_Task.c: 18:         PORTD=0x08;
   279     0020  3008               	movlw	8
   280     0021  1283               	bcf	3,5	;RP0=0, select bank0
   281     0022  1303               	bcf	3,6	;RP1=0, select bank0
   282     0023  0088               	movwf	8	;volatile
   283     0024                     l606:
   284                           
   285                           ;Timer_INT_Task.c: 19:         _delay((unsigned long)((800)*(20000000/4000.0)));
   286     0024  3015               	movlw	21
   287     0025  00F5               	movwf	??_main+2
   288     0026  304B               	movlw	75
   289     0027  00F4               	movwf	??_main+1
   290     0028  30BE               	movlw	190
   291     0029  00F3               	movwf	??_main
   292     002A                     u37:
   293     002A  0BF3               	decfsz	??_main,f
   294     002B  282A               	goto	u37
   295     002C  0BF4               	decfsz	??_main+1,f
   296     002D  282A               	goto	u37
   297     002E  0BF5               	decfsz	??_main+2,f
   298     002F  282A               	goto	u37
   299     0030  0000               	nop
   300     0031                     l608:
   301                           
   302                           ;Timer_INT_Task.c: 20:         PORTD=0x00;
   303     0031  1283               	bcf	3,5	;RP0=0, select bank0
   304     0032  1303               	bcf	3,6	;RP1=0, select bank0
   305     0033  0188               	clrf	8	;volatile
   306     0034                     l610:
   307                           
   308                           ;Timer_INT_Task.c: 21:         _delay((unsigned long)((200)*(20000000/4000.0)));
   309     0034  3006               	movlw	6
   310     0035  00F5               	movwf	??_main+2
   311     0036  3013               	movlw	19
   312     0037  00F4               	movwf	??_main+1
   313     0038  30AD               	movlw	173
   314     0039  00F3               	movwf	??_main
   315     003A                     u47:
   316     003A  0BF3               	decfsz	??_main,f
   317     003B  283A               	goto	u47
   318     003C  0BF4               	decfsz	??_main+1,f
   319     003D  283A               	goto	u47
   320     003E  0BF5               	decfsz	??_main+2,f
   321     003F  283A               	goto	u47
   322     0040  2841               	nop2
   323     0041  2820               	goto	l604
   324     0042  120A  118A  280E   	ljmp	start
   325     0045                     __end_of_main:
   326                           
   327                           	psect	text1
   328     0064                     __ptext1:	
   329 ;; *************** function _init *****************
   330 ;; Defined at:
   331 ;;		line 24 in file "Timer_INT_Task.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;		None
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg, status,2, status,0, btemp+1
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   345 ;;      Params:         0       0       0       0       0
   346 ;;      Locals:         0       0       0       0       0
   347 ;;      Temps:          0       0       0       0       0
   348 ;;      Totals:         0       0       0       0       0
   349 ;;Total ram usage:        0 bytes
   350 ;; Hardware stack levels used: 1
   351 ;; Hardware stack levels required when called: 1
   352 ;; This function calls:
   353 ;;		Nothing
   354 ;; This function is called by:
   355 ;;		_main
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359     0064                     _init:	
   360                           ;psect for function _init
   361                           
   362     0064                     l586:	
   363                           ;incstack = 0
   364                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1]
   365                           
   366                           
   367                           ;Timer_INT_Task.c: 25:     TRISD = 0x00;
   368     0064  1683               	bsf	3,5	;RP0=1, select bank1
   369     0065  1303               	bcf	3,6	;RP1=0, select bank1
   370     0066  0188               	clrf	8	;volatile
   371                           
   372                           ;Timer_INT_Task.c: 26:     PORTD = 0x00;
   373     0067  1283               	bcf	3,5	;RP0=0, select bank0
   374     0068  1303               	bcf	3,6	;RP1=0, select bank0
   375     0069  0188               	clrf	8	;volatile
   376                           
   377                           ;Timer_INT_Task.c: 27:     TRISC = 0x00;
   378     006A  1683               	bsf	3,5	;RP0=1, select bank1
   379     006B  1303               	bcf	3,6	;RP1=0, select bank1
   380     006C  0187               	clrf	7	;volatile
   381     006D                     l588:
   382                           
   383                           ;Timer_INT_Task.c: 28:     PORTC = 0xFF;
   384     006D  30FF               	movlw	255
   385     006E  1283               	bcf	3,5	;RP0=0, select bank0
   386     006F  1303               	bcf	3,6	;RP1=0, select bank0
   387     0070  0087               	movwf	7	;volatile
   388     0071                     l590:
   389                           
   390                           ;Timer_INT_Task.c: 29:     INTCON = 0xC0;
   391     0071  30C0               	movlw	192
   392     0072  008B               	movwf	11	;volatile
   393     0073                     l592:
   394                           
   395                           ;Timer_INT_Task.c: 30:     TMR1 = 3536;
   396     0073  300D               	movlw	13
   397     0074  008F               	movwf	15	;volatile
   398     0075  30D0               	movlw	208
   399     0076  008E               	movwf	14	;volatile
   400                           
   401                           ;Timer_INT_Task.c: 31:     T1CON = 0x00;
   402     0077  0190               	clrf	16	;volatile
   403     0078                     l594:
   404                           
   405                           ;Timer_INT_Task.c: 32:     PIR1&=0xFE;
   406     0078  30FE               	movlw	254
   407     0079  00FF               	movwf	btemp+1
   408     007A  087F               	movf	btemp+1,w
   409     007B  058C               	andwf	12,f	;volatile
   410     007C                     l596:
   411                           
   412                           ;Timer_INT_Task.c: 33:     PIE1 = 0x01;
   413     007C  3001               	movlw	1
   414     007D  1683               	bsf	3,5	;RP0=1, select bank1
   415     007E  1303               	bcf	3,6	;RP1=0, select bank1
   416     007F  008C               	movwf	12	;volatile
   417     0080                     l35:
   418     0080  0008               	return
   419     0081                     __end_of_init:
   420                           
   421                           	psect	text2
   422     0045                     __ptext2:	
   423 ;; *************** function _TIMER_INT_ISR *****************
   424 ;; Defined at:
   425 ;;		line 35 in file "Timer_INT_Task.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;		None
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, status,2, status,0, btemp+1
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   439 ;;      Params:         0       0       0       0       0
   440 ;;      Locals:         0       0       0       0       0
   441 ;;      Temps:          3       0       0       0       0
   442 ;;      Totals:         3       0       0       0       0
   443 ;;Total ram usage:        3 bytes
   444 ;; Hardware stack levels used: 1
   445 ;; This function calls:
   446 ;;		Nothing
   447 ;; This function is called by:
   448 ;;		Interrupt level 1
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452     0045                     _TIMER_INT_ISR:	
   453                           ;psect for function _TIMER_INT_ISR
   454                           
   455     0045                     i1l612:
   456                           
   457                           ;Timer_INT_Task.c: 36:     if(PIR1&0x01) {
   458     0045  1283               	bcf	3,5	;RP0=0, select bank0
   459     0046  1303               	bcf	3,6	;RP1=0, select bank0
   460     0047  1C0C               	btfss	12,0	;volatile
   461     0048  284A               	goto	u1_21
   462     0049  284B               	goto	u1_20
   463     004A                     u1_21:
   464     004A  2857               	goto	i1l622
   465     004B                     u1_20:
   466     004B                     i1l614:
   467                           
   468                           ;Timer_INT_Task.c: 37:         count++;
   469     004B  3001               	movlw	1
   470     004C  00FF               	movwf	btemp+1
   471     004D  087F               	movf	btemp+1,w
   472     004E  07F6               	addwf	_count,f
   473     004F                     i1l616:
   474                           
   475                           ;Timer_INT_Task.c: 38:         if(count==23) {
   476     004F  3017               	movlw	23
   477     0050  0676               	xorwf	_count,w
   478     0051  1D03               	btfss	3,2
   479     0052  2854               	goto	u2_21
   480     0053  2855               	goto	u2_20
   481     0054                     u2_21:
   482     0054  2857               	goto	i1l622
   483     0055                     u2_20:
   484     0055                     i1l618:
   485                           
   486                           ;Timer_INT_Task.c: 39:             PORTC=~PORTC;
   487     0055  0987               	comf	7,f	;volatile
   488     0056                     i1l620:
   489                           
   490                           ;Timer_INT_Task.c: 40:             count=0;
   491     0056  01F6               	clrf	_count
   492     0057                     i1l622:
   493                           
   494                           ;Timer_INT_Task.c: 43:     PIR1&=0xFE;
   495     0057  30FE               	movlw	254
   496     0058  00FF               	movwf	btemp+1
   497     0059  087F               	movf	btemp+1,w
   498     005A  058C               	andwf	12,f	;volatile
   499     005B                     i1l42:
   500     005B  0872               	movf	??_TIMER_INT_ISR+2,w
   501     005C  00FF               	movwf	btemp+1
   502     005D  0871               	movf	??_TIMER_INT_ISR+1,w
   503     005E  008A               	movwf	10
   504     005F  0E70               	swapf	??_TIMER_INT_ISR,w
   505     0060  0083               	movwf	3
   506     0061  0EFE               	swapf	btemp,f
   507     0062  0E7E               	swapf	btemp,w
   508     0063  0009               	retfie
   509     0064                     __end_of_TIMER_INT_ISR:
   510     007E                     btemp	set	126	;btemp
   511     007E                     wtemp0	set	126
   512                           
   513                           	psect	intentry
   514     0004                     __pintentry:	
   515                           ;incstack = 0
   516                           ; Regs used in _TIMER_INT_ISR: [wreg+status,2+status,0+btemp+1]
   517                           
   518     0004                     interrupt_function:
   519     007E                     saved_w	set	btemp
   520     0004  00FE               	movwf	btemp
   521     0005  0E03               	swapf	3,w
   522     0006  00F0               	movwf	??_TIMER_INT_ISR
   523     0007  080A               	movf	10,w
   524     0008  00F1               	movwf	??_TIMER_INT_ISR+1
   525     0009  087F               	movf	btemp+1,w
   526     000A  00F2               	movwf	??_TIMER_INT_ISR+2
   527     000B  120A  118A  2845   	ljmp	_TIMER_INT_ISR
   528                           
   529                           	psect	config
   530                           
   531                           ;Config register CONFIG @ 0x2007
   532                           ;	Oscillator Selection bits
   533                           ;	FOSC = HS, HS oscillator
   534                           ;	Watchdog Timer Enable bit
   535                           ;	WDTE = OFF, WDT disabled
   536                           ;	Power-up Timer Enable bit
   537                           ;	PWRTE = OFF, PWRT disabled
   538                           ;	Brown-out Reset Enable bit
   539                           ;	BOREN = OFF, BOR disabled
   540                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   541                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   542                           ;	Data EEPROM Memory Code Protection bit
   543                           ;	CPD = OFF, Data EEPROM code protection off
   544                           ;	Flash Program Memory Write Enable bits
   545                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   546                           ;	In-Circuit Debugger Mode bit
   547                           ;	DEBUG = 0x1, unprogrammed default
   548                           ;	Flash Program Memory Code Protection bit
   549                           ;	CP = OFF, Code protection off
   550     2007                     	org	8199
   551     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _TIMER_INT_ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TIMER_INT_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER_INT_ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER_INT_ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER_INT_ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 COMMON     3     3      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _TIMER_INT_ISR                                        3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _TIMER_INT_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun May 12 23:26:16 2024

                     l35 0080                       u37 002A                       u47 003A  
                    l600 001B                      l610 0034                      l602 001F  
                    l604 0020                      l606 0024                      l608 0031  
                    l590 0071                      l592 0073                      l594 0078  
                    l586 0064                      l596 007C                      l588 006D  
                    l598 0016                     _PIE1 008C                     i1l42 005B  
                   _PIR1 000C                     _TMR1 000E                     u1_20 004B  
                   u1_21 004A                     u2_20 0055                     u2_21 0054  
                   _main 0016                     _init 0064                     btemp 007E  
                   start 000E                    ?_main 0070                    ?_init 0070  
                  _T1CON 0010                    i1l620 0056                    i1l612 0045  
                  i1l614 004B                    i1l622 0057                    i1l616 004F  
                  i1l618 0055                    _PORTC 0007                    _PORTD 0008  
                  _TRISC 0087                    _TRISD 0088                    _count 0076  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0045             __end_of_init 0081  
  __end_of_TIMER_INT_ISR 0064                   ??_main 0073                   ??_init 0073  
                 _INTCON 000B                   saved_w 007E  __end_of__initialization 0012  
         __pcstackCOMMON 0070               __pmaintext 0016               __pintentry 0004  
                __ptext1 0064                  __ptext2 0045     end_of_initialization 0012  
    start_initialization 0011            _TIMER_INT_ISR 0045              __pbssCOMMON 0076  
              ___latbits 0002           ?_TIMER_INT_ISR 0070        interrupt_function 0004  
        ??_TIMER_INT_ISR 0070                 intlevel1 0000  
