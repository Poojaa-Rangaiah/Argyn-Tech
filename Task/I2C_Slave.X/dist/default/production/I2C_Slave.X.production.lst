

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Jun 01 21:23:39 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 22/03/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0008                     _PORTD	set	8
   168     0013                     _SSPBUF	set	19
   169     000C                     _PIR1	set	12
   170     000B                     _INTCON	set	11
   171     0014                     _SSPCON	set	20
   172     008C                     _PIE1	set	140
   173     0087                     _TRISC	set	135
   174     0094                     _SSPSTAT	set	148
   175     0093                     _SSPADD	set	147
   176     0091                     _SSPCON2	set	145
   177     0088                     _TRISD	set	136
   178                           
   179                           	psect	cinit
   180     0011                     start_initialization:	
   181                           ; #config settings
   182                           
   183     0011                     __initialization:
   184                           
   185                           ; Clear objects allocated to COMMON
   186     0011  01F4               	clrf	__pbssCOMMON& (0+127)
   187     0012                     end_of_initialization:	
   188                           ;End of C runtime variable initialization code
   189                           
   190     0012                     __end_of__initialization:
   191     0012  0183               	clrf	3
   192     0013  120A  118A  285F   	ljmp	_main	;jump to C main() function
   193                           
   194                           	psect	bssCOMMON
   195     0074                     __pbssCOMMON:
   196     0074                     _read:
   197     0074                     	ds	1
   198                           
   199                           	psect	cstackCOMMON
   200     0070                     __pcstackCOMMON:
   201     0070                     ?_i2c_Slave_init:
   202     0070                     ?_main:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0070                     ?_I2C_Slave_Read:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0070                     ??_I2C_Slave_Read:	
   209                           ; 1 bytes @ 0x0
   210                           
   211                           
   212                           ; 1 bytes @ 0x0
   213     0070                     	ds	3
   214     0073                     ??_i2c_Slave_init:
   215     0073                     i2c_Slave_init@add:	
   216                           ; 1 bytes @ 0x3
   217                           
   218                           
   219                           ; 1 bytes @ 0x3
   220     0073                     	ds	1
   221     0074                     ??_main:
   222                           
   223                           	psect	maintext
   224     005F                     __pmaintext:	
   225                           ; 1 bytes @ 0x4
   226 ;;
   227 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   228 ;;
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 6 in file "I2C_slave.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;		None
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : B00/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   245 ;;      Params:         0       0       0       0       0
   246 ;;      Locals:         0       0       0       0       0
   247 ;;      Temps:          0       0       0       0       0
   248 ;;      Totals:         0       0       0       0       0
   249 ;;Total ram usage:        0 bytes
   250 ;; Hardware stack levels required when called: 2
   251 ;; This function calls:
   252 ;;		_i2c_Slave_init
   253 ;; This function is called by:
   254 ;;		Startup code after reset
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258     005F                     _main:	
   259                           ;psect for function _main
   260                           
   261     005F                     l599:	
   262                           ;incstack = 0
   263                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   264                           
   265                           
   266                           ;I2C_slave.c: 7:     TRISD = 0x00;
   267     005F  1683               	bsf	3,5	;RP0=1, select bank1
   268     0060  1303               	bcf	3,6	;RP1=0, select bank1
   269     0061  0188               	clrf	8	;volatile
   270     0062                     l601:
   271                           
   272                           ;I2C_slave.c: 8:     i2c_Slave_init(0x70);
   273     0062  3070               	movlw	112
   274     0063  120A  118A  2042  120A  118A  	fcall	_i2c_Slave_init
   275     0068                     l31:	
   276                           ;I2C_slave.c: 9:     while(1);
   277                           
   278     0068                     l32:
   279     0068  2868               	goto	l31
   280     0069  120A  118A  280E   	ljmp	start
   281     006C                     __end_of_main:
   282                           
   283                           	psect	text1
   284     0042                     __ptext1:	
   285 ;; *************** function _i2c_Slave_init *****************
   286 ;; Defined at:
   287 ;;		line 11 in file "I2C_slave.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;  add             1    wreg     unsigned char 
   290 ;; Auto vars:     Size  Location     Type
   291 ;;  add             1    3[COMMON] unsigned char 
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, status,2, status,0, btemp+1
   296 ;; Tracked objects:
   297 ;;		On entry : 0/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   301 ;;      Params:         0       0       0       0       0
   302 ;;      Locals:         1       0       0       0       0
   303 ;;      Temps:          0       0       0       0       0
   304 ;;      Totals:         1       0       0       0       0
   305 ;;Total ram usage:        1 bytes
   306 ;; Hardware stack levels used: 1
   307 ;; Hardware stack levels required when called: 1
   308 ;; This function calls:
   309 ;;		Nothing
   310 ;; This function is called by:
   311 ;;		_main
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315     0042                     _i2c_Slave_init:	
   316                           ;psect for function _i2c_Slave_init
   317                           
   318                           
   319                           ;incstack = 0
   320                           ; Regs used in _i2c_Slave_init: [wreg+status,2+status,0+btemp+1]
   321                           ;i2c_Slave_init@add stored from wreg
   322     0042  00F3               	movwf	i2c_Slave_init@add
   323     0043                     l591:
   324                           
   325                           ;I2C_slave.c: 12:     SSPCON = 0x36;
   326     0043  3036               	movlw	54
   327     0044  1283               	bcf	3,5	;RP0=0, select bank0
   328     0045  1303               	bcf	3,6	;RP1=0, select bank0
   329     0046  0094               	movwf	20	;volatile
   330                           
   331                           ;I2C_slave.c: 13:     SSPCON2 = 0x01;
   332     0047  3001               	movlw	1
   333     0048  1683               	bsf	3,5	;RP0=1, select bank1
   334     0049  1303               	bcf	3,6	;RP1=0, select bank1
   335     004A  0091               	movwf	17	;volatile
   336                           
   337                           ;I2C_slave.c: 14:     SSPADD = add;
   338     004B  0873               	movf	i2c_Slave_init@add,w
   339     004C  0093               	movwf	19	;volatile
   340                           
   341                           ;I2C_slave.c: 15:     SSPSTAT = 0x80;
   342     004D  3080               	movlw	128
   343     004E  0094               	movwf	20	;volatile
   344                           
   345                           ;I2C_slave.c: 16:     TRISC = 0x018;
   346     004F  3018               	movlw	24
   347     0050  0087               	movwf	7	;volatile
   348     0051                     l593:
   349                           
   350                           ;I2C_slave.c: 17:     INTCON |= 0xC0;
   351     0051  30C0               	movlw	192
   352     0052  00FF               	movwf	btemp+1
   353     0053  087F               	movf	btemp+1,w
   354     0054  048B               	iorwf	11,f	;volatile
   355     0055                     l595:
   356                           
   357                           ;I2C_slave.c: 18:     PIR1&=~0x08;
   358     0055  30F7               	movlw	247
   359     0056  00FF               	movwf	btemp+1
   360     0057  087F               	movf	btemp+1,w
   361     0058  1283               	bcf	3,5	;RP0=0, select bank0
   362     0059  1303               	bcf	3,6	;RP1=0, select bank0
   363     005A  058C               	andwf	12,f	;volatile
   364     005B                     l597:
   365                           
   366                           ;I2C_slave.c: 19:     PIE1|=0x08;
   367     005B  1683               	bsf	3,5	;RP0=1, select bank1
   368     005C  1303               	bcf	3,6	;RP1=0, select bank1
   369     005D  158C               	bsf	12,3	;volatile
   370     005E                     l37:
   371     005E  0008               	return
   372     005F                     __end_of_i2c_Slave_init:
   373                           
   374                           	psect	text2
   375     0016                     __ptext2:	
   376 ;; *************** function _I2C_Slave_Read *****************
   377 ;; Defined at:
   378 ;;		line 21 in file "I2C_slave.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;		None
   383 ;; Return value:  Size  Location     Type
   384 ;;                  1    wreg      void 
   385 ;; Registers used:
   386 ;;		wreg, status,2, status,0, btemp+1
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   392 ;;      Params:         0       0       0       0       0
   393 ;;      Locals:         0       0       0       0       0
   394 ;;      Temps:          3       0       0       0       0
   395 ;;      Totals:         3       0       0       0       0
   396 ;;Total ram usage:        3 bytes
   397 ;; Hardware stack levels used: 1
   398 ;; This function calls:
   399 ;;		Nothing
   400 ;; This function is called by:
   401 ;;		Interrupt level 1
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405     0016                     _I2C_Slave_Read:	
   406                           ;psect for function _I2C_Slave_Read
   407                           
   408     0016                     i1l603:
   409                           
   410                           ;I2C_slave.c: 22:     if(PIR1&0x08) {
   411     0016  1283               	bcf	3,5	;RP0=0, select bank0
   412     0017  1303               	bcf	3,6	;RP1=0, select bank0
   413     0018  1D8C               	btfss	12,3	;volatile
   414     0019  281B               	goto	u1_21
   415     001A  281C               	goto	u1_20
   416     001B                     u1_21:
   417     001B  2839               	goto	i1l47
   418     001C                     u1_20:
   419     001C                     i1l605:
   420                           
   421                           ;I2C_slave.c: 23:         if(!(SSPSTAT&0x04)) {
   422     001C  1683               	bsf	3,5	;RP0=1, select bank1
   423     001D  1303               	bcf	3,6	;RP1=0, select bank1
   424     001E  1914               	btfsc	20,2	;volatile
   425     001F  2821               	goto	u2_21
   426     0020  2822               	goto	u2_20
   427     0021                     u2_21:
   428     0021  2833               	goto	i1l613
   429     0022                     u2_20:
   430     0022                     i1l607:
   431                           
   432                           ;I2C_slave.c: 24:             read = SSPBUF;
   433     0022  1283               	bcf	3,5	;RP0=0, select bank0
   434     0023  1303               	bcf	3,6	;RP1=0, select bank0
   435     0024  0813               	movf	19,w	;volatile
   436     0025  00F4               	movwf	_read
   437     0026                     i1l609:
   438                           
   439                           ;I2C_slave.c: 25:             SSPCON|=0x10;
   440     0026  1614               	bsf	20,4	;volatile
   441     0027                     i1l44:	
   442                           ;I2C_slave.c: 26:             while(!(SSPSTAT&0x01));
   443                           
   444     0027  1683               	bsf	3,5	;RP0=1, select bank1
   445     0028  1303               	bcf	3,6	;RP1=0, select bank1
   446     0029  1C14               	btfss	20,0	;volatile
   447     002A  282C               	goto	u3_21
   448     002B  282D               	goto	u3_20
   449     002C                     u3_21:
   450     002C  2827               	goto	i1l44
   451     002D                     u3_20:
   452     002D                     i1l611:
   453                           
   454                           ;I2C_slave.c: 27:             read = SSPBUF;
   455     002D  1283               	bcf	3,5	;RP0=0, select bank0
   456     002E  1303               	bcf	3,6	;RP1=0, select bank0
   457     002F  0813               	movf	19,w	;volatile
   458     0030  00F4               	movwf	_read
   459                           
   460                           ;I2C_slave.c: 28:             PORTD = read;
   461     0031  0874               	movf	_read,w
   462     0032  0088               	movwf	8	;volatile
   463     0033                     i1l613:
   464                           
   465                           ;I2C_slave.c: 30:         SSPCON|=0x10;
   466     0033  1283               	bcf	3,5	;RP0=0, select bank0
   467     0034  1614               	bsf	20,4	;volatile
   468     0035                     i1l615:
   469                           
   470                           ;I2C_slave.c: 31:         PIR1 &= ~0x08;
   471     0035  30F7               	movlw	247
   472     0036  00FF               	movwf	btemp+1
   473     0037  087F               	movf	btemp+1,w
   474     0038  058C               	andwf	12,f	;volatile
   475     0039                     i1l47:
   476     0039  0872               	movf	??_I2C_Slave_Read+2,w
   477     003A  00FF               	movwf	btemp+1
   478     003B  0871               	movf	??_I2C_Slave_Read+1,w
   479     003C  008A               	movwf	10
   480     003D  0E70               	swapf	??_I2C_Slave_Read,w
   481     003E  0083               	movwf	3
   482     003F  0EFE               	swapf	btemp,f
   483     0040  0E7E               	swapf	btemp,w
   484     0041  0009               	retfie
   485     0042                     __end_of_I2C_Slave_Read:
   486     007E                     btemp	set	126	;btemp
   487     007E                     wtemp0	set	126
   488                           
   489                           	psect	intentry
   490     0004                     __pintentry:	
   491                           ;incstack = 0
   492                           ; Regs used in _I2C_Slave_Read: [wreg+status,2+status,0+btemp+1]
   493                           
   494     0004                     interrupt_function:
   495     007E                     saved_w	set	btemp
   496     0004  00FE               	movwf	btemp
   497     0005  0E03               	swapf	3,w
   498     0006  00F0               	movwf	??_I2C_Slave_Read
   499     0007  080A               	movf	10,w
   500     0008  00F1               	movwf	??_I2C_Slave_Read+1
   501     0009  087F               	movf	btemp+1,w
   502     000A  00F2               	movwf	??_I2C_Slave_Read+2
   503     000B  120A  118A  2816   	ljmp	_I2C_Slave_Read

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_i2c_Slave_init

Critical Paths under _I2C_Slave_Read in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _I2C_Slave_Read in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _I2C_Slave_Read in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _I2C_Slave_Read in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _I2C_Slave_Read in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                     _i2c_Slave_init
 ---------------------------------------------------------------------------------
 (1) _i2c_Slave_init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Read                                       3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_Slave_init

 _I2C_Slave_Read (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Jun 01 21:23:39 2024

                     l31 0068                       l32 0068                       l37 005E  
        ?_i2c_Slave_init 0070                      l601 0062                      l591 0043  
                    l593 0051                      l595 0055                      l597 005B  
                    l599 005F                     _PIE1 008C                     i1l44 0027  
                   i1l47 0039                     _PIR1 000C                     u1_20 001C  
                   u1_21 001B                     u2_20 0022                     u2_21 0021  
                   u3_20 002D                     u3_21 002C                     _main 005F  
                   _read 0074                     btemp 007E                     start 000E  
                  ?_main 0070                    i1l611 002D                    i1l603 0016  
                  i1l613 0033                    i1l605 001C                    i1l615 0035  
                  i1l607 0022                    i1l609 0026                    _PORTD 0008  
                  _TRISC 0087                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 006C                   ??_main 0074                   _INTCON 000B  
                 _SSPADD 0093                   _SSPCON 0014                   _SSPBUF 0013  
                 saved_w 007E  __end_of__initialization 0012         ??_i2c_Slave_init 0073  
         __pcstackCOMMON 0070               __pmaintext 005F               __pintentry 0004  
                _SSPCON2 0091                  _SSPSTAT 0094                  __ptext1 0042  
                __ptext2 0016     end_of_initialization 0012           _I2C_Slave_Read 0016  
 __end_of_I2C_Slave_Read 0042      start_initialization 0011        i2c_Slave_init@add 0073  
        ?_I2C_Slave_Read 0070              __pbssCOMMON 0074                ___latbits 0002  
      interrupt_function 0004         ??_I2C_Slave_Read 0070           _i2c_Slave_init 0042  
               intlevel1 0000   __end_of_i2c_Slave_init 005F  
