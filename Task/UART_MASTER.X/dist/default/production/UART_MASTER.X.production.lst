

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat May 11 16:48:11 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166                           
   167                           	psect	nvCOMMON
   168     0072                     __pnvCOMMON:
   169     0072                     _val:
   170     0072                     	ds	1
   171     0018                     _RCSTA	set	24
   172     0008                     _PORTD	set	8
   173     001A                     _RCREG	set	26
   174     0019                     _TXREG	set	25
   175     0006                     _PORTB	set	6
   176     0065                     _RCIF	set	101
   177     0099                     _SPBRG	set	153
   178     0098                     _TXSTA	set	152
   179     0087                     _TRISC	set	135
   180     0088                     _TRISD	set	136
   181     0081                     _OPTION_REG	set	129
   182     0086                     _TRISB	set	134
   183                           
   184                           	psect	cinit
   185     07FC                     start_initialization:	
   186                           ; #config settings
   187                           
   188     07FC                     __initialization:
   189     07FC                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192     07FC                     __end_of__initialization:
   193     07FC  0183               	clrf	3
   194     07FD  120A  118A  2F9B   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	cstackCOMMON
   197     0070                     __pcstackCOMMON:
   198     0070                     ?_init:
   199     0070                     ??_init:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     0070                     ?_main:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0070                     ??_main:	
   206                           ; 1 bytes @ 0x0
   207                           
   208                           
   209                           ; 1 bytes @ 0x0
   210     0070                     	ds	2
   211                           
   212                           	psect	maintext
   213     079B                     __pmaintext:	
   214 ;;
   215 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   216 ;;
   217 ;; *************** function _main *****************
   218 ;; Defined at:
   219 ;;		line 14 in file "MASTER.c"
   220 ;; Parameters:    Size  Location     Type
   221 ;;		None
   222 ;; Auto vars:     Size  Location     Type
   223 ;;		None
   224 ;; Return value:  Size  Location     Type
   225 ;;                  1    wreg      void 
   226 ;; Registers used:
   227 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   228 ;; Tracked objects:
   229 ;;		On entry : B00/0
   230 ;;		On exit  : 0/0
   231 ;;		Unchanged: 0/0
   232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   233 ;;      Params:         0       0       0       0       0
   234 ;;      Locals:         0       0       0       0       0
   235 ;;      Temps:          2       0       0       0       0
   236 ;;      Totals:         2       0       0       0       0
   237 ;;Total ram usage:        2 bytes
   238 ;; Hardware stack levels required when called: 1
   239 ;; This function calls:
   240 ;;		_init
   241 ;; This function is called by:
   242 ;;		Startup code after reset
   243 ;; This function uses a non-reentrant model
   244 ;;
   245                           
   246     079B                     _main:	
   247                           ;psect for function _main
   248                           
   249     079B                     l617:	
   250                           ;incstack = 0
   251                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   252                           
   253                           
   254                           ;MASTER.c: 15:     init();
   255     079B  120A  118A  277F  120A  118A  	fcall	_init
   256     07A0                     l619:
   257                           
   258                           ;MASTER.c: 17:         val = PORTB;
   259     07A0  1283               	bcf	3,5	;RP0=0, select bank0
   260     07A1  1303               	bcf	3,6	;RP1=0, select bank0
   261     07A2  0806               	movf	6,w	;volatile
   262     07A3  00F2               	movwf	_val
   263                           
   264                           ;MASTER.c: 18:         switch(val) {
   265     07A4  2FB1               	goto	l631
   266     07A5                     l621:
   267                           
   268                           ;MASTER.c: 20:                 TXREG = 'A';
   269     07A5  3041               	movlw	65
   270     07A6  0099               	movwf	25	;volatile
   271                           
   272                           ;MASTER.c: 21:                 break;
   273     07A7  2FC7               	goto	l633
   274     07A8                     l623:
   275                           
   276                           ;MASTER.c: 23:                 TXREG = 'B';
   277     07A8  3042               	movlw	66
   278     07A9  0099               	movwf	25	;volatile
   279                           
   280                           ;MASTER.c: 24:                 break;
   281     07AA  2FC7               	goto	l633
   282     07AB                     l625:
   283                           
   284                           ;MASTER.c: 26:                 TXREG = 'C';
   285     07AB  3043               	movlw	67
   286     07AC  0099               	movwf	25	;volatile
   287                           
   288                           ;MASTER.c: 27:                 break;
   289     07AD  2FC7               	goto	l633
   290     07AE                     l627:
   291                           
   292                           ;MASTER.c: 29:                 TXREG = 'D';
   293     07AE  3044               	movlw	68
   294     07AF  0099               	movwf	25	;volatile
   295                           
   296                           ;MASTER.c: 30:                 break;
   297     07B0  2FC7               	goto	l633
   298     07B1                     l631:
   299     07B1  0872               	movf	_val,w
   300     07B2  00F0               	movwf	??_main
   301     07B3  01F1               	clrf	??_main+1
   302                           
   303                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   304                           ; Switch size 1, requested type "simple"
   305                           ; Number of cases is 1, Range of values is 0 to 0
   306                           ; switch strategies available:
   307                           ; Name         Instructions Cycles
   308                           ; simple_byte            4     3 (average)
   309                           ; direct_byte           11     8 (fixed)
   310                           ; jumptable            260     6 (fixed)
   311                           ;	Chosen strategy is simple_byte
   312     07B4  0871               	movf	??_main+1,w
   313     07B5  3A00               	xorlw	0	; case 0
   314     07B6  1903               	skipnz
   315     07B7  2FB9               	goto	l677
   316     07B8  2FC7               	goto	l633
   317     07B9                     l677:
   318                           
   319                           ; Switch size 1, requested type "simple"
   320                           ; Number of cases is 4, Range of values is 112 to 224
   321                           ; switch strategies available:
   322                           ; Name         Instructions Cycles
   323                           ; simple_byte           13     7 (average)
   324                           ; jumptable            263     9 (fixed)
   325                           ;	Chosen strategy is simple_byte
   326     07B9  0870               	movf	??_main,w
   327     07BA  3A70               	xorlw	112	; case 112
   328     07BB  1903               	skipnz
   329     07BC  2FAE               	goto	l627
   330     07BD  3AC0               	xorlw	192	; case 176
   331     07BE  1903               	skipnz
   332     07BF  2FAB               	goto	l625
   333     07C0  3A60               	xorlw	96	; case 208
   334     07C1  1903               	skipnz
   335     07C2  2FA8               	goto	l623
   336     07C3  3A30               	xorlw	48	; case 224
   337     07C4  1903               	skipnz
   338     07C5  2FA5               	goto	l621
   339     07C6  2FC7               	goto	l633
   340     07C7                     l633:
   341                           
   342                           ;MASTER.c: 32:         _delay((unsigned long)((100)*(6000000/4000.0)));
   343     07C7  30C3               	movlw	195
   344     07C8  00F1               	movwf	??_main+1
   345     07C9  30CD               	movlw	205
   346     07CA  00F0               	movwf	??_main
   347     07CB                     u67:
   348     07CB  0BF0               	decfsz	??_main,f
   349     07CC  2FCB               	goto	u67
   350     07CD  0BF1               	decfsz	??_main+1,f
   351     07CE  2FCB               	goto	u67
   352     07CF                     l635:
   353                           
   354                           ;MASTER.c: 33:         if(RCIF) {
   355     07CF  1283               	bcf	3,5	;RP0=0, select bank0
   356     07D0  1303               	bcf	3,6	;RP1=0, select bank0
   357     07D1  1E8C               	btfss	12,5	;volatile
   358     07D2  2FD4               	goto	u11
   359     07D3  2FD5               	goto	u10
   360     07D4                     u11:
   361     07D4  2FA0               	goto	l619
   362     07D5                     u10:
   363     07D5                     l637:
   364                           
   365                           ;MASTER.c: 34:             if (RCREG == 'a')
   366     07D5  3061               	movlw	97
   367     07D6  061A               	xorwf	26,w	;volatile
   368     07D7  1D03               	btfss	3,2
   369     07D8  2FDA               	goto	u21
   370     07D9  2FDB               	goto	u20
   371     07DA                     u21:
   372     07DA  2FDE               	goto	l641
   373     07DB                     u20:
   374     07DB                     l639:
   375                           
   376                           ;MASTER.c: 35:                 PORTD = 0x04;
   377     07DB  3004               	movlw	4
   378     07DC  0088               	movwf	8	;volatile
   379     07DD  2FA0               	goto	l619
   380     07DE                     l641:
   381     07DE  3062               	movlw	98
   382     07DF  061A               	xorwf	26,w	;volatile
   383     07E0  1D03               	btfss	3,2
   384     07E1  2FE3               	goto	u31
   385     07E2  2FE4               	goto	u30
   386     07E3                     u31:
   387     07E3  2FE7               	goto	l645
   388     07E4                     u30:
   389     07E4                     l643:
   390                           
   391                           ;MASTER.c: 37:                 PORTD = 0x02;
   392     07E4  3002               	movlw	2
   393     07E5  0088               	movwf	8	;volatile
   394     07E6  2FA0               	goto	l619
   395     07E7                     l645:
   396     07E7  3063               	movlw	99
   397     07E8  061A               	xorwf	26,w	;volatile
   398     07E9  1D03               	btfss	3,2
   399     07EA  2FEC               	goto	u41
   400     07EB  2FED               	goto	u40
   401     07EC                     u41:
   402     07EC  2FEF               	goto	l649
   403     07ED                     u40:
   404     07ED                     l647:
   405                           
   406                           ;MASTER.c: 39:                 PORTD = 0x00;
   407     07ED  0188               	clrf	8	;volatile
   408     07EE  2FA0               	goto	l619
   409     07EF                     l649:
   410     07EF  3064               	movlw	100
   411     07F0  061A               	xorwf	26,w	;volatile
   412     07F1  1D03               	btfss	3,2
   413     07F2  2FF4               	goto	u51
   414     07F3  2FF5               	goto	u50
   415     07F4                     u51:
   416     07F4  2FF8               	goto	l44
   417     07F5                     u50:
   418     07F5                     l651:
   419                           
   420                           ;MASTER.c: 41:                 PORTD = 0x06;
   421     07F5  3006               	movlw	6
   422     07F6  0088               	movwf	8	;volatile
   423     07F7  2FA0               	goto	l619
   424     07F8                     l44:
   425     07F8  2FA0               	goto	l619
   426     07F9  120A  118A  2800   	ljmp	start
   427     07FC                     __end_of_main:
   428                           
   429                           	psect	text1
   430     077F                     __ptext1:	
   431 ;; *************** function _init *****************
   432 ;; Defined at:
   433 ;;		line 45 in file "MASTER.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, status,2, status,0, btemp+1
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   447 ;;      Params:         0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0
   449 ;;      Temps:          0       0       0       0       0
   450 ;;      Totals:         0       0       0       0       0
   451 ;;Total ram usage:        0 bytes
   452 ;; Hardware stack levels used: 1
   453 ;; This function calls:
   454 ;;		Nothing
   455 ;; This function is called by:
   456 ;;		_main
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460     077F                     _init:	
   461                           ;psect for function _init
   462                           
   463     077F                     l599:	
   464                           ;incstack = 0
   465                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1]
   466                           
   467                           
   468                           ;MASTER.c: 46:     TRISB = 0xF0;
   469     077F  30F0               	movlw	240
   470     0780  1683               	bsf	3,5	;RP0=1, select bank1
   471     0781  1303               	bcf	3,6	;RP1=0, select bank1
   472     0782  0086               	movwf	6	;volatile
   473     0783                     l601:
   474                           
   475                           ;MASTER.c: 47:     OPTION_REG &= 0x7F;
   476     0783  307F               	movlw	127
   477     0784  00FF               	movwf	btemp+1
   478     0785  087F               	movf	btemp+1,w
   479     0786  0581               	andwf	1,f	;volatile
   480     0787                     l603:
   481                           
   482                           ;MASTER.c: 48:     TRISD = 0x00;
   483     0787  0188               	clrf	8	;volatile
   484     0788                     l605:
   485                           
   486                           ;MASTER.c: 49:     TRISC = 0xC0;
   487     0788  30C0               	movlw	192
   488     0789  0087               	movwf	7	;volatile
   489     078A                     l607:
   490                           
   491                           ;MASTER.c: 50:     PORTB = 0x00;
   492     078A  1283               	bcf	3,5	;RP0=0, select bank0
   493     078B  1303               	bcf	3,6	;RP1=0, select bank0
   494     078C  0186               	clrf	6	;volatile
   495     078D                     l609:
   496                           
   497                           ;MASTER.c: 51:     PORTD = 0x00;
   498     078D  0188               	clrf	8	;volatile
   499     078E                     l611:
   500                           
   501                           ;MASTER.c: 52:     TXSTA = 0x20;
   502     078E  3020               	movlw	32
   503     078F  1683               	bsf	3,5	;RP0=1, select bank1
   504     0790  1303               	bcf	3,6	;RP1=0, select bank1
   505     0791  0098               	movwf	24	;volatile
   506     0792                     l613:
   507                           
   508                           ;MASTER.c: 53:     RCSTA = 0x90;
   509     0792  3090               	movlw	144
   510     0793  1283               	bcf	3,5	;RP0=0, select bank0
   511     0794  1303               	bcf	3,6	;RP1=0, select bank0
   512     0795  0098               	movwf	24	;volatile
   513     0796                     l615:
   514                           
   515                           ;MASTER.c: 54:     SPBRG = 0x09;
   516     0796  3009               	movlw	9
   517     0797  1683               	bsf	3,5	;RP0=1, select bank1
   518     0798  1303               	bcf	3,6	;RP1=0, select bank1
   519     0799  0099               	movwf	25	;volatile
   520     079A                     l55:
   521     079A  0008               	return
   522     079B                     __end_of_init:
   523     007E                     btemp	set	126	;btemp
   524     007E                     wtemp0	set	126
   525                           
   526                           	psect	config
   527                           
   528                           ;Config register CONFIG @ 0x2007
   529                           ;	Oscillator Selection bits
   530                           ;	FOSC = HS, HS oscillator
   531                           ;	Watchdog Timer Enable bit
   532                           ;	WDTE = ON, WDT enabled
   533                           ;	Power-up Timer Enable bit
   534                           ;	PWRTE = OFF, PWRT disabled
   535                           ;	Brown-out Reset Enable bit
   536                           ;	BOREN = ON, BOR enabled
   537                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   538                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   539                           ;	Data EEPROM Memory Code Protection bit
   540                           ;	CPD = OFF, Data EEPROM code protection off
   541                           ;	Flash Program Memory Write Enable bits
   542                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   543                           ;	In-Circuit Debugger Mode bit
   544                           ;	DEBUG = 0x1, unprogrammed default
   545                           ;	Flash Program Memory Code Protection bit
   546                           ;	CP = OFF, Code protection off
   547     2007                     	org	8199
   548     2007  3FFE               	dw	16382

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMMON     2     2      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       3      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat May 11 16:48:11 2024

                     l44 07F8                       l55 079A                       u10 07D5  
                     u11 07D4                       u20 07DB                       u21 07DA  
                     u30 07E4                       u31 07E3                       u40 07ED  
                     u41 07EC                       u50 07F5                       u51 07F4  
                     u67 07CB                      l601 0783                      l611 078E  
                    l603 0787                      l613 0792                      l605 0788  
                    l621 07A5                      l615 0796                      l607 078A  
                    l623 07A8                      l631 07B1                      l609 078D  
                    l641 07DE                      l625 07AB                      l633 07C7  
                    l617 079B                      l651 07F5                      l643 07E4  
                    l635 07CF                      l627 07AE                      l619 07A0  
                    l645 07E7                      l637 07D5                      l647 07ED  
                    l639 07DB                      l649 07EF                      l677 07B9  
                    l599 077F                      _val 0072                     _RCIF 0065  
                   _main 079B                     _init 077F                     btemp 007E  
                   start 0000                    ?_main 0070                    ?_init 0070  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TXREG 0019  
                  _TXSTA 0098                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC             __end_of_init 079B  
                 ??_main 0070                   ??_init 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pnvCOMMON 0072               __pmaintext 079B  
                __ptext1 077F     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002               _OPTION_REG 0081  
