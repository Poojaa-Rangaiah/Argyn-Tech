

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun May 12 20:52:57 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 22/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     000B                     _INTCON	set	11
   169     0006                     _PORTB	set	6
   170     003C                     _RC4	set	60
   171     0038                     _RC0	set	56
   172     0081                     _OPTION_REG	set	129
   173     0087                     _TRISC	set	135
   174     0086                     _TRISB	set	134
   175                           
   176                           	psect	cinit
   177     0011                     start_initialization:	
   178                           ; #config settings
   179                           
   180     0011                     __initialization:
   181                           
   182                           ; Clear objects allocated to COMMON
   183     0011  01F6               	clrf	__pbssCOMMON& (0+127)
   184     0012                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187     0012                     __end_of__initialization:
   188     0012  0183               	clrf	3
   189     0013  120A  118A  2840   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	bssCOMMON
   192     0076                     __pbssCOMMON:
   193     0076                     _val:
   194     0076                     	ds	1
   195                           
   196                           	psect	cstackCOMMON
   197     0070                     __pcstackCOMMON:
   198     0070                     ?_main:
   199     0070                     ?_ISR_EXT_INT:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     0070                     ??_ISR_EXT_INT:	
   203                           ; 1 bytes @ 0x0
   204                           
   205                           
   206                           ; 1 bytes @ 0x0
   207     0070                     	ds	6
   208                           
   209                           	psect	cstackBANK0
   210     0020                     __pcstackBANK0:
   211     0020                     ??_main:
   212                           
   213                           ; 1 bytes @ 0x0
   214     0020                     	ds	3
   215                           
   216                           	psect	maintext
   217     0040                     __pmaintext:	
   218 ;;
   219 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   220 ;;
   221 ;; *************** function _main *****************
   222 ;; Defined at:
   223 ;;		line 12 in file "INT_Task.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, status,2, status,0, btemp+1
   232 ;; Tracked objects:
   233 ;;		On entry : B00/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   237 ;;      Params:         0       0       0       0       0
   238 ;;      Locals:         0       0       0       0       0
   239 ;;      Temps:          0       3       0       0       0
   240 ;;      Totals:         0       3       0       0       0
   241 ;;Total ram usage:        3 bytes
   242 ;; Hardware stack levels required when called: 1
   243 ;; This function calls:
   244 ;;		Nothing
   245 ;; This function is called by:
   246 ;;		Startup code after reset
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250     0040                     _main:	
   251                           ;psect for function _main
   252                           
   253     0040                     l607:	
   254                           ;incstack = 0
   255                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   256                           
   257                           
   258                           ;INT_Task.c: 13:     TRISB = 0x01;
   259     0040  3001               	movlw	1
   260     0041  1683               	bsf	3,5	;RP0=1, select bank1
   261     0042  1303               	bcf	3,6	;RP1=0, select bank1
   262     0043  0086               	movwf	6	;volatile
   263     0044                     l609:
   264                           
   265                           ;INT_Task.c: 14:     TRISC = 0x00;
   266     0044  0187               	clrf	7	;volatile
   267     0045                     l611:
   268                           
   269                           ;INT_Task.c: 15:     OPTION_REG &= 0x7F;
   270     0045  307F               	movlw	127
   271     0046  00FF               	movwf	btemp+1
   272     0047  087F               	movf	btemp+1,w
   273     0048  0581               	andwf	1,f	;volatile
   274     0049                     l613:
   275                           
   276                           ;INT_Task.c: 16:     PORTB = 0x00;
   277     0049  1283               	bcf	3,5	;RP0=0, select bank0
   278     004A  1303               	bcf	3,6	;RP1=0, select bank0
   279     004B  0186               	clrf	6	;volatile
   280     004C                     l615:
   281                           
   282                           ;INT_Task.c: 17:     RC0 = 0;
   283     004C  1007               	bcf	7,0	;volatile
   284     004D                     l617:
   285                           
   286                           ;INT_Task.c: 18:     INTCON = 0x90;
   287     004D  3090               	movlw	144
   288     004E  008B               	movwf	11	;volatile
   289     004F                     l619:
   290                           
   291                           ;INT_Task.c: 20:         RC0 = ~RC0;
   292     004F  3001               	movlw	1
   293     0050  1283               	bcf	3,5	;RP0=0, select bank0
   294     0051  1303               	bcf	3,6	;RP1=0, select bank0
   295     0052  0687               	xorwf	7,f
   296     0053                     l621:
   297                           
   298                           ;INT_Task.c: 21:         _delay((unsigned long)((100)*(20000000/4000.0)));
   299     0053  3003               	movlw	3
   300     0054  1283               	bcf	3,5	;RP0=0, select bank0
   301     0055  1303               	bcf	3,6	;RP1=0, select bank0
   302     0056  00A2               	movwf	??_main+2
   303     0057  308A               	movlw	138
   304     0058  00A1               	movwf	??_main+1
   305     0059  3055               	movlw	85
   306     005A  00A0               	movwf	??_main
   307     005B                     u37:
   308     005B  0BA0               	decfsz	??_main,f
   309     005C  285B               	goto	u37
   310     005D  0BA1               	decfsz	??_main+1,f
   311     005E  285B               	goto	u37
   312     005F  0BA2               	decfsz	??_main+2,f
   313     0060  285B               	goto	u37
   314     0061  284F               	goto	l619
   315     0062  120A  118A  280E   	ljmp	start
   316     0065                     __end_of_main:
   317                           
   318                           	psect	text1
   319     0016                     __ptext1:	
   320 ;; *************** function _ISR_EXT_INT *****************
   321 ;; Defined at:
   322 ;;		line 24 in file "INT_Task.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;		None
   325 ;; Auto vars:     Size  Location     Type
   326 ;;		None
   327 ;; Return value:  Size  Location     Type
   328 ;;                  1    wreg      void 
   329 ;; Registers used:
   330 ;;		wreg, status,2, status,0, btemp+1
   331 ;; Tracked objects:
   332 ;;		On entry : 0/0
   333 ;;		On exit  : 0/0
   334 ;;		Unchanged: 0/0
   335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   336 ;;      Params:         0       0       0       0       0
   337 ;;      Locals:         0       0       0       0       0
   338 ;;      Temps:          6       0       0       0       0
   339 ;;      Totals:         6       0       0       0       0
   340 ;;Total ram usage:        6 bytes
   341 ;; Hardware stack levels used: 1
   342 ;; This function calls:
   343 ;;		Nothing
   344 ;; This function is called by:
   345 ;;		Interrupt level 1
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349     0016                     _ISR_EXT_INT:	
   350                           ;psect for function _ISR_EXT_INT
   351                           
   352     0016                     i1l593:
   353                           
   354                           ;INT_Task.c: 25:     if(INTCON&0x02) {
   355     0016  1C8B               	btfss	11,1	;volatile
   356     0017  2819               	goto	u1_21
   357     0018  281A               	goto	u1_20
   358     0019                     u1_21:
   359     0019  2837               	goto	i1l33
   360     001A                     u1_20:
   361     001A                     i1l595:
   362                           
   363                           ;INT_Task.c: 26:         val = PORTB;
   364     001A  1283               	bcf	3,5	;RP0=0, select bank0
   365     001B  1303               	bcf	3,6	;RP1=0, select bank0
   366     001C  0806               	movf	6,w	;volatile
   367     001D  00F6               	movwf	_val
   368     001E                     i1l597:
   369                           
   370                           ;INT_Task.c: 27:         if(PORTB&0x01) {
   371     001E  1C06               	btfss	6,0	;volatile
   372     001F  2821               	goto	u2_21
   373     0020  2822               	goto	u2_20
   374     0021                     u2_21:
   375     0021  2833               	goto	i1l605
   376     0022                     u2_20:
   377     0022                     i1l599:
   378                           
   379                           ;INT_Task.c: 28:             RC4 = 1;
   380     0022  1607               	bsf	7,4	;volatile
   381     0023                     i1l601:
   382                           
   383                           ;INT_Task.c: 29:             _delay((unsigned long)((200)*(20000000/4000.0)));
   384     0023  3006               	movlw	6
   385     0024  00F2               	movwf	??_ISR_EXT_INT+2
   386     0025  3013               	movlw	19
   387     0026  00F1               	movwf	??_ISR_EXT_INT+1
   388     0027  30AD               	movlw	173
   389     0028  00F0               	movwf	??_ISR_EXT_INT
   390     0029                     u4_27:
   391     0029  0BF0               	decfsz	??_ISR_EXT_INT,f
   392     002A  2829               	goto	u4_27
   393     002B  0BF1               	decfsz	??_ISR_EXT_INT+1,f
   394     002C  2829               	goto	u4_27
   395     002D  0BF2               	decfsz	??_ISR_EXT_INT+2,f
   396     002E  2829               	goto	u4_27
   397     002F  2830               	nop2
   398     0030                     i1l603:
   399                           
   400                           ;INT_Task.c: 30:             RC4 = 0;
   401     0030  1283               	bcf	3,5	;RP0=0, select bank0
   402     0031  1303               	bcf	3,6	;RP1=0, select bank0
   403     0032  1207               	bcf	7,4	;volatile
   404     0033                     i1l605:
   405                           
   406                           ;INT_Task.c: 32:         INTCON &= 0xFD;
   407     0033  30FD               	movlw	253
   408     0034  00FF               	movwf	btemp+1
   409     0035  087F               	movf	btemp+1,w
   410     0036  058B               	andwf	11,f	;volatile
   411     0037                     i1l33:
   412     0037  0875               	movf	??_ISR_EXT_INT+5,w
   413     0038  00FF               	movwf	btemp+1
   414     0039  0874               	movf	??_ISR_EXT_INT+4,w
   415     003A  008A               	movwf	10
   416     003B  0E73               	swapf	??_ISR_EXT_INT+3,w
   417     003C  0083               	movwf	3
   418     003D  0EFE               	swapf	btemp,f
   419     003E  0E7E               	swapf	btemp,w
   420     003F  0009               	retfie
   421     0040                     __end_of_ISR_EXT_INT:
   422     007E                     btemp	set	126	;btemp
   423     007E                     wtemp0	set	126
   424                           
   425                           	psect	intentry
   426     0004                     __pintentry:	
   427                           ;incstack = 0
   428                           ; Regs used in _ISR_EXT_INT: [wreg+status,2+status,0+btemp+1]
   429                           
   430     0004                     interrupt_function:
   431     007E                     saved_w	set	btemp
   432     0004  00FE               	movwf	btemp
   433     0005  0E03               	swapf	3,w
   434     0006  00F3               	movwf	??_ISR_EXT_INT+3
   435     0007  080A               	movf	10,w
   436     0008  00F4               	movwf	??_ISR_EXT_INT+4
   437     0009  087F               	movf	btemp+1,w
   438     000A  00F5               	movwf	??_ISR_EXT_INT+5
   439     000B  120A  118A  2816   	ljmp	_ISR_EXT_INT
   440                           
   441                           	psect	config
   442                           
   443                           ;Config register CONFIG @ 0x2007
   444                           ;	Oscillator Selection bits
   445                           ;	FOSC = HS, HS oscillator
   446                           ;	Watchdog Timer Enable bit
   447                           ;	WDTE = OFF, WDT disabled
   448                           ;	Power-up Timer Enable bit
   449                           ;	PWRTE = OFF, PWRT disabled
   450                           ;	Brown-out Reset Enable bit
   451                           ;	BOREN = OFF, BOR disabled
   452                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   453                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   454                           ;	Data EEPROM Memory Code Protection bit
   455                           ;	CPD = OFF, Data EEPROM code protection off
   456                           ;	Flash Program Memory Write Enable bits
   457                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   458                           ;	In-Circuit Debugger Mode bit
   459                           ;	DEBUG = 0x1, unprogrammed default
   460                           ;	Flash Program Memory Code Protection bit
   461                           ;	CP = OFF, Code protection off
   462     2007                     	org	8199
   463     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR_EXT_INT in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_EXT_INT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_EXT_INT in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_EXT_INT in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_EXT_INT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR_EXT_INT                                          6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR_EXT_INT (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun May 12 20:52:57 2024

                     u37 005B                      l611 0045                      l621 0053  
                    l613 0049                      l615 004C                      l607 0040  
                    l617 004D                      l609 0044                      l619 004F  
                    _RC0 0038                      _RC4 003C                      _val 0076  
                   i1l33 0037                     u1_20 001A                     u1_21 0019  
                   u2_20 0022                     u2_21 0021                     u4_27 0029  
                   _main 0040                     btemp 007E                     start 000E  
                  ?_main 0070                    i1l601 0023                    i1l603 0030  
                  i1l605 0033                    i1l593 0016                    i1l595 001A  
                  i1l597 001E                    i1l599 0022                    _PORTB 0006  
                  _TRISB 0086                    _TRISC 0087                    pclath 000A  
                  status 0003                    wtemp0 007E             ?_ISR_EXT_INT 0070  
        __initialization 0011             __end_of_main 0065                   ??_main 0020  
                 _INTCON 000B                   saved_w 007E  __end_of__initialization 0012  
         __pcstackCOMMON 0070               __pmaintext 0040               __pintentry 0004  
                __ptext1 0016     end_of_initialization 0012      start_initialization 0011  
            __pbssCOMMON 0076                ___latbits 0002            __pcstackBANK0 0020  
          ??_ISR_EXT_INT 0070        interrupt_function 0004      __end_of_ISR_EXT_INT 0040  
            _ISR_EXT_INT 0016                 intlevel1 0000               _OPTION_REG 0081  
