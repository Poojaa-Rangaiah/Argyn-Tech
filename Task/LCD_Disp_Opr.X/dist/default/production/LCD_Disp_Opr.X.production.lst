

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Jan 08 17:04:14 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 22/03/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172     0008                     _PORTD	set	8
   173     0007                     _PORTC	set	7
   174     0088                     _TRISD	set	136
   175     0087                     _TRISC	set	135
   176                           
   177                           	psect	cinit
   178     07F3                     start_initialization:	
   179                           ; #config settings
   180                           
   181     07F3                     __initialization:
   182                           
   183                           ; Clear objects allocated to BANK0
   184     07F3  1383               	bcf	3,7	;select IRP bank0
   185     07F4  3020               	movlw	low __pbssBANK0
   186     07F5  0084               	movwf	4
   187     07F6  3048               	movlw	low (__pbssBANK0+40)
   188     07F7  120A  118A  2641  120A  118A  	fcall	clear_ram0
   189     07FC                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192     07FC                     __end_of__initialization:
   193     07FC  0183               	clrf	3
   194     07FD  120A  118A  2ED1   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	bssBANK0
   197     0020                     __pbssBANK0:
   198     0020                     _k:
   199     0020                     	ds	30
   200     003E                     _m:
   201     003E                     	ds	2
   202     0040                     _sub:
   203     0040                     	ds	2
   204     0042                     _num2:
   205     0042                     	ds	2
   206     0044                     _num1:
   207     0044                     	ds	2
   208     0046                     _n:
   209     0046                     	ds	1
   210     0047                     _x:
   211     0047                     	ds	1
   212                           
   213                           	psect	clrtext
   214     0641                     clear_ram0:	
   215                           ;	Called with FSR containing the base address, and
   216                           ;	W with the last address+1
   217                           
   218     0641  0064               	clrwdt	;clear the watchdog before getting into this loop
   219     0642                     clrloop0:
   220     0642  0180               	clrf	0	;clear RAM location pointed to by FSR
   221     0643  0A84               	incf	4,f	;increment pointer
   222     0644  0604               	xorwf	4,w	;XOR with final address
   223     0645  1903               	btfsc	3,2	;have we reached the end yet?
   224     0646  3400               	retlw	0	;all done for this memory range, return
   225     0647  0604               	xorwf	4,w	;XOR again to restore value
   226     0648  2E42               	goto	clrloop0	;do the next byte
   227                           
   228                           	psect	cstackCOMMON
   229     0070                     __pcstackCOMMON:
   230     0070                     ?_init:
   231     0070                     ?_LCD_Comm:	
   232                           ; 1 bytes @ 0x0
   233                           
   234     0070                     ??_LCD_Comm:	
   235                           ; 1 bytes @ 0x0
   236                           
   237     0070                     ?_LCD_Data:	
   238                           ; 1 bytes @ 0x0
   239                           
   240     0070                     ??_LCD_Data:	
   241                           ; 1 bytes @ 0x0
   242                           
   243     0070                     ?_main:	
   244                           ; 1 bytes @ 0x0
   245                           
   246     0070                     ?___lwdiv:	
   247                           ; 1 bytes @ 0x0
   248                           
   249     0070                     ___lwdiv@divisor:	
   250                           ; 2 bytes @ 0x0
   251                           
   252                           
   253                           ; 2 bytes @ 0x0
   254     0070                     	ds	2
   255     0072                     LCD_Comm@i:
   256     0072                     LCD_Data@i:	
   257                           ; 1 bytes @ 0x2
   258                           
   259     0072                     ___lwdiv@dividend:	
   260                           ; 1 bytes @ 0x2
   261                           
   262                           
   263                           ; 2 bytes @ 0x2
   264     0072                     	ds	1
   265     0073                     ??_init:
   266                           
   267                           ; 1 bytes @ 0x3
   268     0073                     	ds	1
   269     0074                     ??___lwdiv:
   270     0074                     ___lwdiv@quotient:	
   271                           ; 1 bytes @ 0x4
   272                           
   273                           
   274                           ; 2 bytes @ 0x4
   275     0074                     	ds	2
   276     0076                     ___lwdiv@counter:
   277                           
   278                           ; 1 bytes @ 0x6
   279     0076                     	ds	1
   280     0077                     ?___bmul:
   281     0077                     ___bmul@multiplicand:	
   282                           ; 1 bytes @ 0x7
   283                           
   284                           
   285                           ; 1 bytes @ 0x7
   286     0077                     	ds	1
   287     0078                     ??___bmul:
   288     0078                     ___bmul@product:	
   289                           ; 1 bytes @ 0x8
   290                           
   291                           
   292                           ; 1 bytes @ 0x8
   293     0078                     	ds	1
   294     0079                     ___bmul@multiplier:
   295                           
   296                           ; 1 bytes @ 0x9
   297     0079                     	ds	1
   298     007A                     ?_LCDOutput:
   299     007A                     LCDOutput@i:	
   300                           ; 1 bytes @ 0xA
   301                           
   302                           
   303                           ; 2 bytes @ 0xA
   304     007A                     	ds	2
   305     007C                     ??_LCDOutput:
   306     007C                     LCDOutput@s:	
   307                           ; 1 bytes @ 0xC
   308                           
   309                           
   310                           ; 1 bytes @ 0xC
   311     007C                     	ds	1
   312     007D                     LCDOutput@j:
   313                           
   314                           ; 1 bytes @ 0xD
   315     007D                     	ds	1
   316     007E                     ??_main:
   317                           
   318                           	psect	maintext
   319     06D1                     __pmaintext:	
   320                           ; 1 bytes @ 0xE
   321 ;;
   322 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   323 ;;
   324 ;; *************** function _main *****************
   325 ;; Defined at:
   326 ;;		line 27 in file "disp_opr.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;		None
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      void 
   333 ;; Registers used:
   334 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   335 ;; Tracked objects:
   336 ;;		On entry : B00/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   340 ;;      Params:         0       0       0       0       0
   341 ;;      Locals:         0       0       0       0       0
   342 ;;      Temps:          0       0       0       0       0
   343 ;;      Totals:         0       0       0       0       0
   344 ;;Total ram usage:        0 bytes
   345 ;; Hardware stack levels required when called: 2
   346 ;; This function calls:
   347 ;;		_LCDOutput
   348 ;;		_LCD_Comm
   349 ;;		_LCD_Data
   350 ;;		_init
   351 ;; This function is called by:
   352 ;;		Startup code after reset
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356     06D1                     _main:	
   357                           ;psect for function _main
   358                           
   359     06D1                     l856:	
   360                           ;incstack = 0
   361                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   362                           
   363                           
   364                           ;disp_opr.c: 28:     init();
   365     06D1  120A  118A  278C  120A  118A  	fcall	_init
   366     06D6                     l858:
   367                           
   368                           ;disp_opr.c: 29:     num1=100;
   369     06D6  3064               	movlw	100
   370     06D7  1283               	bcf	3,5	;RP0=0, select bank0
   371     06D8  1303               	bcf	3,6	;RP1=0, select bank0
   372     06D9  00C4               	movwf	_num1
   373     06DA  3000               	movlw	0
   374     06DB  00C5               	movwf	_num1+1
   375     06DC                     l860:
   376                           
   377                           ;disp_opr.c: 30:     num2=200;
   378     06DC  30C8               	movlw	200
   379     06DD  00C2               	movwf	_num2
   380     06DE  3000               	movlw	0
   381     06DF  00C3               	movwf	_num2+1
   382                           
   383                           ;disp_opr.c: 31:     LCD_Comm(0x80);
   384     06E0  3080               	movlw	128
   385     06E1  120A  118A  2674  120A  118A  	fcall	_LCD_Comm
   386     06E6                     l862:
   387                           
   388                           ;disp_opr.c: 32:     LCDOutput(num1);
   389     06E6  3064               	movlw	100
   390     06E7  00FA               	movwf	LCDOutput@i
   391     06E8  3000               	movlw	0
   392     06E9  00FB               	movwf	LCDOutput@i+1
   393     06EA  120A  118A  2729  120A  118A  	fcall	_LCDOutput
   394     06EF                     l864:
   395                           
   396                           ;disp_opr.c: 33:     LCD_Data('-');
   397     06EF  302D               	movlw	45
   398     06F0  120A  118A  265E  120A  118A  	fcall	_LCD_Data
   399                           
   400                           ;disp_opr.c: 34:     LCDOutput(num2);
   401     06F5  30C8               	movlw	200
   402     06F6  00FA               	movwf	LCDOutput@i
   403     06F7  3000               	movlw	0
   404     06F8  00FB               	movwf	LCDOutput@i+1
   405     06F9  120A  118A  2729  120A  118A  	fcall	_LCDOutput
   406     06FE                     l866:
   407                           
   408                           ;disp_opr.c: 35:     LCD_Data('=');
   409     06FE  303D               	movlw	61
   410     06FF  120A  118A  265E  120A  118A  	fcall	_LCD_Data
   411     0704                     l868:
   412                           
   413                           ;disp_opr.c: 36:     sub = num1-num2;
   414     0704  309C               	movlw	156
   415     0705  1283               	bcf	3,5	;RP0=0, select bank0
   416     0706  1303               	bcf	3,6	;RP1=0, select bank0
   417     0707  00C0               	movwf	_sub
   418     0708  30FF               	movlw	255
   419     0709  00C1               	movwf	_sub+1
   420     070A                     l870:
   421     070A                     l872:	
   422                           ;disp_opr.c: 37:     if (sub>32767) {
   423                           
   424                           
   425                           ;disp_opr.c: 38:         LCD_Comm(0x88);
   426     070A  3088               	movlw	136
   427     070B  120A  118A  2674  120A  118A  	fcall	_LCD_Comm
   428                           
   429                           ;disp_opr.c: 39:         LCD_Data('-');
   430     0710  302D               	movlw	45
   431     0711  120A  118A  265E  120A  118A  	fcall	_LCD_Data
   432     0716                     l874:
   433                           
   434                           ;disp_opr.c: 40:         sub = num2-num1;
   435     0716  3064               	movlw	100
   436     0717  1283               	bcf	3,5	;RP0=0, select bank0
   437     0718  1303               	bcf	3,6	;RP1=0, select bank0
   438     0719  00C0               	movwf	_sub
   439     071A  3000               	movlw	0
   440     071B  00C1               	movwf	_sub+1
   441     071C                     l876:
   442                           
   443                           ;disp_opr.c: 41:         LCDOutput(sub);
   444     071C  3064               	movlw	100
   445     071D  00FA               	movwf	LCDOutput@i
   446     071E  3000               	movlw	0
   447     071F  00FB               	movwf	LCDOutput@i+1
   448     0720  120A  118A  2729  120A  118A  	fcall	_LCDOutput
   449     0725                     l39:	
   450                           ;disp_opr.c: 46:     while(1);
   451                           
   452     0725  2F25               	goto	l39
   453     0726  120A  118A  2800   	ljmp	start
   454     0729                     __end_of_main:
   455                           
   456                           	psect	text1
   457     078C                     __ptext1:	
   458 ;; *************** function _init *****************
   459 ;; Defined at:
   460 ;;		line 49 in file "disp_opr.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   474 ;;      Params:         0       0       0       0       0
   475 ;;      Locals:         0       0       0       0       0
   476 ;;      Temps:          2       0       0       0       0
   477 ;;      Totals:         2       0       0       0       0
   478 ;;Total ram usage:        2 bytes
   479 ;; Hardware stack levels used: 1
   480 ;; Hardware stack levels required when called: 1
   481 ;; This function calls:
   482 ;;		_LCD_Comm
   483 ;; This function is called by:
   484 ;;		_main
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488     078C                     _init:	
   489                           ;psect for function _init
   490                           
   491     078C                     l800:	
   492                           ;incstack = 0
   493                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   494                           
   495                           
   496                           ;disp_opr.c: 50:     TRISC=0x00;
   497     078C  1683               	bsf	3,5	;RP0=1, select bank1
   498     078D  1303               	bcf	3,6	;RP1=0, select bank1
   499     078E  0187               	clrf	7	;volatile
   500                           
   501                           ;disp_opr.c: 51:     TRISD=0x00;
   502     078F  0188               	clrf	8	;volatile
   503     0790                     l802:
   504                           
   505                           ;disp_opr.c: 52:     LCD_Comm(0x38);
   506     0790  3038               	movlw	56
   507     0791  120A  118A  2674  120A  118A  	fcall	_LCD_Comm
   508     0796                     l804:
   509                           
   510                           ;disp_opr.c: 53:     _delay((unsigned long)((100)*(6000000/4000.0)));
   511     0796  30C3               	movlw	195
   512     0797  00F4               	movwf	??_init+1
   513     0798  30CD               	movlw	205
   514     0799  00F3               	movwf	??_init
   515     079A                     u237:
   516     079A  0BF3               	decfsz	??_init,f
   517     079B  2F9A               	goto	u237
   518     079C  0BF4               	decfsz	??_init+1,f
   519     079D  2F9A               	goto	u237
   520     079E                     l806:
   521                           
   522                           ;disp_opr.c: 54:     LCD_Comm(0x38);
   523     079E  3038               	movlw	56
   524     079F  120A  118A  2674  120A  118A  	fcall	_LCD_Comm
   525     07A4                     l808:
   526                           
   527                           ;disp_opr.c: 55:     _delay((unsigned long)((100)*(6000000/4000.0)));
   528     07A4  30C3               	movlw	195
   529     07A5  00F4               	movwf	??_init+1
   530     07A6  30CD               	movlw	205
   531     07A7  00F3               	movwf	??_init
   532     07A8                     u247:
   533     07A8  0BF3               	decfsz	??_init,f
   534     07A9  2FA8               	goto	u247
   535     07AA  0BF4               	decfsz	??_init+1,f
   536     07AB  2FA8               	goto	u247
   537     07AC                     l810:
   538                           
   539                           ;disp_opr.c: 56:     LCD_Comm(0x38);
   540     07AC  3038               	movlw	56
   541     07AD  120A  118A  2674  120A  118A  	fcall	_LCD_Comm
   542     07B2                     l812:
   543                           
   544                           ;disp_opr.c: 57:     _delay((unsigned long)((100)*(6000000/4000.0)));
   545     07B2  30C3               	movlw	195
   546     07B3  00F4               	movwf	??_init+1
   547     07B4  30CD               	movlw	205
   548     07B5  00F3               	movwf	??_init
   549     07B6                     u257:
   550     07B6  0BF3               	decfsz	??_init,f
   551     07B7  2FB6               	goto	u257
   552     07B8  0BF4               	decfsz	??_init+1,f
   553     07B9  2FB6               	goto	u257
   554     07BA                     l814:
   555                           
   556                           ;disp_opr.c: 58:     LCD_Comm(0x38);
   557     07BA  3038               	movlw	56
   558     07BB  120A  118A  2674  120A  118A  	fcall	_LCD_Comm
   559     07C0                     l816:
   560                           
   561                           ;disp_opr.c: 59:     _delay((unsigned long)((100)*(6000000/4000.0)));
   562     07C0  30C3               	movlw	195
   563     07C1  00F4               	movwf	??_init+1
   564     07C2  30CD               	movlw	205
   565     07C3  00F3               	movwf	??_init
   566     07C4                     u267:
   567     07C4  0BF3               	decfsz	??_init,f
   568     07C5  2FC4               	goto	u267
   569     07C6  0BF4               	decfsz	??_init+1,f
   570     07C7  2FC4               	goto	u267
   571     07C8                     l818:
   572                           
   573                           ;disp_opr.c: 60:     LCD_Comm(0x0E);
   574     07C8  300E               	movlw	14
   575     07C9  120A  118A  2674  120A  118A  	fcall	_LCD_Comm
   576     07CE                     l820:
   577                           
   578                           ;disp_opr.c: 61:     _delay((unsigned long)((100)*(6000000/4000.0)));
   579     07CE  30C3               	movlw	195
   580     07CF  00F4               	movwf	??_init+1
   581     07D0  30CD               	movlw	205
   582     07D1  00F3               	movwf	??_init
   583     07D2                     u277:
   584     07D2  0BF3               	decfsz	??_init,f
   585     07D3  2FD2               	goto	u277
   586     07D4  0BF4               	decfsz	??_init+1,f
   587     07D5  2FD2               	goto	u277
   588     07D6                     l822:
   589                           
   590                           ;disp_opr.c: 62:     LCD_Comm(0x06);
   591     07D6  3006               	movlw	6
   592     07D7  120A  118A  2674  120A  118A  	fcall	_LCD_Comm
   593     07DC                     l824:
   594                           
   595                           ;disp_opr.c: 63:     _delay((unsigned long)((100)*(6000000/4000.0)));
   596     07DC  30C3               	movlw	195
   597     07DD  00F4               	movwf	??_init+1
   598     07DE  30CD               	movlw	205
   599     07DF  00F3               	movwf	??_init
   600     07E0                     u287:
   601     07E0  0BF3               	decfsz	??_init,f
   602     07E1  2FE0               	goto	u287
   603     07E2  0BF4               	decfsz	??_init+1,f
   604     07E3  2FE0               	goto	u287
   605     07E4                     l826:
   606                           
   607                           ;disp_opr.c: 64:     LCD_Comm(0x01);
   608     07E4  3001               	movlw	1
   609     07E5  120A  118A  2674  120A  118A  	fcall	_LCD_Comm
   610     07EA                     l828:
   611                           
   612                           ;disp_opr.c: 65:     _delay((unsigned long)((100)*(6000000/4000.0)));
   613     07EA  30C3               	movlw	195
   614     07EB  00F4               	movwf	??_init+1
   615     07EC  30CD               	movlw	205
   616     07ED  00F3               	movwf	??_init
   617     07EE                     u297:
   618     07EE  0BF3               	decfsz	??_init,f
   619     07EF  2FEE               	goto	u297
   620     07F0  0BF4               	decfsz	??_init+1,f
   621     07F1  2FEE               	goto	u297
   622     07F2                     l45:
   623     07F2  0008               	return
   624     07F3                     __end_of_init:
   625                           
   626                           	psect	text2
   627     0674                     __ptext2:	
   628 ;; *************** function _LCD_Comm *****************
   629 ;; Defined at:
   630 ;;		line 82 in file "disp_opr.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;  i               1    wreg     unsigned char 
   633 ;; Auto vars:     Size  Location     Type
   634 ;;  i               1    2[COMMON] unsigned char 
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, status,2, status,0, btemp+1
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         1       0       0       0       0
   646 ;;      Temps:          2       0       0       0       0
   647 ;;      Totals:         3       0       0       0       0
   648 ;;Total ram usage:        3 bytes
   649 ;; Hardware stack levels used: 1
   650 ;; This function calls:
   651 ;;		Nothing
   652 ;; This function is called by:
   653 ;;		_main
   654 ;;		_init
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658     0674                     _LCD_Comm:	
   659                           ;psect for function _LCD_Comm
   660                           
   661                           
   662                           ;incstack = 0
   663                           ; Regs used in _LCD_Comm: [wreg+status,2+status,0+btemp+1]
   664                           ;LCD_Comm@i stored from wreg
   665     0674  00F2               	movwf	LCD_Comm@i
   666     0675                     l742:
   667                           
   668                           ;disp_opr.c: 83:     PORTC&=0xF7;
   669     0675  30F7               	movlw	247
   670     0676  00FF               	movwf	btemp+1
   671     0677  087F               	movf	btemp+1,w
   672     0678  1283               	bcf	3,5	;RP0=0, select bank0
   673     0679  1303               	bcf	3,6	;RP1=0, select bank0
   674     067A  0587               	andwf	7,f	;volatile
   675     067B                     l744:
   676                           
   677                           ;disp_opr.c: 84:     PORTD = i;
   678     067B  0872               	movf	LCD_Comm@i,w
   679     067C  0088               	movwf	8	;volatile
   680     067D                     l746:
   681                           
   682                           ;disp_opr.c: 85:     PORTC|=0x01;
   683     067D  1407               	bsf	7,0	;volatile
   684     067E                     l748:
   685                           
   686                           ;disp_opr.c: 86:     _delay((unsigned long)((100)*(6000000/4000.0)));
   687     067E  30C3               	movlw	195
   688     067F  00F1               	movwf	??_LCD_Comm+1
   689     0680  30CD               	movlw	205
   690     0681  00F0               	movwf	??_LCD_Comm
   691     0682                     u307:
   692     0682  0BF0               	decfsz	??_LCD_Comm,f
   693     0683  2E82               	goto	u307
   694     0684  0BF1               	decfsz	??_LCD_Comm+1,f
   695     0685  2E82               	goto	u307
   696                           
   697                           ;disp_opr.c: 87:     PORTC&=~0x01;
   698     0686  30FE               	movlw	254
   699     0687  00FF               	movwf	btemp+1
   700     0688  087F               	movf	btemp+1,w
   701     0689  1283               	bcf	3,5	;RP0=0, select bank0
   702     068A  1303               	bcf	3,6	;RP1=0, select bank0
   703     068B  0587               	andwf	7,f	;volatile
   704     068C                     l57:
   705     068C  0008               	return
   706     068D                     __end_of_LCD_Comm:
   707                           
   708                           	psect	text3
   709     0729                     __ptext3:	
   710 ;; *************** function _LCDOutput *****************
   711 ;; Defined at:
   712 ;;		line 68 in file "disp_opr.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;  i               2   10[COMMON] unsigned int 
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  j               1   13[COMMON] unsigned char 
   717 ;;  s               1   12[COMMON] unsigned char 
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   727 ;;      Params:         2       0       0       0       0
   728 ;;      Locals:         2       0       0       0       0
   729 ;;      Temps:          0       0       0       0       0
   730 ;;      Totals:         4       0       0       0       0
   731 ;;Total ram usage:        4 bytes
   732 ;; Hardware stack levels used: 1
   733 ;; Hardware stack levels required when called: 1
   734 ;; This function calls:
   735 ;;		_LCD_Data
   736 ;;		___bmul
   737 ;;		___lwdiv
   738 ;; This function is called by:
   739 ;;		_main
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743     0729                     _LCDOutput:	
   744                           ;psect for function _LCDOutput
   745                           
   746     0729                     l830:	
   747                           ;incstack = 0
   748                           ; Regs used in _LCDOutput: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   749                           
   750                           
   751                           ;disp_opr.c: 69:     unsigned char s, j=1;
   752     0729  01FD               	clrf	LCDOutput@j
   753     072A  0AFD               	incf	LCDOutput@j,f
   754     072B                     l832:
   755                           
   756                           ;disp_opr.c: 70:     m=i;
   757     072B  087B               	movf	LCDOutput@i+1,w
   758     072C  1283               	bcf	3,5	;RP0=0, select bank0
   759     072D  1303               	bcf	3,6	;RP1=0, select bank0
   760     072E  00BF               	movwf	_m+1
   761     072F  087A               	movf	LCDOutput@i,w
   762     0730  00BE               	movwf	_m
   763                           
   764                           ;disp_opr.c: 71:     while(m) {
   765     0731  2F68               	goto	l842
   766     0732                     l834:
   767                           
   768                           ;disp_opr.c: 72:         s = m-((m/10)*10);
   769     0732  30F6               	movlw	246
   770     0733  00F7               	movwf	___bmul@multiplicand
   771     0734  083F               	movf	_m+1,w
   772     0735  00F3               	movwf	___lwdiv@dividend+1
   773     0736  083E               	movf	_m,w
   774     0737  00F2               	movwf	___lwdiv@dividend
   775     0738  300A               	movlw	10
   776     0739  00F0               	movwf	___lwdiv@divisor
   777     073A  3000               	movlw	0
   778     073B  00F1               	movwf	___lwdiv@divisor+1
   779     073C  120A  118A  268D  120A  118A  	fcall	___lwdiv
   780     0741  0870               	movf	?___lwdiv,w
   781     0742  120A  118A  2649  120A  118A  	fcall	___bmul
   782     0747  1283               	bcf	3,5	;RP0=0, select bank0
   783     0748  1303               	bcf	3,6	;RP1=0, select bank0
   784     0749  073E               	addwf	_m,w
   785     074A  00FC               	movwf	LCDOutput@s
   786     074B                     l836:
   787                           
   788                           ;disp_opr.c: 73:         k[j]=s; j++; m/=10;
   789     074B  087D               	movf	LCDOutput@j,w
   790     074C  3E20               	addlw	(low (_k| 0))& (0+255)
   791     074D  0084               	movwf	4
   792     074E  087C               	movf	LCDOutput@s,w
   793     074F  1383               	bcf	3,7	;select IRP bank0
   794     0750  0080               	movwf	0
   795     0751                     l838:
   796     0751  3001               	movlw	1
   797     0752  00FF               	movwf	btemp+1
   798     0753  087F               	movf	btemp+1,w
   799     0754  07FD               	addwf	LCDOutput@j,f
   800     0755                     l840:
   801     0755  300A               	movlw	10
   802     0756  00F0               	movwf	___lwdiv@divisor
   803     0757  3000               	movlw	0
   804     0758  00F1               	movwf	___lwdiv@divisor+1
   805     0759  083F               	movf	_m+1,w
   806     075A  00F3               	movwf	___lwdiv@dividend+1
   807     075B  083E               	movf	_m,w
   808     075C  00F2               	movwf	___lwdiv@dividend
   809     075D  120A  118A  268D  120A  118A  	fcall	___lwdiv
   810     0762  0871               	movf	?___lwdiv+1,w
   811     0763  1283               	bcf	3,5	;RP0=0, select bank0
   812     0764  1303               	bcf	3,6	;RP1=0, select bank0
   813     0765  00BF               	movwf	_m+1
   814     0766  0870               	movf	?___lwdiv,w
   815     0767  00BE               	movwf	_m
   816     0768                     l842:
   817                           
   818                           ;disp_opr.c: 71:     while(m) {
   819     0768  083E               	movf	_m,w
   820     0769  043F               	iorwf	_m+1,w
   821     076A  1D03               	btfss	3,2
   822     076B  2F6D               	goto	u211
   823     076C  2F6E               	goto	u210
   824     076D                     u211:
   825     076D  2F32               	goto	l834
   826     076E                     u210:
   827     076E                     l844:
   828                           
   829                           ;disp_opr.c: 75:     k[j]='\0'; --j;
   830     076E  087D               	movf	LCDOutput@j,w
   831     076F  3E20               	addlw	(low (_k| 0))& (0+255)
   832     0770  0084               	movwf	4
   833     0771  1383               	bcf	3,7	;select IRP bank0
   834     0772  0180               	clrf	0
   835     0773                     l846:
   836     0773  3001               	movlw	1
   837     0774  02FD               	subwf	LCDOutput@j,f
   838                           
   839                           ;disp_opr.c: 76:     while(j) {
   840     0775  2F86               	goto	l854
   841     0776                     l848:
   842                           
   843                           ;disp_opr.c: 77:         n=0x30+k[j];
   844     0776  087D               	movf	LCDOutput@j,w
   845     0777  3E20               	addlw	(low (_k| 0))& (0+255)
   846     0778  0084               	movwf	4
   847     0779  1383               	bcf	3,7	;select IRP bank0
   848     077A  0800               	movf	0,w
   849     077B  3E30               	addlw	48
   850     077C  1283               	bcf	3,5	;RP0=0, select bank0
   851     077D  1303               	bcf	3,6	;RP1=0, select bank0
   852     077E  00C6               	movwf	_n
   853     077F                     l850:
   854                           
   855                           ;disp_opr.c: 78:         LCD_Data(n); j--;
   856     077F  0846               	movf	_n,w
   857     0780  120A  118A  265E  120A  118A  	fcall	_LCD_Data
   858     0785  2F73               	goto	l846
   859     0786                     l854:
   860                           
   861                           ;disp_opr.c: 76:     while(j) {
   862     0786  087D               	movf	LCDOutput@j,w
   863     0787  1D03               	btfss	3,2
   864     0788  2F8A               	goto	u221
   865     0789  2F8B               	goto	u220
   866     078A                     u221:
   867     078A  2F76               	goto	l848
   868     078B                     u220:
   869     078B                     l54:
   870     078B  0008               	return
   871     078C                     __end_of_LCDOutput:
   872                           
   873                           	psect	text4
   874     068D                     __ptext4:	
   875 ;; *************** function ___lwdiv *****************
   876 ;; Defined at:
   877 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;  divisor         2    0[COMMON] unsigned int 
   880 ;;  dividend        2    2[COMMON] unsigned int 
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  quotient        2    4[COMMON] unsigned int 
   883 ;;  counter         1    6[COMMON] unsigned char 
   884 ;; Return value:  Size  Location     Type
   885 ;;                  2    0[COMMON] unsigned int 
   886 ;; Registers used:
   887 ;;		wreg, status,2, status,0, btemp+1
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   893 ;;      Params:         4       0       0       0       0
   894 ;;      Locals:         3       0       0       0       0
   895 ;;      Temps:          0       0       0       0       0
   896 ;;      Totals:         7       0       0       0       0
   897 ;;Total ram usage:        7 bytes
   898 ;; Hardware stack levels used: 1
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		_LCDOutput
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906     068D                     ___lwdiv:	
   907                           ;psect for function ___lwdiv
   908                           
   909     068D                     l774:	
   910                           ;incstack = 0
   911                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
   912                           
   913     068D  01F4               	clrf	___lwdiv@quotient
   914     068E  01F5               	clrf	___lwdiv@quotient+1
   915     068F                     l776:
   916     068F  0870               	movf	___lwdiv@divisor,w
   917     0690  0471               	iorwf	___lwdiv@divisor+1,w
   918     0691  1903               	btfsc	3,2
   919     0692  2E94               	goto	u141
   920     0693  2E95               	goto	u140
   921     0694                     u141:
   922     0694  2ECC               	goto	l796
   923     0695                     u140:
   924     0695                     l778:
   925     0695  01F6               	clrf	___lwdiv@counter
   926     0696  0AF6               	incf	___lwdiv@counter,f
   927     0697  2EA3               	goto	l784
   928     0698                     l780:
   929     0698  3001               	movlw	1
   930     0699                     u155:
   931     0699  1003               	clrc
   932     069A  0DF0               	rlf	___lwdiv@divisor,f
   933     069B  0DF1               	rlf	___lwdiv@divisor+1,f
   934     069C  3EFF               	addlw	-1
   935     069D  1D03               	skipz
   936     069E  2E99               	goto	u155
   937     069F                     l782:
   938     069F  3001               	movlw	1
   939     06A0  00FF               	movwf	btemp+1
   940     06A1  087F               	movf	btemp+1,w
   941     06A2  07F6               	addwf	___lwdiv@counter,f
   942     06A3                     l784:
   943     06A3  1FF1               	btfss	___lwdiv@divisor+1,7
   944     06A4  2EA6               	goto	u161
   945     06A5  2EA7               	goto	u160
   946     06A6                     u161:
   947     06A6  2E98               	goto	l780
   948     06A7                     u160:
   949     06A7                     l786:
   950     06A7  3001               	movlw	1
   951     06A8                     u175:
   952     06A8  1003               	clrc
   953     06A9  0DF4               	rlf	___lwdiv@quotient,f
   954     06AA  0DF5               	rlf	___lwdiv@quotient+1,f
   955     06AB  3EFF               	addlw	-1
   956     06AC  1D03               	skipz
   957     06AD  2EA8               	goto	u175
   958     06AE  0871               	movf	___lwdiv@divisor+1,w
   959     06AF  0273               	subwf	___lwdiv@dividend+1,w
   960     06B0  1D03               	skipz
   961     06B1  2EB4               	goto	u185
   962     06B2  0870               	movf	___lwdiv@divisor,w
   963     06B3  0272               	subwf	___lwdiv@dividend,w
   964     06B4                     u185:
   965     06B4  1C03               	skipc
   966     06B5  2EB7               	goto	u181
   967     06B6  2EB8               	goto	u180
   968     06B7                     u181:
   969     06B7  2EBF               	goto	l792
   970     06B8                     u180:
   971     06B8                     l788:
   972     06B8  0870               	movf	___lwdiv@divisor,w
   973     06B9  02F2               	subwf	___lwdiv@dividend,f
   974     06BA  0871               	movf	___lwdiv@divisor+1,w
   975     06BB  1C03               	skipc
   976     06BC  03F3               	decf	___lwdiv@dividend+1,f
   977     06BD  02F3               	subwf	___lwdiv@dividend+1,f
   978     06BE                     l790:
   979     06BE  1474               	bsf	___lwdiv@quotient,0
   980     06BF                     l792:
   981     06BF  3001               	movlw	1
   982     06C0                     u195:
   983     06C0  1003               	clrc
   984     06C1  0CF1               	rrf	___lwdiv@divisor+1,f
   985     06C2  0CF0               	rrf	___lwdiv@divisor,f
   986     06C3  3EFF               	addlw	-1
   987     06C4  1D03               	skipz
   988     06C5  2EC0               	goto	u195
   989     06C6                     l794:
   990     06C6  3001               	movlw	1
   991     06C7  02F6               	subwf	___lwdiv@counter,f
   992     06C8  1D03               	btfss	3,2
   993     06C9  2ECB               	goto	u201
   994     06CA  2ECC               	goto	u200
   995     06CB                     u201:
   996     06CB  2EA7               	goto	l786
   997     06CC                     u200:
   998     06CC                     l796:
   999     06CC  0875               	movf	___lwdiv@quotient+1,w
  1000     06CD  00F1               	movwf	?___lwdiv+1
  1001     06CE  0874               	movf	___lwdiv@quotient,w
  1002     06CF  00F0               	movwf	?___lwdiv
  1003     06D0                     l426:
  1004     06D0  0008               	return
  1005     06D1                     __end_of___lwdiv:
  1006                           
  1007                           	psect	text5
  1008     0649                     __ptext5:	
  1009 ;; *************** function ___bmul *****************
  1010 ;; Defined at:
  1011 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  multiplier      1    wreg     unsigned char 
  1014 ;;  multiplicand    1    7[COMMON] unsigned char 
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  multiplier      1    9[COMMON] unsigned char 
  1017 ;;  product         1    8[COMMON] unsigned char 
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      unsigned char 
  1020 ;; Registers used:
  1021 ;;		wreg, status,2, status,0, btemp+1
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1027 ;;      Params:         1       0       0       0       0
  1028 ;;      Locals:         2       0       0       0       0
  1029 ;;      Temps:          0       0       0       0       0
  1030 ;;      Totals:         3       0       0       0       0
  1031 ;;Total ram usage:        3 bytes
  1032 ;; Hardware stack levels used: 1
  1033 ;; This function calls:
  1034 ;;		Nothing
  1035 ;; This function is called by:
  1036 ;;		_LCDOutput
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040     0649                     ___bmul:	
  1041                           ;psect for function ___bmul
  1042                           
  1043                           
  1044                           ;incstack = 0
  1045                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1046                           ;___bmul@multiplier stored from wreg
  1047     0649  00F9               	movwf	___bmul@multiplier
  1048     064A                     l758:
  1049     064A  01F8               	clrf	___bmul@product
  1050     064B                     l760:
  1051     064B  1C79               	btfss	___bmul@multiplier,0
  1052     064C  2E4E               	goto	u121
  1053     064D  2E4F               	goto	u120
  1054     064E                     u121:
  1055     064E  2E53               	goto	l764
  1056     064F                     u120:
  1057     064F                     l762:
  1058     064F  0877               	movf	___bmul@multiplicand,w
  1059     0650  00FF               	movwf	btemp+1
  1060     0651  087F               	movf	btemp+1,w
  1061     0652  07F8               	addwf	___bmul@product,f
  1062     0653                     l764:
  1063     0653  1003               	clrc
  1064     0654  0DF7               	rlf	___bmul@multiplicand,f
  1065     0655                     l766:
  1066     0655  1003               	clrc
  1067     0656  0CF9               	rrf	___bmul@multiplier,f
  1068     0657                     l768:
  1069     0657  0879               	movf	___bmul@multiplier,w
  1070     0658  1D03               	btfss	3,2
  1071     0659  2E5B               	goto	u131
  1072     065A  2E5C               	goto	u130
  1073     065B                     u131:
  1074     065B  2E4B               	goto	l760
  1075     065C                     u130:
  1076     065C                     l770:
  1077     065C  0878               	movf	___bmul@product,w
  1078     065D                     l172:
  1079     065D  0008               	return
  1080     065E                     __end_of___bmul:
  1081                           
  1082                           	psect	text6
  1083     065E                     __ptext6:	
  1084 ;; *************** function _LCD_Data *****************
  1085 ;; Defined at:
  1086 ;;		line 90 in file "disp_opr.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;  i               1    wreg     unsigned char 
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;  i               1    2[COMMON] unsigned char 
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		wreg, status,2, status,0, btemp+1
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1100 ;;      Params:         0       0       0       0       0
  1101 ;;      Locals:         1       0       0       0       0
  1102 ;;      Temps:          2       0       0       0       0
  1103 ;;      Totals:         3       0       0       0       0
  1104 ;;Total ram usage:        3 bytes
  1105 ;; Hardware stack levels used: 1
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_main
  1110 ;;		_LCDOutput
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114     065E                     _LCD_Data:	
  1115                           ;psect for function _LCD_Data
  1116                           
  1117                           
  1118                           ;incstack = 0
  1119                           ; Regs used in _LCD_Data: [wreg+status,2+status,0+btemp+1]
  1120                           ;LCD_Data@i stored from wreg
  1121     065E  00F2               	movwf	LCD_Data@i
  1122     065F                     l750:
  1123                           
  1124                           ;disp_opr.c: 91:     PORTC|=0x08;
  1125     065F  1283               	bcf	3,5	;RP0=0, select bank0
  1126     0660  1303               	bcf	3,6	;RP1=0, select bank0
  1127     0661  1587               	bsf	7,3	;volatile
  1128     0662                     l752:
  1129                           
  1130                           ;disp_opr.c: 92:     PORTD = i;
  1131     0662  0872               	movf	LCD_Data@i,w
  1132     0663  0088               	movwf	8	;volatile
  1133     0664                     l754:
  1134                           
  1135                           ;disp_opr.c: 93:     PORTC|=0x01;
  1136     0664  1407               	bsf	7,0	;volatile
  1137                           
  1138                           ;disp_opr.c: 94:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1139     0665  30C3               	movlw	195
  1140     0666  00F1               	movwf	??_LCD_Data+1
  1141     0667  30CD               	movlw	205
  1142     0668  00F0               	movwf	??_LCD_Data
  1143     0669                     u317:
  1144     0669  0BF0               	decfsz	??_LCD_Data,f
  1145     066A  2E69               	goto	u317
  1146     066B  0BF1               	decfsz	??_LCD_Data+1,f
  1147     066C  2E69               	goto	u317
  1148     066D                     l756:
  1149                           
  1150                           ;disp_opr.c: 95:     PORTC&=~0x01;
  1151     066D  30FE               	movlw	254
  1152     066E  00FF               	movwf	btemp+1
  1153     066F  087F               	movf	btemp+1,w
  1154     0670  1283               	bcf	3,5	;RP0=0, select bank0
  1155     0671  1303               	bcf	3,6	;RP1=0, select bank0
  1156     0672  0587               	andwf	7,f	;volatile
  1157     0673                     l60:
  1158     0673  0008               	return
  1159     0674                     __end_of_LCD_Data:
  1160     007E                     btemp	set	126	;btemp
  1161     007E                     wtemp0	set	126
  1162                           
  1163                           	psect	config
  1164                           
  1165                           ;Config register CONFIG @ 0x2007
  1166                           ;	Oscillator Selection bits
  1167                           ;	FOSC = EXTRC, RC oscillator
  1168                           ;	Watchdog Timer Enable bit
  1169                           ;	WDTE = OFF, WDT disabled
  1170                           ;	Power-up Timer Enable bit
  1171                           ;	PWRTE = OFF, PWRT disabled
  1172                           ;	Brown-out Reset Enable bit
  1173                           ;	BOREN = OFF, BOR disabled
  1174                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1175                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1176                           ;	Data EEPROM Memory Code Protection bit
  1177                           ;	CPD = OFF, Data EEPROM code protection off
  1178                           ;	Flash Program Memory Write Enable bits
  1179                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1180                           ;	In-Circuit Debugger Mode bit
  1181                           ;	DEBUG = 0x1, unprogrammed default
  1182                           ;	Flash Program Memory Code Protection bit
  1183                           ;	CP = OFF, Code protection off
  1184     2007                     	org	8199
  1185     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0      40
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LCDOutput
    _init->_LCD_Comm
    _LCDOutput->___bmul
    ___bmul->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1163
                          _LCDOutput
                           _LCD_Comm
                           _LCD_Data
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      22
                                              3 COMMON     2     2      0
                           _LCD_Comm
 ---------------------------------------------------------------------------------
 (2) _LCD_Comm                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCDOutput                                            4     2      2    1097
                                             10 COMMON     4     2      2
                           _LCD_Data
                             ___bmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     168
                                              7 COMMON     3     2      1
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_Data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDOutput
     _LCD_Data
     ___bmul
       ___lwdiv (ARG)
     ___lwdiv
   _LCD_Comm
   _LCD_Data
   _init
     _LCD_Comm

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      36       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      28       5       50.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      36      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Jan 08 17:04:14 2024

                      _k 0020                        _m 003E                        _n 0046  
                      _x 0047           ___bmul@product 0078                       l60 0673  
                     l45 07F2                       l54 078B                       l39 0725  
                     l57 068C                       fsr 0004                      l172 065D  
                    l426 06D0                      l800 078C                      l810 07AC  
                    l802 0790                      l820 07CE                      l812 07B2  
                    l804 0796                      l750 065F                      l830 0729  
                    l742 0675                      l822 07D6                      l814 07BA  
                    l806 079E                      l752 0662                      l760 064B  
                    l840 0755                      l832 072B                      l744 067B  
                    l824 07DC                      l816 07C0                      l808 07A4  
                    l754 0664                      l770 065C                      l762 064F  
                    l850 077F                      l834 0732                      l842 0768  
                    l746 067D                      l826 07E4                      l818 07C8  
                    l756 066D                      l764 0653                      l780 0698  
                    l844 076E                      l836 074B                      l748 067E  
                    l828 07EA                      l860 06DC                      l766 0655  
                    l758 064A                      l790 06BE                      l782 069F  
                    l774 068D                      l854 0786                      l846 0773  
                    l838 0751                      l870 070A                      l862 06E6  
                    l768 0657                      l792 06BF                      l784 06A3  
                    l776 068F                      l848 0776                      l872 070A  
                    l864 06EF                      l856 06D1                      l794 06C6  
                    l786 06A7                      l778 0695                      l874 0716  
                    l866 06FE                      l858 06D6                      l788 06B8  
                    l796 06CC                      l876 071C                      l868 0704  
                    u120 064F                      u200 06CC                      u121 064E  
                    u201 06CB                      u130 065C                      u210 076E  
                    u131 065B                      u211 076D                      u140 0695  
                    u220 078B                      u141 0694                      u221 078A  
                    u160 06A7                      u161 06A6                      u155 0699  
                    u307 0682                      u180 06B8                      u317 0669  
                    u181 06B7                      u237 079A                      u175 06A8  
                    u247 07A8                      u185 06B4                      u257 07B6  
                    u195 06C0                      u267 07C4                      u277 07D2  
                    u287 07E0                      u297 07EE                      _sub 0040  
                    fsr0 0004                      indf 0000                     _main 06D1  
                   _init 078C                     _num1 0044                     _num2 0042  
                   btemp 007E                     start 0000        ___bmul@multiplier 0079  
       __end_of_LCD_Data 0674         __end_of_LCD_Comm 068D                    ?_main 0070  
                  ?_init 0070          __end_of___lwdiv 06D1                    _PORTC 0007  
                  _PORTD 0008                    _TRISC 0087                    _TRISD 0088  
                  status 0003                    wtemp0 007E          __initialization 07F3  
           __end_of_main 0729             __end_of_init 07F3                   ??_main 007E  
                 ??_init 0073        __end_of_LCDOutput 078C                   ___bmul 0649  
              ??___lwdiv 0074                ?_LCD_Data 0070  __end_of__initialization 07FC  
              ?_LCD_Comm 0070                LCD_Data@i 0072                LCD_Comm@i 0072  
    ___bmul@multiplicand 0077           __pcstackCOMMON 0070               __pbssBANK0 0020  
             ??_LCD_Data 0070               ??_LCD_Comm 0070               __pmaintext 06D1  
                ?___bmul 0077                  ___lwdiv 068D                  __ptext1 078C  
                __ptext2 0674                  __ptext3 0729                  __ptext4 068D  
                __ptext5 0649                  __ptext6 065E                  clrloop0 0642  
              _LCDOutput 0729     end_of_initialization 07FC               ?_LCDOutput 007A  
         __end_of___bmul 065E               LCDOutput@i 007A               LCDOutput@j 007D  
             LCDOutput@s 007C      start_initialization 07F3                 ??___bmul 0078  
              ___latbits 0002              ??_LCDOutput 007C         ___lwdiv@dividend 0072  
               ?___lwdiv 0070         ___lwdiv@quotient 0074                 _LCD_Data 065E  
               _LCD_Comm 0674                clear_ram0 0641          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0076  
