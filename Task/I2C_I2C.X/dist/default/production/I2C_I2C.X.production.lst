

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Jun 01 21:24:29 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 22/03/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173                           
   174                           	psect	idataBANK0
   175     0660                     __pidataBANK0:
   176                           
   177                           ;initializer for _arr
   178     0660  34FC               	retlw	252
   179     0661  3460               	retlw	96
   180     0662  34DA               	retlw	218
   181     0663  34F2               	retlw	242
   182     0664  3466               	retlw	102
   183     0665  34B6               	retlw	182
   184     0666  34BE               	retlw	190
   185     0667  34E0               	retlw	224
   186     0668  34FE               	retlw	254
   187     0669  34F6               	retlw	246
   188                           
   189                           ;initializer for _i
   190     066A  34FF               	retlw	255
   191     000C                     _PIR1	set	12
   192     0013                     _SSPBUF	set	19
   193     0014                     _SSPCON	set	20
   194     0008                     _PORTD	set	8
   195     0006                     _PORTB	set	6
   196     0041                     _RD1	set	65
   197     0040                     _RD0	set	64
   198     0093                     _SSPADD	set	147
   199     0091                     _SSPCON2	set	145
   200     0094                     _SSPSTAT	set	148
   201     0081                     _OPTION_REG	set	129
   202     0088                     _TRISD	set	136
   203     0087                     _TRISC	set	135
   204     0086                     _TRISB	set	134
   205                           
   206                           	psect	cinit
   207     07EE                     start_initialization:	
   208                           ; #config settings
   209                           
   210     07EE                     __initialization:
   211                           
   212                           ; Initialize objects allocated to BANK0
   213     07EE  1383               	bcf	3,7	;select IRP bank0
   214     07EF  302B               	movlw	low (__pdataBANK0+11)
   215     07F0  00FD               	movwf	btemp+-1
   216     07F1  3006               	movlw	high __pidataBANK0
   217     07F2  00FE               	movwf	btemp
   218     07F3  3060               	movlw	low __pidataBANK0
   219     07F4  00FF               	movwf	btemp+1
   220     07F5  3020               	movlw	low __pdataBANK0
   221     07F6  0084               	movwf	4
   222     07F7  120A  118A  267C  120A  118A  	fcall	init_ram0
   223     07FC                     end_of_initialization:	
   224                           ;End of C runtime variable initialization code
   225                           
   226     07FC                     __end_of__initialization:
   227     07FC  0183               	clrf	3
   228     07FD  120A  118A  2F3F   	ljmp	_main	;jump to C main() function
   229                           
   230                           	psect	dataBANK0
   231     0020                     __pdataBANK0:
   232     0020                     _arr:
   233     0020                     	ds	10
   234     002A                     _i:
   235     002A                     	ds	1
   236                           
   237                           	psect	inittext
   238     0678                     init_fetch0:	
   239                           ;	Called with low address in FSR and high address in W
   240                           
   241     0678  087E               	movf	btemp,w
   242     0679  008A               	movwf	10
   243     067A  087F               	movf	btemp+1,w
   244     067B  0082               	movwf	2
   245     067C                     init_ram0:	
   246                           ;Called with:
   247                           ;	high address of idata address in btemp 
   248                           ;	low address of idata address in btemp+1 
   249                           ;	low address of data in FSR
   250                           ;	high address + 1 of data in btemp-1
   251                           
   252     067C  120A  118A  2678  120A  118A  	fcall	init_fetch0
   253     0681  0080               	movwf	0
   254     0682  0A84               	incf	4,f
   255     0683  0804               	movf	4,w
   256     0684  067D               	xorwf	btemp+-1,w
   257     0685  1903               	btfsc	3,2
   258     0686  3400               	retlw	0
   259     0687  0AFF               	incf	btemp+1,f
   260     0688  1903               	btfsc	3,2
   261     0689  0AFE               	incf	btemp,f
   262     068A  2E7C               	goto	init_ram0
   263                           
   264                           	psect	cstackCOMMON
   265     0070                     __pcstackCOMMON:
   266     0070                     ?_i2c_start:
   267     0070                     ??_i2c_start:	
   268                           ; 1 bytes @ 0x0
   269                           
   270     0070                     ?_master_byte_write:	
   271                           ; 1 bytes @ 0x0
   272                           
   273     0070                     ??_master_byte_write:	
   274                           ; 1 bytes @ 0x0
   275                           
   276     0070                     ?_i2c_stop:	
   277                           ; 1 bytes @ 0x0
   278                           
   279     0070                     ??_i2c_stop:	
   280                           ; 1 bytes @ 0x0
   281                           
   282     0070                     ?_main:	
   283                           ; 1 bytes @ 0x0
   284                           
   285     0070                     ?_master_wait:	
   286                           ; 1 bytes @ 0x0
   287                           
   288     0070                     ??_master_wait:	
   289                           ; 1 bytes @ 0x0
   290                           
   291     0070                     ?___lldiv:	
   292                           ; 1 bytes @ 0x0
   293                           
   294     0070                     master_byte_write@write:	
   295                           ; 4 bytes @ 0x0
   296                           
   297     0070                     ___lldiv@divisor:	
   298                           ; 1 bytes @ 0x0
   299                           
   300                           
   301                           ; 4 bytes @ 0x0
   302     0070                     	ds	4
   303     0074                     ___lldiv@dividend:
   304                           
   305                           ; 4 bytes @ 0x4
   306     0074                     	ds	4
   307     0078                     ??___lldiv:
   308                           
   309                           ; 1 bytes @ 0x8
   310     0078                     	ds	1
   311     0079                     ___lldiv@quotient:
   312                           
   313                           ; 4 bytes @ 0x9
   314     0079                     	ds	4
   315     007D                     ___lldiv@counter:
   316                           
   317                           ; 1 bytes @ 0xD
   318     007D                     	ds	1
   319     007E                     ??_main:
   320                           
   321                           	psect	cstackBANK0
   322     002B                     __pcstackBANK0:	
   323                           ; 1 bytes @ 0xE
   324                           
   325     002B                     ?_i2c_master_init:
   326     002B                     i2c_master_init@baud:	
   327                           ; 1 bytes @ 0x0
   328                           
   329                           
   330                           ; 4 bytes @ 0x0
   331     002B                     	ds	4
   332     002F                     ??_i2c_master_init:
   333                           
   334                           ; 1 bytes @ 0x4
   335     002F                     	ds	4
   336                           
   337                           	psect	maintext
   338     073F                     __pmaintext:	
   339 ;;
   340 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   341 ;;
   342 ;; *************** function _main *****************
   343 ;; Defined at:
   344 ;;		line 15 in file "I2C_master.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;		None
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   353 ;; Tracked objects:
   354 ;;		On entry : B00/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   358 ;;      Params:         0       0       0       0       0
   359 ;;      Locals:         0       0       0       0       0
   360 ;;      Temps:          0       0       0       0       0
   361 ;;      Totals:         0       0       0       0       0
   362 ;;Total ram usage:        0 bytes
   363 ;; Hardware stack levels required when called: 2
   364 ;; This function calls:
   365 ;;		_i2c_master_init
   366 ;;		_i2c_start
   367 ;;		_i2c_stop
   368 ;;		_master_byte_write
   369 ;; This function is called by:
   370 ;;		Startup code after reset
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374     073F                     _main:	
   375                           ;psect for function _main
   376                           
   377     073F                     l850:	
   378                           ;incstack = 0
   379                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   380                           
   381                           
   382                           ;I2C_master.c: 16:     i2c_master_init(100000);
   383     073F  3000               	movlw	0
   384     0740  1283               	bcf	3,5	;RP0=0, select bank0
   385     0741  1303               	bcf	3,6	;RP1=0, select bank0
   386     0742  00AE               	movwf	i2c_master_init@baud+3
   387     0743  3001               	movlw	1
   388     0744  00AD               	movwf	i2c_master_init@baud+2
   389     0745  3086               	movlw	134
   390     0746  00AC               	movwf	i2c_master_init@baud+1
   391     0747  30A0               	movlw	160
   392     0748  00AB               	movwf	i2c_master_init@baud
   393     0749  120A  118A  26A1  120A  118A  	fcall	_i2c_master_init
   394     074E                     l852:
   395                           
   396                           ;I2C_master.c: 17:     TRISB = 0xFF;
   397     074E  30FF               	movlw	255
   398     074F  1683               	bsf	3,5	;RP0=1, select bank1
   399     0750  1303               	bcf	3,6	;RP1=0, select bank1
   400     0751  0086               	movwf	6	;volatile
   401     0752                     l854:
   402                           
   403                           ;I2C_master.c: 18:     TRISC = 0x18;
   404     0752  3018               	movlw	24
   405     0753  0087               	movwf	7	;volatile
   406     0754                     l856:
   407                           
   408                           ;I2C_master.c: 19:     TRISD = 0x00;
   409     0754  0188               	clrf	8	;volatile
   410     0755                     l858:
   411                           
   412                           ;I2C_master.c: 20:     PORTB = 0xFF;
   413     0755  30FF               	movlw	255
   414     0756  1283               	bcf	3,5	;RP0=0, select bank0
   415     0757  1303               	bcf	3,6	;RP1=0, select bank0
   416     0758  0086               	movwf	6	;volatile
   417     0759                     l860:
   418                           
   419                           ;I2C_master.c: 21:     PORTD = 0x00;
   420     0759  0188               	clrf	8	;volatile
   421     075A                     l862:
   422                           
   423                           ;I2C_master.c: 22:     OPTION_REG &= 0x7F;
   424     075A  307F               	movlw	127
   425     075B  00FF               	movwf	btemp+1
   426     075C  087F               	movf	btemp+1,w
   427     075D  1683               	bsf	3,5	;RP0=1, select bank1
   428     075E  1303               	bcf	3,6	;RP1=0, select bank1
   429     075F  0581               	andwf	1,f	;volatile
   430     0760                     l864:
   431                           
   432                           ;I2C_master.c: 23:     i2c_start();
   433     0760  120A  118A  264E  120A  118A  	fcall	_i2c_start
   434     0765                     l866:
   435                           
   436                           ;I2C_master.c: 24:     master_byte_write(0x70);
   437     0765  3070               	movlw	112
   438     0766  120A  118A  268B  120A  118A  	fcall	_master_byte_write
   439     076B                     l868:
   440                           
   441                           ;I2C_master.c: 25:     master_byte_write(0x00);
   442     076B  3000               	movlw	0
   443     076C  120A  118A  268B  120A  118A  	fcall	_master_byte_write
   444     0771                     l870:
   445                           
   446                           ;I2C_master.c: 26:     i2c_stop();
   447     0771  120A  118A  2657  120A  118A  	fcall	_i2c_stop
   448     0776                     l872:
   449                           
   450                           ;I2C_master.c: 28:         if(PORTB == 0xFE) {
   451     0776  30FE               	movlw	254
   452     0777  1283               	bcf	3,5	;RP0=0, select bank0
   453     0778  1303               	bcf	3,6	;RP1=0, select bank0
   454     0779  0606               	xorwf	6,w	;volatile
   455     077A  1D03               	btfss	3,2
   456     077B  2F7D               	goto	u311
   457     077C  2F7E               	goto	u310
   458     077D                     u311:
   459     077D  2FB5               	goto	l894
   460     077E                     u310:
   461     077E                     l874:
   462                           
   463                           ;I2C_master.c: 29:             i2c_start();
   464     077E  120A  118A  264E  120A  118A  	fcall	_i2c_start
   465     0783                     l876:
   466                           
   467                           ;I2C_master.c: 30:             master_byte_write(0x70);
   468     0783  3070               	movlw	112
   469     0784  120A  118A  268B  120A  118A  	fcall	_master_byte_write
   470     0789                     l878:
   471                           
   472                           ;I2C_master.c: 31:             master_byte_write(arr[++i]);
   473     0789  3001               	movlw	1
   474     078A  00FF               	movwf	btemp+1
   475     078B  087F               	movf	btemp+1,w
   476     078C  1283               	bcf	3,5	;RP0=0, select bank0
   477     078D  1303               	bcf	3,6	;RP1=0, select bank0
   478     078E  07AA               	addwf	_i,f
   479     078F  082A               	movf	_i,w
   480     0790  3E20               	addlw	(low (_arr| 0))& (0+255)
   481     0791  0084               	movwf	4
   482     0792  1383               	bcf	3,7	;select IRP bank0
   483     0793  0800               	movf	0,w
   484     0794  120A  118A  268B  120A  118A  	fcall	_master_byte_write
   485     0799                     l880:
   486                           
   487                           ;I2C_master.c: 32:             i2c_stop();
   488     0799  120A  118A  2657  120A  118A  	fcall	_i2c_stop
   489     079E                     l882:
   490                           
   491                           ;I2C_master.c: 33:             RD0 = 1;
   492     079E  1283               	bcf	3,5	;RP0=0, select bank0
   493     079F  1303               	bcf	3,6	;RP1=0, select bank0
   494     07A0  1408               	bsf	8,0	;volatile
   495     07A1                     l884:
   496                           
   497                           ;I2C_master.c: 34:             RD1 = 0;
   498     07A1  1088               	bcf	8,1	;volatile
   499     07A2                     l886:
   500                           
   501                           ;I2C_master.c: 35:             if (i >= 9)
   502     07A2  3009               	movlw	9
   503     07A3  022A               	subwf	_i,w
   504     07A4  1C03               	skipc
   505     07A5  2FA7               	goto	u321
   506     07A6  2FA8               	goto	u320
   507     07A7                     u321:
   508     07A7  2FAE               	goto	l892
   509     07A8                     u320:
   510     07A8                     l890:
   511     07A8  30FD               	movlw	253
   512     07A9  0606               	xorwf	6,w	;volatile
   513     07AA  1D03               	btfss	3,2
   514     07AB  2FAD               	goto	u331
   515     07AC  2FAE               	goto	u330
   516     07AD                     u331:
   517     07AD  2FA8               	goto	l890
   518     07AE                     u330:
   519     07AE                     l892:
   520     07AE  30FE               	movlw	254
   521     07AF  0606               	xorwf	6,w	;volatile
   522     07B0  1903               	btfsc	3,2
   523     07B1  2FB3               	goto	u341
   524     07B2  2FB4               	goto	u340
   525     07B3                     u341:
   526     07B3  2FAE               	goto	l892
   527     07B4                     u340:
   528     07B4  2F76               	goto	l872
   529     07B5                     l894:
   530     07B5  30FD               	movlw	253
   531     07B6  0606               	xorwf	6,w	;volatile
   532     07B7  1D03               	btfss	3,2
   533     07B8  2FBA               	goto	u351
   534     07B9  2FBB               	goto	u350
   535     07BA                     u351:
   536     07BA  2F76               	goto	l872
   537     07BB                     u350:
   538     07BB                     l896:
   539                           
   540                           ;I2C_master.c: 40:             if(i<=0)
   541     07BB  082A               	movf	_i,w
   542     07BC  1D03               	btfss	3,2
   543     07BD  2FBF               	goto	u361
   544     07BE  2FC0               	goto	u360
   545     07BF                     u361:
   546     07BF  2FC2               	goto	l900
   547     07C0                     u360:
   548     07C0                     l898:
   549                           
   550                           ;I2C_master.c: 41:                 i=1;
   551     07C0  01AA               	clrf	_i
   552     07C1  0AAA               	incf	_i,f
   553     07C2                     l900:
   554                           
   555                           ;I2C_master.c: 42:             i2c_start();
   556     07C2  120A  118A  264E  120A  118A  	fcall	_i2c_start
   557     07C7                     l902:
   558                           
   559                           ;I2C_master.c: 43:             master_byte_write(0x70);
   560     07C7  3070               	movlw	112
   561     07C8  120A  118A  268B  120A  118A  	fcall	_master_byte_write
   562     07CD                     l904:
   563                           
   564                           ;I2C_master.c: 44:             master_byte_write(arr[--i]);
   565     07CD  3001               	movlw	1
   566     07CE  1283               	bcf	3,5	;RP0=0, select bank0
   567     07CF  1303               	bcf	3,6	;RP1=0, select bank0
   568     07D0  02AA               	subwf	_i,f
   569     07D1  082A               	movf	_i,w
   570     07D2  3E20               	addlw	(low (_arr| 0))& (0+255)
   571     07D3  0084               	movwf	4
   572     07D4  1383               	bcf	3,7	;select IRP bank0
   573     07D5  0800               	movf	0,w
   574     07D6  120A  118A  268B  120A  118A  	fcall	_master_byte_write
   575     07DB                     l906:
   576                           
   577                           ;I2C_master.c: 45:             i2c_stop();
   578     07DB  120A  118A  2657  120A  118A  	fcall	_i2c_stop
   579     07E0                     l908:
   580                           
   581                           ;I2C_master.c: 46:             RD0 = 0;
   582     07E0  1283               	bcf	3,5	;RP0=0, select bank0
   583     07E1  1303               	bcf	3,6	;RP1=0, select bank0
   584     07E2  1008               	bcf	8,0	;volatile
   585     07E3                     l910:
   586                           
   587                           ;I2C_master.c: 47:             RD1 = 1;
   588     07E3  1488               	bsf	8,1	;volatile
   589     07E4                     l912:	
   590                           ;I2C_master.c: 48:             while(PORTB == 0xFD);
   591                           
   592     07E4  30FD               	movlw	253
   593     07E5  0606               	xorwf	6,w	;volatile
   594     07E6  1903               	btfsc	3,2
   595     07E7  2FE9               	goto	u371
   596     07E8  2FEA               	goto	u370
   597     07E9                     u371:
   598     07E9  2FE4               	goto	l912
   599     07EA                     u370:
   600     07EA  2F76               	goto	l872
   601     07EB  120A  118A  2800   	ljmp	start
   602     07EE                     __end_of_main:
   603                           
   604                           	psect	text1
   605     068B                     __ptext1:	
   606 ;; *************** function _master_byte_write *****************
   607 ;; Defined at:
   608 ;;		line 84 in file "I2C_master.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;  write           1    wreg     unsigned char 
   611 ;; Auto vars:     Size  Location     Type
   612 ;;  write           1    0[COMMON] unsigned char 
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      unsigned char 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         0       0       0       0       0
   623 ;;      Locals:         1       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0
   625 ;;      Totals:         1       0       0       0       0
   626 ;;Total ram usage:        1 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; Hardware stack levels required when called: 1
   629 ;; This function calls:
   630 ;;		_master_wait
   631 ;; This function is called by:
   632 ;;		_main
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636     068B                     _master_byte_write:	
   637                           ;psect for function _master_byte_write
   638                           
   639                           
   640                           ;incstack = 0
   641                           ; Regs used in _master_byte_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   642                           ;master_byte_write@write stored from wreg
   643     068B  00F0               	movwf	master_byte_write@write
   644     068C                     l836:
   645                           
   646                           ;I2C_master.c: 85:     master_wait();
   647     068C  120A  118A  266B  120A  118A  	fcall	_master_wait
   648     0691                     l838:
   649                           
   650                           ;I2C_master.c: 86:     SSPBUF = write;
   651     0691  0870               	movf	master_byte_write@write,w
   652     0692  1283               	bcf	3,5	;RP0=0, select bank0
   653     0693  1303               	bcf	3,6	;RP1=0, select bank0
   654     0694  0093               	movwf	19	;volatile
   655     0695                     l89:	
   656                           ;I2C_master.c: 87:     while(!(PIR1&0x08));
   657                           
   658     0695  1D8C               	btfss	12,3	;volatile
   659     0696  2E98               	goto	u301
   660     0697  2E99               	goto	u300
   661     0698                     u301:
   662     0698  2E95               	goto	l89
   663     0699                     u300:
   664     0699                     l840:
   665                           
   666                           ;I2C_master.c: 88:     PIR1&=~0x08;
   667     0699  30F7               	movlw	247
   668     069A  00FF               	movwf	btemp+1
   669     069B  087F               	movf	btemp+1,w
   670     069C  058C               	andwf	12,f	;volatile
   671     069D                     l842:
   672                           
   673                           ;I2C_master.c: 89:     return (SSPCON2&0x40);;	Return value of _master_byte_write is nev
      +                          er used
   674     069D  1683               	bsf	3,5	;RP0=1, select bank1
   675     069E  1303               	bcf	3,6	;RP1=0, select bank1
   676     069F  0811               	movf	17,w	;volatile
   677     06A0                     l92:
   678     06A0  0008               	return
   679     06A1                     __end_of_master_byte_write:
   680                           
   681                           	psect	text2
   682     0657                     __ptext2:	
   683 ;; *************** function _i2c_stop *****************
   684 ;; Defined at:
   685 ;;		line 70 in file "I2C_master.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;		None
   688 ;; Auto vars:     Size  Location     Type
   689 ;;		None
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, status,2, status,0, pclath, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   699 ;;      Params:         0       0       0       0       0
   700 ;;      Locals:         0       0       0       0       0
   701 ;;      Temps:          0       0       0       0       0
   702 ;;      Totals:         0       0       0       0       0
   703 ;;Total ram usage:        0 bytes
   704 ;; Hardware stack levels used: 1
   705 ;; Hardware stack levels required when called: 1
   706 ;; This function calls:
   707 ;;		_master_wait
   708 ;; This function is called by:
   709 ;;		_main
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713     0657                     _i2c_stop:	
   714                           ;psect for function _i2c_stop
   715                           
   716     0657                     l846:	
   717                           ;incstack = 0
   718                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
   719                           
   720                           
   721                           ;I2C_master.c: 71:     master_wait();
   722     0657  120A  118A  266B  120A  118A  	fcall	_master_wait
   723     065C                     l848:
   724                           
   725                           ;I2C_master.c: 72:     SSPCON2|=0x04;
   726     065C  1683               	bsf	3,5	;RP0=1, select bank1
   727     065D  1303               	bcf	3,6	;RP1=0, select bank1
   728     065E  1511               	bsf	17,2	;volatile
   729     065F                     l80:
   730     065F  0008               	return
   731     0660                     __end_of_i2c_stop:
   732                           
   733                           	psect	text3
   734     064E                     __ptext3:	
   735 ;; *************** function _i2c_start *****************
   736 ;; Defined at:
   737 ;;		line 62 in file "I2C_master.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, status,2, status,0, pclath, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   751 ;;      Params:         0       0       0       0       0
   752 ;;      Locals:         0       0       0       0       0
   753 ;;      Temps:          0       0       0       0       0
   754 ;;      Totals:         0       0       0       0       0
   755 ;;Total ram usage:        0 bytes
   756 ;; Hardware stack levels used: 1
   757 ;; Hardware stack levels required when called: 1
   758 ;; This function calls:
   759 ;;		_master_wait
   760 ;; This function is called by:
   761 ;;		_main
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765     064E                     _i2c_start:	
   766                           ;psect for function _i2c_start
   767                           
   768     064E                     l832:	
   769                           ;incstack = 0
   770                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
   771                           
   772                           
   773                           ;I2C_master.c: 63:     master_wait();
   774     064E  120A  118A  266B  120A  118A  	fcall	_master_wait
   775     0653                     l834:
   776                           
   777                           ;I2C_master.c: 64:     SSPCON2|=0x01;
   778     0653  1683               	bsf	3,5	;RP0=1, select bank1
   779     0654  1303               	bcf	3,6	;RP1=0, select bank1
   780     0655  1411               	bsf	17,0	;volatile
   781     0656                     l74:
   782     0656  0008               	return
   783     0657                     __end_of_i2c_start:
   784                           
   785                           	psect	text4
   786     066B                     __ptext4:	
   787 ;; *************** function _master_wait *****************
   788 ;; Defined at:
   789 ;;		line 52 in file "I2C_master.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, status,2
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   803 ;;      Params:         0       0       0       0       0
   804 ;;      Locals:         0       0       0       0       0
   805 ;;      Temps:          0       0       0       0       0
   806 ;;      Totals:         0       0       0       0       0
   807 ;;Total ram usage:        0 bytes
   808 ;; Hardware stack levels used: 1
   809 ;; This function calls:
   810 ;;		Nothing
   811 ;; This function is called by:
   812 ;;		_i2c_start
   813 ;;		_i2c_stop
   814 ;;		_master_byte_write
   815 ;;		_i2c_repeated_start
   816 ;;		_i2c_ACK
   817 ;;		_i2c_NACK
   818 ;;		_master_byte_read
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822     066B                     _master_wait:	
   823                           ;psect for function _master_wait
   824                           
   825     066B                     l792:	
   826                           ;incstack = 0
   827                           ; Regs used in _master_wait: [wreg+status,2]
   828                           
   829     066B                     l65:	
   830                           ;I2C_master.c: 53:     while(SSPSTAT&0x04 || SSPCON2&0x1F);
   831                           
   832     066B  1683               	bsf	3,5	;RP0=1, select bank1
   833     066C  1303               	bcf	3,6	;RP1=0, select bank1
   834     066D  1914               	btfsc	20,2	;volatile
   835     066E  2E70               	goto	u201
   836     066F  2E71               	goto	u200
   837     0670                     u201:
   838     0670  2E6B               	goto	l65
   839     0671                     u200:
   840     0671                     l794:
   841     0671  0811               	movf	17,w	;volatile
   842     0672  391F               	andlw	31
   843     0673  1D03               	btfss	3,2
   844     0674  2E76               	goto	u211
   845     0675  2E77               	goto	u210
   846     0676                     u211:
   847     0676  2E6B               	goto	l65
   848     0677                     u210:
   849     0677                     l68:
   850     0677  0008               	return
   851     0678                     __end_of_master_wait:
   852                           
   853                           	psect	text5
   854     06A1                     __ptext5:	
   855 ;; *************** function _i2c_master_init *****************
   856 ;; Defined at:
   857 ;;		line 55 in file "I2C_master.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;  baud            4    0[BANK0 ] unsigned long 
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   871 ;;      Params:         0       4       0       0       0
   872 ;;      Locals:         0       0       0       0       0
   873 ;;      Temps:          0       4       0       0       0
   874 ;;      Totals:         0       8       0       0       0
   875 ;;Total ram usage:        8 bytes
   876 ;; Hardware stack levels used: 1
   877 ;; Hardware stack levels required when called: 1
   878 ;; This function calls:
   879 ;;		___lldiv
   880 ;; This function is called by:
   881 ;;		_main
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885     06A1                     _i2c_master_init:	
   886                           ;psect for function _i2c_master_init
   887                           
   888     06A1                     l822:	
   889                           ;incstack = 0
   890                           ; Regs used in _i2c_master_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   891                           
   892                           
   893                           ;I2C_master.c: 56:     SSPCON = 0x28;
   894     06A1  3028               	movlw	40
   895     06A2  1283               	bcf	3,5	;RP0=0, select bank0
   896     06A3  1303               	bcf	3,6	;RP1=0, select bank0
   897     06A4  0094               	movwf	20	;volatile
   898     06A5                     l824:
   899                           
   900                           ;I2C_master.c: 57:     SSPCON2 = 0;
   901     06A5  1683               	bsf	3,5	;RP0=1, select bank1
   902     06A6  1303               	bcf	3,6	;RP1=0, select bank1
   903     06A7  0191               	clrf	17	;volatile
   904     06A8                     l826:
   905                           
   906                           ;I2C_master.c: 58:     SSPADD = (16000000/(4*baud))-1;
   907     06A8  1283               	bcf	3,5	;RP0=0, select bank0
   908     06A9  1303               	bcf	3,6	;RP1=0, select bank0
   909     06AA  082B               	movf	i2c_master_init@baud,w
   910     06AB  00AF               	movwf	??_i2c_master_init
   911     06AC  082C               	movf	i2c_master_init@baud+1,w
   912     06AD  00B0               	movwf	??_i2c_master_init+1
   913     06AE  082D               	movf	i2c_master_init@baud+2,w
   914     06AF  00B1               	movwf	??_i2c_master_init+2
   915     06B0  082E               	movf	i2c_master_init@baud+3,w
   916     06B1  00B2               	movwf	??_i2c_master_init+3
   917     06B2  3002               	movlw	2
   918     06B3                     u295:
   919     06B3  1003               	clrc
   920     06B4  0DAF               	rlf	??_i2c_master_init,f
   921     06B5  0DB0               	rlf	??_i2c_master_init+1,f
   922     06B6  0DB1               	rlf	??_i2c_master_init+2,f
   923     06B7  0DB2               	rlf	??_i2c_master_init+3,f
   924     06B8                     u290:
   925     06B8  3EFF               	addlw	-1
   926     06B9  1D03               	skipz
   927     06BA  2EB3               	goto	u295
   928     06BB  0832               	movf	??_i2c_master_init+3,w
   929     06BC  00F3               	movwf	___lldiv@divisor+3
   930     06BD  0831               	movf	??_i2c_master_init+2,w
   931     06BE  00F2               	movwf	___lldiv@divisor+2
   932     06BF  0830               	movf	??_i2c_master_init+1,w
   933     06C0  00F1               	movwf	___lldiv@divisor+1
   934     06C1  082F               	movf	??_i2c_master_init,w
   935     06C2  00F0               	movwf	___lldiv@divisor
   936     06C3  3000               	movlw	0
   937     06C4  00F7               	movwf	___lldiv@dividend+3
   938     06C5  30F4               	movlw	244
   939     06C6  00F6               	movwf	___lldiv@dividend+2
   940     06C7  3024               	movlw	36
   941     06C8  00F5               	movwf	___lldiv@dividend+1
   942     06C9  3000               	movlw	0
   943     06CA  00F4               	movwf	___lldiv@dividend
   944     06CB  120A  118A  26D9  120A  118A  	fcall	___lldiv
   945     06D0  0870               	movf	?___lldiv,w
   946     06D1  3EFF               	addlw	255
   947     06D2  1683               	bsf	3,5	;RP0=1, select bank1
   948     06D3  1303               	bcf	3,6	;RP1=0, select bank1
   949     06D4  0093               	movwf	19	;volatile
   950     06D5                     l828:
   951                           
   952                           ;I2C_master.c: 59:     SSPSTAT=0;
   953     06D5  0194               	clrf	20	;volatile
   954     06D6                     l830:
   955                           
   956                           ;I2C_master.c: 60:     TRISC = 0x18;
   957     06D6  3018               	movlw	24
   958     06D7  0087               	movwf	7	;volatile
   959     06D8                     l71:
   960     06D8  0008               	return
   961     06D9                     __end_of_i2c_master_init:
   962                           
   963                           	psect	text6
   964     06D9                     __ptext6:	
   965 ;; *************** function ___lldiv *****************
   966 ;; Defined at:
   967 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;  divisor         4    0[COMMON] unsigned long 
   970 ;;  dividend        4    4[COMMON] unsigned long 
   971 ;; Auto vars:     Size  Location     Type
   972 ;;  quotient        4    9[COMMON] unsigned long 
   973 ;;  counter         1   13[COMMON] unsigned char 
   974 ;; Return value:  Size  Location     Type
   975 ;;                  4    0[COMMON] unsigned long 
   976 ;; Registers used:
   977 ;;		wreg, status,2, status,0, btemp+1
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   983 ;;      Params:         8       0       0       0       0
   984 ;;      Locals:         5       0       0       0       0
   985 ;;      Temps:          1       0       0       0       0
   986 ;;      Totals:        14       0       0       0       0
   987 ;;Total ram usage:       14 bytes
   988 ;; Hardware stack levels used: 1
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_i2c_master_init
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996     06D9                     ___lldiv:	
   997                           ;psect for function ___lldiv
   998                           
   999     06D9                     l796:	
  1000                           ;incstack = 0
  1001                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1002                           
  1003     06D9  3000               	movlw	0
  1004     06DA  00FC               	movwf	___lldiv@quotient+3
  1005     06DB  3000               	movlw	0
  1006     06DC  00FB               	movwf	___lldiv@quotient+2
  1007     06DD  3000               	movlw	0
  1008     06DE  00FA               	movwf	___lldiv@quotient+1
  1009     06DF  3000               	movlw	0
  1010     06E0  00F9               	movwf	___lldiv@quotient
  1011     06E1  0873               	movf	___lldiv@divisor+3,w
  1012     06E2  0472               	iorwf	___lldiv@divisor+2,w
  1013     06E3  0471               	iorwf	___lldiv@divisor+1,w
  1014     06E4  0470               	iorwf	___lldiv@divisor,w
  1015     06E5  1903               	skipnz
  1016     06E6  2EE8               	goto	u221
  1017     06E7  2EE9               	goto	u220
  1018     06E8                     u221:
  1019     06E8  2F36               	goto	l818
  1020     06E9                     u220:
  1021     06E9                     l798:
  1022     06E9  01FD               	clrf	___lldiv@counter
  1023     06EA  0AFD               	incf	___lldiv@counter,f
  1024     06EB  2EF9               	goto	l804
  1025     06EC                     l800:
  1026     06EC  3001               	movlw	1
  1027     06ED  00F8               	movwf	??___lldiv
  1028     06EE                     u235:
  1029     06EE  1003               	clrc
  1030     06EF  0DF0               	rlf	___lldiv@divisor,f
  1031     06F0  0DF1               	rlf	___lldiv@divisor+1,f
  1032     06F1  0DF2               	rlf	___lldiv@divisor+2,f
  1033     06F2  0DF3               	rlf	___lldiv@divisor+3,f
  1034     06F3  0BF8               	decfsz	??___lldiv,f
  1035     06F4  2EEE               	goto	u235
  1036     06F5                     l802:
  1037     06F5  3001               	movlw	1
  1038     06F6  00FF               	movwf	btemp+1
  1039     06F7  087F               	movf	btemp+1,w
  1040     06F8  07FD               	addwf	___lldiv@counter,f
  1041     06F9                     l804:
  1042     06F9  1FF3               	btfss	___lldiv@divisor+3,7
  1043     06FA  2EFC               	goto	u241
  1044     06FB  2EFD               	goto	u240
  1045     06FC                     u241:
  1046     06FC  2EEC               	goto	l800
  1047     06FD                     u240:
  1048     06FD                     l806:
  1049     06FD  3001               	movlw	1
  1050     06FE  00F8               	movwf	??___lldiv
  1051     06FF                     u255:
  1052     06FF  1003               	clrc
  1053     0700  0DF9               	rlf	___lldiv@quotient,f
  1054     0701  0DFA               	rlf	___lldiv@quotient+1,f
  1055     0702  0DFB               	rlf	___lldiv@quotient+2,f
  1056     0703  0DFC               	rlf	___lldiv@quotient+3,f
  1057     0704  0BF8               	decfsz	??___lldiv,f
  1058     0705  2EFF               	goto	u255
  1059     0706                     l808:
  1060     0706  0873               	movf	___lldiv@divisor+3,w
  1061     0707  0277               	subwf	___lldiv@dividend+3,w
  1062     0708  1D03               	skipz
  1063     0709  2F14               	goto	u265
  1064     070A  0872               	movf	___lldiv@divisor+2,w
  1065     070B  0276               	subwf	___lldiv@dividend+2,w
  1066     070C  1D03               	skipz
  1067     070D  2F14               	goto	u265
  1068     070E  0871               	movf	___lldiv@divisor+1,w
  1069     070F  0275               	subwf	___lldiv@dividend+1,w
  1070     0710  1D03               	skipz
  1071     0711  2F14               	goto	u265
  1072     0712  0870               	movf	___lldiv@divisor,w
  1073     0713  0274               	subwf	___lldiv@dividend,w
  1074     0714                     u265:
  1075     0714  1C03               	skipc
  1076     0715  2F17               	goto	u261
  1077     0716  2F18               	goto	u260
  1078     0717                     u261:
  1079     0717  2F27               	goto	l814
  1080     0718                     u260:
  1081     0718                     l810:
  1082     0718  0870               	movf	___lldiv@divisor,w
  1083     0719  02F4               	subwf	___lldiv@dividend,f
  1084     071A  0871               	movf	___lldiv@divisor+1,w
  1085     071B  1C03               	skipc
  1086     071C  0F71               	incfsz	___lldiv@divisor+1,w
  1087     071D  02F5               	subwf	___lldiv@dividend+1,f
  1088     071E  0872               	movf	___lldiv@divisor+2,w
  1089     071F  1C03               	skipc
  1090     0720  0F72               	incfsz	___lldiv@divisor+2,w
  1091     0721  02F6               	subwf	___lldiv@dividend+2,f
  1092     0722  0873               	movf	___lldiv@divisor+3,w
  1093     0723  1C03               	skipc
  1094     0724  0F73               	incfsz	___lldiv@divisor+3,w
  1095     0725  02F7               	subwf	___lldiv@dividend+3,f
  1096     0726                     l812:
  1097     0726  1479               	bsf	___lldiv@quotient,0
  1098     0727                     l814:
  1099     0727  3001               	movlw	1
  1100     0728                     u275:
  1101     0728  1003               	clrc
  1102     0729  0CF3               	rrf	___lldiv@divisor+3,f
  1103     072A  0CF2               	rrf	___lldiv@divisor+2,f
  1104     072B  0CF1               	rrf	___lldiv@divisor+1,f
  1105     072C  0CF0               	rrf	___lldiv@divisor,f
  1106     072D  3EFF               	addlw	-1
  1107     072E  1D03               	skipz
  1108     072F  2F28               	goto	u275
  1109     0730                     l816:
  1110     0730  3001               	movlw	1
  1111     0731  02FD               	subwf	___lldiv@counter,f
  1112     0732  1D03               	btfss	3,2
  1113     0733  2F35               	goto	u281
  1114     0734  2F36               	goto	u280
  1115     0735                     u281:
  1116     0735  2EFD               	goto	l806
  1117     0736                     u280:
  1118     0736                     l818:
  1119     0736  087C               	movf	___lldiv@quotient+3,w
  1120     0737  00F3               	movwf	?___lldiv+3
  1121     0738  087B               	movf	___lldiv@quotient+2,w
  1122     0739  00F2               	movwf	?___lldiv+2
  1123     073A  087A               	movf	___lldiv@quotient+1,w
  1124     073B  00F1               	movwf	?___lldiv+1
  1125     073C  0879               	movf	___lldiv@quotient,w
  1126     073D  00F0               	movwf	?___lldiv
  1127     073E                     l220:
  1128     073E  0008               	return
  1129     073F                     __end_of___lldiv:
  1130     007E                     btemp	set	126	;btemp
  1131     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _i2c_master_init->___lldiv

Critical Paths under _main in BANK0

    _main->_i2c_master_init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     434
                    _i2c_master_init
                          _i2c_start
                           _i2c_stop
                  _master_byte_write
 ---------------------------------------------------------------------------------
 (1) _master_byte_write                                    1     1      0      22
                                              0 COMMON     1     1      0
                        _master_wait
 ---------------------------------------------------------------------------------
 (1) _i2c_stop                                             0     0      0       0
                        _master_wait
 ---------------------------------------------------------------------------------
 (1) _i2c_start                                            0     0      0       0
                        _master_wait
 ---------------------------------------------------------------------------------
 (2) _master_wait                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_master_init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_master_init
     ___lldiv
   _i2c_start
     _master_wait
   _i2c_stop
     _master_wait
   _master_byte_write
     _master_wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      13       5       23.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Jun 01 21:24:29 2024

                        _i 002A                          pc 0002                         l71 06D8  
                       l80 065F                         l65 066B                         l74 0656  
                       l68 0677                         l92 06A0                         l89 0695  
                       fsr 0004                        l220 073E                        l800 06EC  
                      l810 0718                        l802 06F5                        l812 0726  
                      l804 06F9                        l900 07C2                        l814 0727  
                      l806 06FD                        l830 06D6                        l822 06A1  
                      l910 07E3                        l902 07C7                        l816 0730  
                      l808 0706                        l824 06A5                        l832 064E  
                      l840 0699                        l912 07E4                        l904 07CD  
                      l818 0736                        l826 06A8                        l834 0653  
                      l842 069D                        l906 07DB                        l850 073F  
                      l828 06D5                        l836 068C                        l908 07E0  
                      l860 0759                        l852 074E                        l846 0657  
                      l838 0691                        l870 0771                        l862 075A  
                      l854 0752                        l792 066B                        l848 065C  
                      l880 0799                        l872 0776                        l864 0760  
                      l856 0754                        l794 0671                        l890 07A8  
                      l882 079E                        l874 077E                        l866 0765  
                      l858 0755                        l796 06D9                        l892 07AE  
                      l884 07A1                        l876 0783                        l868 076B  
                      l798 06E9                        l886 07A2                        l878 0789  
                      l894 07B5                        l896 07BB                        l898 07C0  
                      _RD0 0040                        _RD1 0041                        u200 0671  
                      u201 0670                        u210 0677                        u211 0676  
                      u220 06E9                        u300 0699                        u221 06E8  
                      u301 0698                        u310 077E                        u311 077D  
                      u240 06FD                        u320 07A8                        u241 06FC  
                      u321 07A7                        u330 07AE                        u235 06EE  
                      u331 07AD                        u260 0718                        u340 07B4  
                      u261 0717                        u341 07B3                        u350 07BB  
                      u255 06FF                        u351 07BA                        u280 0736  
                      u360 07C0                        u281 0735                        u265 0714  
                      u361 07BF                        u290 06B8                        u370 07EA  
                      u275 0728                        u371 07E9                        u295 06B3  
                      _arr 0020                        fsr0 0004                        indf 0000  
                     _PIR1 000C                       _main 073F                       btemp 007E  
                     start 0000                      ?_main 0070            __end_of___lldiv 073F  
                    _PORTB 0006                      _PORTD 0008                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088               ?_master_wait 0070  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 07EE               __end_of_main 07EE           __end_of_i2c_stop 0660  
                   ??_main 007E     master_byte_write@write 0070                     _SSPADD 0093  
                   _SSPCON 0014                     _SSPBUF 0013            _i2c_master_init 06A1  
                ??___lldiv 0078    __end_of__initialization 07FC             __pcstackCOMMON 0070  
             __pidataBANK0 0660          __end_of_i2c_start 0657                  ?_i2c_stop 0070  
  __end_of_i2c_master_init 06D9                 __pmaintext 073F                    _SSPCON2 0091  
                  _SSPSTAT 0094                 ??_i2c_stop 0070                    ___lldiv 06D9  
                  __ptext1 068B                    __ptext2 0657                    __ptext3 064E  
                  __ptext4 066B                    __ptext5 06A1                    __ptext6 06D9  
        _master_byte_write 068B       end_of_initialization 07FC         ?_master_byte_write 0070  
         ?_i2c_master_init 002B        ??_master_byte_write 0070            ___lldiv@divisor 0070  
          ___lldiv@counter 007D  __end_of_master_byte_write 06A1        start_initialization 07EE  
                _i2c_start 064E                 init_fetch0 0678                __pdataBANK0 0020  
                ___latbits 0002              __pcstackBANK0 002B              ??_master_wait 0070  
               ?_i2c_start 0070                   ?___lldiv 0070        __end_of_master_wait 0678  
              ??_i2c_start 0070                   _i2c_stop 0657                _master_wait 066B  
                 init_ram0 067C        i2c_master_init@baud 002B           ___lldiv@dividend 0074  
               _OPTION_REG 0081           ___lldiv@quotient 0079          ??_i2c_master_init 002F  
