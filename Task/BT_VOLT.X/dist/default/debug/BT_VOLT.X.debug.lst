

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Jan 09 20:27:25 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Generated 22/03/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59     0000                     	;# 
    60     0001                     	;# 
    61     0002                     	;# 
    62     0003                     	;# 
    63     0004                     	;# 
    64     0005                     	;# 
    65     0006                     	;# 
    66     0007                     	;# 
    67     0008                     	;# 
    68     0009                     	;# 
    69     000A                     	;# 
    70     000B                     	;# 
    71     000C                     	;# 
    72     000D                     	;# 
    73     000E                     	;# 
    74     000E                     	;# 
    75     000F                     	;# 
    76     0010                     	;# 
    77     0011                     	;# 
    78     0012                     	;# 
    79     0013                     	;# 
    80     0014                     	;# 
    81     0015                     	;# 
    82     0015                     	;# 
    83     0016                     	;# 
    84     0017                     	;# 
    85     0018                     	;# 
    86     0019                     	;# 
    87     001A                     	;# 
    88     001B                     	;# 
    89     001B                     	;# 
    90     001C                     	;# 
    91     001D                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     0081                     	;# 
    95     0085                     	;# 
    96     0086                     	;# 
    97     0087                     	;# 
    98     0088                     	;# 
    99     0089                     	;# 
   100     008C                     	;# 
   101     008D                     	;# 
   102     008E                     	;# 
   103     0091                     	;# 
   104     0092                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0098                     	;# 
   108     0099                     	;# 
   109     009C                     	;# 
   110     009D                     	;# 
   111     009E                     	;# 
   112     009F                     	;# 
   113     010C                     	;# 
   114     010D                     	;# 
   115     010E                     	;# 
   116     010F                     	;# 
   117     018C                     	;# 
   118     018D                     	;# 
   119     0000                     	;# 
   120     0001                     	;# 
   121     0002                     	;# 
   122     0003                     	;# 
   123     0004                     	;# 
   124     0005                     	;# 
   125     0006                     	;# 
   126     0007                     	;# 
   127     0008                     	;# 
   128     0009                     	;# 
   129     000A                     	;# 
   130     000B                     	;# 
   131     000C                     	;# 
   132     000D                     	;# 
   133     000E                     	;# 
   134     000E                     	;# 
   135     000F                     	;# 
   136     0010                     	;# 
   137     0011                     	;# 
   138     0012                     	;# 
   139     0013                     	;# 
   140     0014                     	;# 
   141     0015                     	;# 
   142     0015                     	;# 
   143     0016                     	;# 
   144     0017                     	;# 
   145     0018                     	;# 
   146     0019                     	;# 
   147     001A                     	;# 
   148     001B                     	;# 
   149     001B                     	;# 
   150     001C                     	;# 
   151     001D                     	;# 
   152     001E                     	;# 
   153     001F                     	;# 
   154     0081                     	;# 
   155     0085                     	;# 
   156     0086                     	;# 
   157     0087                     	;# 
   158     0088                     	;# 
   159     0089                     	;# 
   160     008C                     	;# 
   161     008D                     	;# 
   162     008E                     	;# 
   163     0091                     	;# 
   164     0092                     	;# 
   165     0093                     	;# 
   166     0094                     	;# 
   167     0098                     	;# 
   168     0099                     	;# 
   169     009C                     	;# 
   170     009D                     	;# 
   171     009E                     	;# 
   172     009F                     	;# 
   173     010C                     	;# 
   174     010D                     	;# 
   175     010E                     	;# 
   176     010F                     	;# 
   177     018C                     	;# 
   178     018D                     	;# 
   179                           
   180                           	psect	idataBANK0
   181     03A3                     __pidataBANK0:
   182                           
   183                           ;initializer for _high
   184     03A3  3442               	retlw	66
   185     03A4  3441               	retlw	65
   186     03A5  3454               	retlw	84
   187     03A6  3420               	retlw	32
   188     03A7  3448               	retlw	72
   189     03A8  3449               	retlw	73
   190     03A9  3447               	retlw	71
   191     03AA  3448               	retlw	72
   192     03AB  3420               	retlw	32
   193     03AC  3420               	retlw	32
   194     03AD  3400               	retlw	0
   195     03AE  3400               	retlw	0
   196     03AF  3400               	retlw	0
   197     03B0  3400               	retlw	0
   198     03B1  3400               	retlw	0
   199                           
   200                           ;initializer for _norm
   201     03B2  3442               	retlw	66
   202     03B3  3441               	retlw	65
   203     03B4  3454               	retlw	84
   204     03B5  3420               	retlw	32
   205     03B6  344E               	retlw	78
   206     03B7  344F               	retlw	79
   207     03B8  3452               	retlw	82
   208     03B9  344D               	retlw	77
   209     03BA  3441               	retlw	65
   210     03BB  344C               	retlw	76
   211     03BC  3400               	retlw	0
   212     03BD  3400               	retlw	0
   213     03BE  3400               	retlw	0
   214     03BF  3400               	retlw	0
   215     03C0  3400               	retlw	0
   216                           
   217                           ;initializer for _low
   218     03C1  3442               	retlw	66
   219     03C2  3441               	retlw	65
   220     03C3  3454               	retlw	84
   221     03C4  3420               	retlw	32
   222     03C5  344C               	retlw	76
   223     03C6  344F               	retlw	79
   224     03C7  3457               	retlw	87
   225     03C8  3420               	retlw	32
   226     03C9  3420               	retlw	32
   227     03CA  3420               	retlw	32
   228     03CB  3400               	retlw	0
   229     03CC  3400               	retlw	0
   230     03CD  3400               	retlw	0
   231     03CE  3400               	retlw	0
   232     03CF  3400               	retlw	0
   233                           
   234                           	psect	idataBANK1
   235     0385                     __pidataBANK1:
   236                           
   237                           ;initializer for _arr
   238     0385  3442               	retlw	66
   239     0386  3441               	retlw	65
   240     0387  3454               	retlw	84
   241     0388  3420               	retlw	32
   242     0389  3456               	retlw	86
   243     038A  344F               	retlw	79
   244     038B  344C               	retlw	76
   245     038C  3454               	retlw	84
   246     038D  343A               	retlw	58
   247     038E  3420               	retlw	32
   248     038F  3420               	retlw	32
   249     0390  3420               	retlw	32
   250     0391  3420               	retlw	32
   251     0392  3456               	retlw	86
   252     0393  3400               	retlw	0
   253     0394  3400               	retlw	0
   254     0395  3400               	retlw	0
   255     0396  3400               	retlw	0
   256     0397  3400               	retlw	0
   257     0398  3400               	retlw	0
   258     0399  3400               	retlw	0
   259     039A  3400               	retlw	0
   260     039B  3400               	retlw	0
   261     039C  3400               	retlw	0
   262     039D  3400               	retlw	0
   263     039E  3400               	retlw	0
   264     039F  3400               	retlw	0
   265     03A0  3400               	retlw	0
   266     03A1  3400               	retlw	0
   267     03A2  3400               	retlw	0
   268     0008                     _PORTD	set	8
   269     0007                     _PORTC	set	7
   270     0006                     _PORTB	set	6
   271     0081                     _OPTION_REG	set	129
   272     0086                     _TRISB	set	134
   273     0088                     _TRISD	set	136
   274     0087                     _TRISC	set	135
   275                           
   276                           	psect	cinit
   277     07D5                     start_initialization:	
   278                           ; #config settings
   279                           
   280     07D5                     __initialization:
   281                           
   282                           ; Initialize objects allocated to BANK1
   283     07D5  1383               	bcf	3,7	;select IRP bank0
   284     07D6  30BE               	movlw	low (__pdataBANK1+30)
   285     07D7  00FD               	movwf	btemp+-1
   286     07D8  3003               	movlw	high __pidataBANK1
   287     07D9  00FE               	movwf	btemp
   288     07DA  3085               	movlw	low __pidataBANK1
   289     07DB  00FF               	movwf	btemp+1
   290     07DC  30A0               	movlw	low __pdataBANK1
   291     07DD  0084               	movwf	4
   292     07DE  120A  118A  231A  120A  118A  	fcall	init_ram0
   293                           
   294                           ; Initialize objects allocated to BANK0
   295     07E3  304D               	movlw	low (__pdataBANK0+45)
   296     07E4  00FD               	movwf	btemp+-1
   297     07E5  3003               	movlw	high __pidataBANK0
   298     07E6  00FE               	movwf	btemp
   299     07E7  30A3               	movlw	low __pidataBANK0
   300     07E8  00FF               	movwf	btemp+1
   301     07E9  3020               	movlw	low __pdataBANK0
   302     07EA  0084               	movwf	4
   303     07EB  120A  118A  231A  120A  118A  	fcall	init_ram0
   304                           
   305                           ; Clear objects allocated to BANK0
   306     07F0  01CD               	clrf	__pbssBANK0& (0+127)
   307     07F1  01CE               	clrf	(__pbssBANK0+1)& (0+127)
   308     07F2  01CF               	clrf	(__pbssBANK0+2)& (0+127)
   309     07F3  01D0               	clrf	(__pbssBANK0+3)& (0+127)
   310     07F4  01D1               	clrf	(__pbssBANK0+4)& (0+127)
   311     07F5  01D2               	clrf	(__pbssBANK0+5)& (0+127)
   312     07F6  01D3               	clrf	(__pbssBANK0+6)& (0+127)
   313     07F7  01D4               	clrf	(__pbssBANK0+7)& (0+127)
   314     07F8  01D5               	clrf	(__pbssBANK0+8)& (0+127)
   315     07F9  01D6               	clrf	(__pbssBANK0+9)& (0+127)
   316     07FA  01D7               	clrf	(__pbssBANK0+10)& (0+127)
   317                           
   318                           ; Clear objects allocated to COMMON
   319     07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   320     07FC                     end_of_initialization:	
   321                           ;End of C runtime variable initialization code
   322                           
   323     07FC                     __end_of__initialization:
   324     07FC  0183               	clrf	3
   325     07FD  120A  118A  2B54   	ljmp	_main	;jump to C main() function
   326                           
   327                           	psect	bssCOMMON
   328     007D                     __pbssCOMMON:
   329     007D                     _x:
   330     007D                     	ds	1
   331                           
   332                           	psect	bssBANK0
   333     004D                     __pbssBANK0:
   334     004D                     _n:
   335     004D                     	ds	2
   336     004F                     _j:
   337     004F                     	ds	2
   338     0051                     _d0:
   339     0051                     	ds	2
   340     0053                     _d1:
   341     0053                     	ds	2
   342     0055                     _d2:
   343     0055                     	ds	2
   344     0057                     _val:
   345     0057                     	ds	1
   346                           
   347                           	psect	dataBANK0
   348     0020                     __pdataBANK0:
   349     0020                     _high:
   350     0020                     	ds	15
   351     002F                     _norm:
   352     002F                     	ds	15
   353     003E                     _low:
   354     003E                     	ds	15
   355                           
   356                           	psect	dataBANK1
   357     00A0                     __pdataBANK1:
   358     00A0                     _arr:
   359     00A0                     	ds	30
   360                           
   361                           	psect	inittext
   362     0316                     init_fetch0:	
   363                           ;	Called with low address in FSR and high address in W
   364                           
   365     0316  087E               	movf	btemp,w
   366     0317  008A               	movwf	10
   367     0318  087F               	movf	btemp+1,w
   368     0319  0082               	movwf	2
   369     031A                     init_ram0:	
   370                           ;Called with:
   371                           ;	high address of idata address in btemp 
   372                           ;	low address of idata address in btemp+1 
   373                           ;	low address of data in FSR
   374                           ;	high address + 1 of data in btemp-1
   375                           
   376     031A  120A  118A  2316  120A  118A  	fcall	init_fetch0
   377     031F  0080               	movwf	0
   378     0320  0A84               	incf	4,f
   379     0321  0804               	movf	4,w
   380     0322  067D               	xorwf	btemp+-1,w
   381     0323  1903               	btfsc	3,2
   382     0324  3400               	retlw	0
   383     0325  0AFF               	incf	btemp+1,f
   384     0326  1903               	btfsc	3,2
   385     0327  0AFE               	incf	btemp,f
   386     0328  2B1A               	goto	init_ram0
   387                           
   388                           	psect	cstackCOMMON
   389     0070                     __pcstackCOMMON:
   390     0070                     ?_init:
   391     0070                     ?_keyscan:	
   392                           ; 1 bytes @ 0x0
   393                           
   394     0070                     ?_LCD_Comm:	
   395                           ; 1 bytes @ 0x0
   396                           
   397     0070                     ??_LCD_Comm:	
   398                           ; 1 bytes @ 0x0
   399                           
   400     0070                     ?_LCD_Data:	
   401                           ; 1 bytes @ 0x0
   402                           
   403     0070                     ??_LCD_Data:	
   404                           ; 1 bytes @ 0x0
   405                           
   406     0070                     ?_main:	
   407                           ; 1 bytes @ 0x0
   408                           
   409     0070                     ?___bmul:	
   410                           ; 1 bytes @ 0x0
   411                           
   412     0070                     ?___lwdiv:	
   413                           ; 1 bytes @ 0x0
   414                           
   415     0070                     ___bmul@multiplicand:	
   416                           ; 2 bytes @ 0x0
   417                           
   418     0070                     ___lwdiv@divisor:	
   419                           ; 1 bytes @ 0x0
   420                           
   421                           
   422                           ; 2 bytes @ 0x0
   423     0070                     	ds	1
   424     0071                     ??___bmul:
   425     0071                     ___bmul@product:	
   426                           ; 1 bytes @ 0x1
   427                           
   428                           
   429                           ; 1 bytes @ 0x1
   430     0071                     	ds	1
   431     0072                     LCD_Comm@i:
   432     0072                     LCD_Data@i:	
   433                           ; 1 bytes @ 0x2
   434                           
   435     0072                     ___bmul@multiplier:	
   436                           ; 1 bytes @ 0x2
   437                           
   438     0072                     ___lwdiv@dividend:	
   439                           ; 1 bytes @ 0x2
   440                           
   441                           
   442                           ; 2 bytes @ 0x2
   443     0072                     	ds	1
   444     0073                     ??_init:
   445                           
   446                           ; 1 bytes @ 0x3
   447     0073                     	ds	1
   448     0074                     ??___lwdiv:
   449     0074                     ___lwdiv@quotient:	
   450                           ; 1 bytes @ 0x4
   451                           
   452                           
   453                           ; 2 bytes @ 0x4
   454     0074                     	ds	2
   455     0076                     ___lwdiv@counter:
   456                           
   457                           ; 1 bytes @ 0x6
   458     0076                     	ds	1
   459     0077                     ?_LCDOutput:
   460     0077                     LCDOutput@i:	
   461                           ; 1 bytes @ 0x7
   462                           
   463                           
   464                           ; 2 bytes @ 0x7
   465     0077                     	ds	2
   466     0079                     LCDOutput@k:
   467                           
   468                           ; 2 bytes @ 0x9
   469     0079                     	ds	2
   470     007B                     ??_LCDOutput:
   471                           
   472                           ; 1 bytes @ 0xB
   473     007B                     	ds	2
   474     007D                     ??_main:
   475                           
   476                           	psect	cstackBANK0
   477     0058                     __pcstackBANK0:	
   478                           ; 1 bytes @ 0xD
   479                           
   480     0058                     ??_keyscan:
   481                           
   482                           ; 1 bytes @ 0x0
   483     0058                     	ds	2
   484                           
   485                           	psect	maintext
   486     0354                     __pmaintext:	
   487 ;;
   488 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   489 ;;
   490 ;; *************** function _main *****************
   491 ;; Defined at:
   492 ;;		line 30 in file "Battery.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;		None
   497 ;; Return value:  Size  Location     Type
   498 ;;                  1    wreg      void 
   499 ;; Registers used:
   500 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   501 ;; Tracked objects:
   502 ;;		On entry : B00/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   506 ;;      Params:         0       0       0       0       0
   507 ;;      Locals:         0       0       0       0       0
   508 ;;      Temps:          0       0       0       0       0
   509 ;;      Totals:         0       0       0       0       0
   510 ;;Total ram usage:        0 bytes
   511 ;; Hardware stack levels required when called: 3
   512 ;; This function calls:
   513 ;;		_init
   514 ;;		_keyscan
   515 ;; This function is called by:
   516 ;;		Startup code after reset
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520     0354                     _main:	
   521                           ;psect for function _main
   522                           
   523     0354                     l1387:	
   524                           ;incstack = 0
   525                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   526                           
   527                           
   528                           ;Battery.c: 31:     init();
   529     0354  120A  118A  247C  120A  118A  	fcall	_init
   530     0359                     l1389:
   531                           
   532                           ;Battery.c: 32:     j=15;
   533     0359  300F               	movlw	15
   534     035A  1283               	bcf	3,5	;RP0=0, select bank0
   535     035B  1303               	bcf	3,6	;RP1=0, select bank0
   536     035C  00CF               	movwf	_j
   537     035D  3000               	movlw	0
   538     035E  00D0               	movwf	_j+1
   539     035F                     l1391:
   540                           
   541                           ;Battery.c: 33:     n=5;
   542     035F  3005               	movlw	5
   543     0360  00CD               	movwf	_n
   544     0361  3000               	movlw	0
   545     0362  00CE               	movwf	_n+1
   546     0363                     l1393:
   547                           
   548                           ;Battery.c: 35:         keyscan();
   549     0363  120A  118A  24E9  120A  118A  	fcall	_keyscan
   550     0368  2B63               	goto	l1393
   551     0369  120A  118A  2800   	ljmp	start
   552     036C                     __end_of_main:
   553                           
   554                           	psect	text1
   555     04E9                     __ptext1:	
   556 ;; *************** function _keyscan *****************
   557 ;; Defined at:
   558 ;;		line 39 in file "Battery.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   572 ;;      Params:         0       0       0       0       0
   573 ;;      Locals:         0       0       0       0       0
   574 ;;      Temps:          0       2       0       0       0
   575 ;;      Totals:         0       2       0       0       0
   576 ;;Total ram usage:        2 bytes
   577 ;; Hardware stack levels used: 1
   578 ;; Hardware stack levels required when called: 2
   579 ;; This function calls:
   580 ;;		_LCDOutput
   581 ;;		_LCD_Comm
   582 ;;		_LCD_Data
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588     04E9                     _keyscan:	
   589                           ;psect for function _keyscan
   590                           
   591     04E9                     l1159:	
   592                           ;incstack = 0
   593                           ; Regs used in _keyscan: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   594                           
   595                           
   596                           ;Battery.c: 40:     val = PORTB&0xF0;
   597     04E9  1283               	bcf	3,5	;RP0=0, select bank0
   598     04EA  1303               	bcf	3,6	;RP1=0, select bank0
   599     04EB  0806               	movf	6,w	;volatile
   600     04EC  39F0               	andlw	240
   601     04ED  00D7               	movwf	_val
   602                           
   603                           ;Battery.c: 41:     switch(val) {
   604     04EE  2FBE               	goto	l1381
   605     04EF                     l1161:
   606                           
   607                           ;Battery.c: 43:             LCD_Comm(0x80);
   608     04EF  3080               	movlw	128
   609     04F0  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
   610     04F5                     l1163:
   611                           
   612                           ;Battery.c: 44:             for(x=0;x<9;x++) {
   613     04F5  01FD               	clrf	_x
   614     04F6                     l1169:
   615                           
   616                           ;Battery.c: 45:                 LCD_Data(arr[x]);
   617     04F6  087D               	movf	_x,w
   618     04F7  3EA0               	addlw	(low (_arr| 0))& (0+255)
   619     04F8  0084               	movwf	4
   620     04F9  1383               	bcf	3,7	;select IRP bank1
   621     04FA  0800               	movf	0,w
   622     04FB  120A  118A  233E  120A  118A  	fcall	_LCD_Data
   623     0500                     l1171:
   624                           
   625                           ;Battery.c: 46:             }
   626     0500  3001               	movlw	1
   627     0501  00FF               	movwf	btemp+1
   628     0502  087F               	movf	btemp+1,w
   629     0503  07FD               	addwf	_x,f
   630     0504                     l1173:
   631     0504  3009               	movlw	9
   632     0505  027D               	subwf	_x,w
   633     0506  1C03               	skipc
   634     0507  2D09               	goto	u641
   635     0508  2D0A               	goto	u640
   636     0509                     u641:
   637     0509  2CF6               	goto	l1169
   638     050A                     u640:
   639     050A                     l1175:
   640                           
   641                           ;Battery.c: 47:             LCD_Comm(0x8E);
   642     050A  308E               	movlw	142
   643     050B  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
   644                           
   645                           ;Battery.c: 48:             LCD_Data(arr[13]);
   646     0510  1683               	bsf	3,5	;RP0=1, select bank1
   647     0511  1303               	bcf	3,6	;RP1=0, select bank1
   648     0512  082D               	movf	(_arr^(0+128)+13),w
   649     0513  120A  118A  233E  120A  118A  	fcall	_LCD_Data
   650                           
   651                           ;Battery.c: 49:             LCD_Comm(0x8A);
   652     0518  308A               	movlw	138
   653     0519  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
   654                           
   655                           ;Battery.c: 50:             LCDOutput(j,n);
   656     051E  1283               	bcf	3,5	;RP0=0, select bank0
   657     051F  1303               	bcf	3,6	;RP1=0, select bank0
   658     0520  0850               	movf	_j+1,w
   659     0521  00F8               	movwf	LCDOutput@i+1
   660     0522  084F               	movf	_j,w
   661     0523  00F7               	movwf	LCDOutput@i
   662     0524  084E               	movf	_n+1,w
   663     0525  00FA               	movwf	LCDOutput@k+1
   664     0526  084D               	movf	_n,w
   665     0527  00F9               	movwf	LCDOutput@k
   666     0528  120A  118A  2414  120A  118A  	fcall	_LCDOutput
   667                           
   668                           ;Battery.c: 51:             LCD_Comm(0xC0);
   669     052D  30C0               	movlw	192
   670     052E  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
   671     0533                     l1177:
   672                           
   673                           ;Battery.c: 52:             for(x=0;x<10;x++) {
   674     0533  01FD               	clrf	_x
   675     0534                     l1183:
   676                           
   677                           ;Battery.c: 53:                 LCD_Data(low[x]);
   678     0534  087D               	movf	_x,w
   679     0535  3E3E               	addlw	(low (_low| 0))& (0+255)
   680     0536  0084               	movwf	4
   681     0537  1383               	bcf	3,7	;select IRP bank0
   682     0538  0800               	movf	0,w
   683     0539  120A  118A  233E  120A  118A  	fcall	_LCD_Data
   684     053E                     l1185:
   685                           
   686                           ;Battery.c: 54:             }
   687     053E  3001               	movlw	1
   688     053F  00FF               	movwf	btemp+1
   689     0540  087F               	movf	btemp+1,w
   690     0541  07FD               	addwf	_x,f
   691     0542                     l1187:
   692     0542  300A               	movlw	10
   693     0543  027D               	subwf	_x,w
   694     0544  1C03               	skipc
   695     0545  2D47               	goto	u651
   696     0546  2D48               	goto	u650
   697     0547                     u651:
   698     0547  2D34               	goto	l1183
   699     0548                     u650:
   700     0548  2FD4               	goto	l111
   701     0549                     l1189:
   702                           
   703                           ;Battery.c: 57:             n++;
   704     0549  3001               	movlw	1
   705     054A  07CD               	addwf	_n,f
   706     054B  1803               	skipnc
   707     054C  0ACE               	incf	_n+1,f
   708     054D  3000               	movlw	0
   709     054E  07CE               	addwf	_n+1,f
   710                           
   711                           ;Battery.c: 58:             if(n>9) {
   712     054F  3000               	movlw	0
   713     0550  024E               	subwf	_n+1,w
   714     0551  300A               	movlw	10
   715     0552  1903               	skipnz
   716     0553  024D               	subwf	_n,w
   717     0554  1C03               	skipc
   718     0555  2D57               	goto	u661
   719     0556  2D58               	goto	u660
   720     0557                     u661:
   721     0557  2D60               	goto	l1195
   722     0558                     u660:
   723     0558                     l1191:
   724                           
   725                           ;Battery.c: 59:                 n=0; j++;
   726     0558  01CD               	clrf	_n
   727     0559  01CE               	clrf	_n+1
   728     055A                     l1193:
   729     055A  3001               	movlw	1
   730     055B  07CF               	addwf	_j,f
   731     055C  1803               	skipnc
   732     055D  0AD0               	incf	_j+1,f
   733     055E  3000               	movlw	0
   734     055F  07D0               	addwf	_j+1,f
   735     0560                     l1195:
   736                           
   737                           ;Battery.c: 61:             if(j==22 && n>5) {
   738     0560  3016               	movlw	22
   739     0561  064F               	xorwf	_j,w
   740     0562  0450               	iorwf	_j+1,w
   741     0563  1D03               	btfss	3,2
   742     0564  2D66               	goto	u671
   743     0565  2D67               	goto	u670
   744     0566                     u671:
   745     0566  2D78               	goto	l1201
   746     0567                     u670:
   747     0567                     l1197:
   748     0567  3000               	movlw	0
   749     0568  024E               	subwf	_n+1,w
   750     0569  3006               	movlw	6
   751     056A  1903               	skipnz
   752     056B  024D               	subwf	_n,w
   753     056C  1C03               	skipc
   754     056D  2D6F               	goto	u681
   755     056E  2D70               	goto	u680
   756     056F                     u681:
   757     056F  2D78               	goto	l1201
   758     0570                     u680:
   759     0570                     l1199:
   760                           
   761                           ;Battery.c: 62:                 j=22; n=5;
   762     0570  3016               	movlw	22
   763     0571  00CF               	movwf	_j
   764     0572  3000               	movlw	0
   765     0573  00D0               	movwf	_j+1
   766     0574  3005               	movlw	5
   767     0575  00CD               	movwf	_n
   768     0576  3000               	movlw	0
   769     0577  00CE               	movwf	_n+1
   770     0578                     l1201:
   771                           
   772                           ;Battery.c: 64:             LCD_Comm(0x8A);
   773     0578  308A               	movlw	138
   774     0579  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
   775     057E                     l1203:
   776                           
   777                           ;Battery.c: 65:             LCDOutput(j,n);
   778     057E  1283               	bcf	3,5	;RP0=0, select bank0
   779     057F  1303               	bcf	3,6	;RP1=0, select bank0
   780     0580  0850               	movf	_j+1,w
   781     0581  00F8               	movwf	LCDOutput@i+1
   782     0582  084F               	movf	_j,w
   783     0583  00F7               	movwf	LCDOutput@i
   784     0584  084E               	movf	_n+1,w
   785     0585  00FA               	movwf	LCDOutput@k+1
   786     0586  084D               	movf	_n,w
   787     0587  00F9               	movwf	LCDOutput@k
   788     0588  120A  118A  2414  120A  118A  	fcall	_LCDOutput
   789                           
   790                           ;Battery.c: 66:             if(j>=15 && n>=5) {
   791     058D  3000               	movlw	0
   792     058E  1283               	bcf	3,5	;RP0=0, select bank0
   793     058F  1303               	bcf	3,6	;RP1=0, select bank0
   794     0590  0250               	subwf	_j+1,w
   795     0591  300F               	movlw	15
   796     0592  1903               	skipnz
   797     0593  024F               	subwf	_j,w
   798     0594  1C03               	skipc
   799     0595  2D97               	goto	u691
   800     0596  2D98               	goto	u690
   801     0597                     u691:
   802     0597  2DD5               	goto	l1227
   803     0598                     u690:
   804     0598                     l1205:
   805     0598  3000               	movlw	0
   806     0599  024E               	subwf	_n+1,w
   807     059A  3005               	movlw	5
   808     059B  1903               	skipnz
   809     059C  024D               	subwf	_n,w
   810     059D  1C03               	skipc
   811     059E  2DA0               	goto	u701
   812     059F  2DA1               	goto	u700
   813     05A0                     u701:
   814     05A0  2DD5               	goto	l1227
   815     05A1                     u700:
   816     05A1                     l1207:
   817                           
   818                           ;Battery.c: 67:                 if(j<17 || (j==17 && n<=5)) {
   819     05A1  3000               	movlw	0
   820     05A2  0250               	subwf	_j+1,w
   821     05A3  3011               	movlw	17
   822     05A4  1903               	skipnz
   823     05A5  024F               	subwf	_j,w
   824     05A6  1C03               	skipc
   825     05A7  2DA9               	goto	u711
   826     05A8  2DAA               	goto	u710
   827     05A9                     u711:
   828     05A9  2DBA               	goto	l1213
   829     05AA                     u710:
   830     05AA                     l1209:
   831     05AA  3011               	movlw	17
   832     05AB  064F               	xorwf	_j,w
   833     05AC  0450               	iorwf	_j+1,w
   834     05AD  1D03               	btfss	3,2
   835     05AE  2DB0               	goto	u721
   836     05AF  2DB1               	goto	u720
   837     05B0                     u721:
   838     05B0  2DD5               	goto	l1227
   839     05B1                     u720:
   840     05B1                     l1211:
   841     05B1  3000               	movlw	0
   842     05B2  024E               	subwf	_n+1,w
   843     05B3  3006               	movlw	6
   844     05B4  1903               	skipnz
   845     05B5  024D               	subwf	_n,w
   846     05B6  1803               	skipnc
   847     05B7  2DB9               	goto	u731
   848     05B8  2DBA               	goto	u730
   849     05B9                     u731:
   850     05B9  2DD5               	goto	l1227
   851     05BA                     u730:
   852     05BA                     l1213:
   853                           
   854                           ;Battery.c: 68:                     LCD_Comm(0xC0);
   855     05BA  30C0               	movlw	192
   856     05BB  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
   857     05C0                     l1215:
   858                           
   859                           ;Battery.c: 69:                     for(x=0;x<10;x++) {
   860     05C0  01FD               	clrf	_x
   861     05C1                     l1221:
   862                           
   863                           ;Battery.c: 70:                         LCD_Data(low[x]);
   864     05C1  087D               	movf	_x,w
   865     05C2  3E3E               	addlw	(low (_low| 0))& (0+255)
   866     05C3  0084               	movwf	4
   867     05C4  1383               	bcf	3,7	;select IRP bank0
   868     05C5  0800               	movf	0,w
   869     05C6  120A  118A  233E  120A  118A  	fcall	_LCD_Data
   870     05CB                     l1223:
   871                           
   872                           ;Battery.c: 71:                     }
   873     05CB  3001               	movlw	1
   874     05CC  00FF               	movwf	btemp+1
   875     05CD  087F               	movf	btemp+1,w
   876     05CE  07FD               	addwf	_x,f
   877     05CF                     l1225:
   878     05CF  300A               	movlw	10
   879     05D0  027D               	subwf	_x,w
   880     05D1  1C03               	skipc
   881     05D2  2DD4               	goto	u741
   882     05D3  2DD5               	goto	u740
   883     05D4                     u741:
   884     05D4  2DC1               	goto	l1221
   885     05D5                     u740:
   886     05D5                     l1227:
   887                           
   888                           ;Battery.c: 74:             if(j>=17 && n>5) {
   889     05D5  3000               	movlw	0
   890     05D6  1283               	bcf	3,5	;RP0=0, select bank0
   891     05D7  1303               	bcf	3,6	;RP1=0, select bank0
   892     05D8  0250               	subwf	_j+1,w
   893     05D9  3011               	movlw	17
   894     05DA  1903               	skipnz
   895     05DB  024F               	subwf	_j,w
   896     05DC  1C03               	skipc
   897     05DD  2DDF               	goto	u751
   898     05DE  2DE0               	goto	u750
   899     05DF                     u751:
   900     05DF  2E1D               	goto	l1251
   901     05E0                     u750:
   902     05E0                     l1229:
   903     05E0  3000               	movlw	0
   904     05E1  024E               	subwf	_n+1,w
   905     05E2  3006               	movlw	6
   906     05E3  1903               	skipnz
   907     05E4  024D               	subwf	_n,w
   908     05E5  1C03               	skipc
   909     05E6  2DE8               	goto	u761
   910     05E7  2DE9               	goto	u760
   911     05E8                     u761:
   912     05E8  2E1D               	goto	l1251
   913     05E9                     u760:
   914     05E9                     l1231:
   915                           
   916                           ;Battery.c: 75:                 if(j<20 || (j==20 && n<=5)) {
   917     05E9  3000               	movlw	0
   918     05EA  0250               	subwf	_j+1,w
   919     05EB  3014               	movlw	20
   920     05EC  1903               	skipnz
   921     05ED  024F               	subwf	_j,w
   922     05EE  1C03               	skipc
   923     05EF  2DF1               	goto	u771
   924     05F0  2DF2               	goto	u770
   925     05F1                     u771:
   926     05F1  2E02               	goto	l1237
   927     05F2                     u770:
   928     05F2                     l1233:
   929     05F2  3014               	movlw	20
   930     05F3  064F               	xorwf	_j,w
   931     05F4  0450               	iorwf	_j+1,w
   932     05F5  1D03               	btfss	3,2
   933     05F6  2DF8               	goto	u781
   934     05F7  2DF9               	goto	u780
   935     05F8                     u781:
   936     05F8  2E1D               	goto	l1251
   937     05F9                     u780:
   938     05F9                     l1235:
   939     05F9  3000               	movlw	0
   940     05FA  024E               	subwf	_n+1,w
   941     05FB  3006               	movlw	6
   942     05FC  1903               	skipnz
   943     05FD  024D               	subwf	_n,w
   944     05FE  1803               	skipnc
   945     05FF  2E01               	goto	u791
   946     0600  2E02               	goto	u790
   947     0601                     u791:
   948     0601  2E1D               	goto	l1251
   949     0602                     u790:
   950     0602                     l1237:
   951                           
   952                           ;Battery.c: 76:                     LCD_Comm(0xC0);
   953     0602  30C0               	movlw	192
   954     0603  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
   955     0608                     l1239:
   956                           
   957                           ;Battery.c: 77:                     for(x=0;x<10;x++) {
   958     0608  01FD               	clrf	_x
   959     0609                     l1245:
   960                           
   961                           ;Battery.c: 78:                         LCD_Data(norm[x]);
   962     0609  087D               	movf	_x,w
   963     060A  3E2F               	addlw	(low (_norm| 0))& (0+255)
   964     060B  0084               	movwf	4
   965     060C  1383               	bcf	3,7	;select IRP bank0
   966     060D  0800               	movf	0,w
   967     060E  120A  118A  233E  120A  118A  	fcall	_LCD_Data
   968     0613                     l1247:
   969                           
   970                           ;Battery.c: 79:                     }
   971     0613  3001               	movlw	1
   972     0614  00FF               	movwf	btemp+1
   973     0615  087F               	movf	btemp+1,w
   974     0616  07FD               	addwf	_x,f
   975     0617                     l1249:
   976     0617  300A               	movlw	10
   977     0618  027D               	subwf	_x,w
   978     0619  1C03               	skipc
   979     061A  2E1C               	goto	u801
   980     061B  2E1D               	goto	u800
   981     061C                     u801:
   982     061C  2E09               	goto	l1245
   983     061D                     u800:
   984     061D                     l1251:
   985                           
   986                           ;Battery.c: 82:             if(j>=20 && n>5) {
   987     061D  3000               	movlw	0
   988     061E  1283               	bcf	3,5	;RP0=0, select bank0
   989     061F  1303               	bcf	3,6	;RP1=0, select bank0
   990     0620  0250               	subwf	_j+1,w
   991     0621  3014               	movlw	20
   992     0622  1903               	skipnz
   993     0623  024F               	subwf	_j,w
   994     0624  1C03               	skipc
   995     0625  2E27               	goto	u811
   996     0626  2E28               	goto	u810
   997     0627                     u811:
   998     0627  2FD4               	goto	l111
   999     0628                     u810:
  1000     0628                     l1253:
  1001     0628  3000               	movlw	0
  1002     0629  024E               	subwf	_n+1,w
  1003     062A  3006               	movlw	6
  1004     062B  1903               	skipnz
  1005     062C  024D               	subwf	_n,w
  1006     062D  1C03               	skipc
  1007     062E  2E30               	goto	u821
  1008     062F  2E31               	goto	u820
  1009     0630                     u821:
  1010     0630  2FD4               	goto	l111
  1011     0631                     u820:
  1012     0631                     l1255:
  1013                           
  1014                           ;Battery.c: 83:                 if(j<22 || (j==22 && n<=5)) {
  1015     0631  3000               	movlw	0
  1016     0632  0250               	subwf	_j+1,w
  1017     0633  3016               	movlw	22
  1018     0634  1903               	skipnz
  1019     0635  024F               	subwf	_j,w
  1020     0636  1C03               	skipc
  1021     0637  2E39               	goto	u831
  1022     0638  2E3A               	goto	u830
  1023     0639                     u831:
  1024     0639  2E4A               	goto	l1261
  1025     063A                     u830:
  1026     063A                     l1257:
  1027     063A  3016               	movlw	22
  1028     063B  064F               	xorwf	_j,w
  1029     063C  0450               	iorwf	_j+1,w
  1030     063D  1D03               	btfss	3,2
  1031     063E  2E40               	goto	u841
  1032     063F  2E41               	goto	u840
  1033     0640                     u841:
  1034     0640  2FD4               	goto	l111
  1035     0641                     u840:
  1036     0641                     l1259:
  1037     0641  3000               	movlw	0
  1038     0642  024E               	subwf	_n+1,w
  1039     0643  3006               	movlw	6
  1040     0644  1903               	skipnz
  1041     0645  024D               	subwf	_n,w
  1042     0646  1803               	skipnc
  1043     0647  2E49               	goto	u851
  1044     0648  2E4A               	goto	u850
  1045     0649                     u851:
  1046     0649  2FD4               	goto	l111
  1047     064A                     u850:
  1048     064A                     l1261:
  1049                           
  1050                           ;Battery.c: 84:                     LCD_Comm(0xC0);
  1051     064A  30C0               	movlw	192
  1052     064B  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
  1053     0650                     l1263:
  1054                           
  1055                           ;Battery.c: 85:                     for(x=0;x<10;x++) {
  1056     0650  01FD               	clrf	_x
  1057     0651                     l1269:
  1058                           
  1059                           ;Battery.c: 86:                         LCD_Data(high[x]);
  1060     0651  087D               	movf	_x,w
  1061     0652  3E20               	addlw	(low (_high| 0))& (0+255)
  1062     0653  0084               	movwf	4
  1063     0654  1383               	bcf	3,7	;select IRP bank0
  1064     0655  0800               	movf	0,w
  1065     0656  120A  118A  233E  120A  118A  	fcall	_LCD_Data
  1066     065B                     l1271:
  1067                           
  1068                           ;Battery.c: 87:                     }
  1069     065B  3001               	movlw	1
  1070     065C  00FF               	movwf	btemp+1
  1071     065D  087F               	movf	btemp+1,w
  1072     065E  07FD               	addwf	_x,f
  1073     065F                     l1273:
  1074     065F  300A               	movlw	10
  1075     0660  027D               	subwf	_x,w
  1076     0661  1C03               	skipc
  1077     0662  2E64               	goto	u861
  1078     0663  2E65               	goto	u860
  1079     0664                     u861:
  1080     0664  2E51               	goto	l1269
  1081     0665                     u860:
  1082     0665  2FD4               	goto	l111
  1083     0666                     l1275:
  1084                           
  1085                           ;Battery.c: 92:             n--;
  1086     0666  3001               	movlw	1
  1087     0667  02CD               	subwf	_n,f
  1088     0668  3000               	movlw	0
  1089     0669  1C03               	skipc
  1090     066A  03CE               	decf	_n+1,f
  1091     066B  02CE               	subwf	_n+1,f
  1092                           
  1093                           ;Battery.c: 93:             if(n>32767) {
  1094     066C  3080               	movlw	128
  1095     066D  024E               	subwf	_n+1,w
  1096     066E  3000               	movlw	0
  1097     066F  1903               	skipnz
  1098     0670  024D               	subwf	_n,w
  1099     0671  1C03               	skipc
  1100     0672  2E74               	goto	u871
  1101     0673  2E75               	goto	u870
  1102     0674                     u871:
  1103     0674  2E7F               	goto	l1279
  1104     0675                     u870:
  1105     0675                     l1277:
  1106                           
  1107                           ;Battery.c: 94:                 n=9; j--;
  1108     0675  3009               	movlw	9
  1109     0676  00CD               	movwf	_n
  1110     0677  3000               	movlw	0
  1111     0678  00CE               	movwf	_n+1
  1112     0679  3001               	movlw	1
  1113     067A  02CF               	subwf	_j,f
  1114     067B  3000               	movlw	0
  1115     067C  1C03               	skipc
  1116     067D  03D0               	decf	_j+1,f
  1117     067E  02D0               	subwf	_j+1,f
  1118     067F                     l1279:
  1119                           
  1120                           ;Battery.c: 96:             if(j==15 && n<5) {
  1121     067F  300F               	movlw	15
  1122     0680  064F               	xorwf	_j,w
  1123     0681  0450               	iorwf	_j+1,w
  1124     0682  1D03               	btfss	3,2
  1125     0683  2E85               	goto	u881
  1126     0684  2E86               	goto	u880
  1127     0685                     u881:
  1128     0685  2E97               	goto	l1285
  1129     0686                     u880:
  1130     0686                     l1281:
  1131     0686  3000               	movlw	0
  1132     0687  024E               	subwf	_n+1,w
  1133     0688  3005               	movlw	5
  1134     0689  1903               	skipnz
  1135     068A  024D               	subwf	_n,w
  1136     068B  1803               	skipnc
  1137     068C  2E8E               	goto	u891
  1138     068D  2E8F               	goto	u890
  1139     068E                     u891:
  1140     068E  2E97               	goto	l1285
  1141     068F                     u890:
  1142     068F                     l1283:
  1143                           
  1144                           ;Battery.c: 97:                 j=15; n=5;
  1145     068F  300F               	movlw	15
  1146     0690  00CF               	movwf	_j
  1147     0691  3000               	movlw	0
  1148     0692  00D0               	movwf	_j+1
  1149     0693  3005               	movlw	5
  1150     0694  00CD               	movwf	_n
  1151     0695  3000               	movlw	0
  1152     0696  00CE               	movwf	_n+1
  1153     0697                     l1285:
  1154                           
  1155                           ;Battery.c: 99:             LCD_Comm(0x8A);
  1156     0697  308A               	movlw	138
  1157     0698  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
  1158     069D                     l1287:
  1159                           
  1160                           ;Battery.c: 100:             LCDOutput(j,n);
  1161     069D  1283               	bcf	3,5	;RP0=0, select bank0
  1162     069E  1303               	bcf	3,6	;RP1=0, select bank0
  1163     069F  0850               	movf	_j+1,w
  1164     06A0  00F8               	movwf	LCDOutput@i+1
  1165     06A1  084F               	movf	_j,w
  1166     06A2  00F7               	movwf	LCDOutput@i
  1167     06A3  084E               	movf	_n+1,w
  1168     06A4  00FA               	movwf	LCDOutput@k+1
  1169     06A5  084D               	movf	_n,w
  1170     06A6  00F9               	movwf	LCDOutput@k
  1171     06A7  120A  118A  2414  120A  118A  	fcall	_LCDOutput
  1172                           
  1173                           ;Battery.c: 101:             if(j>=15 && n>=5) {
  1174     06AC  3000               	movlw	0
  1175     06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1176     06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1177     06AF  0250               	subwf	_j+1,w
  1178     06B0  300F               	movlw	15
  1179     06B1  1903               	skipnz
  1180     06B2  024F               	subwf	_j,w
  1181     06B3  1C03               	skipc
  1182     06B4  2EB6               	goto	u901
  1183     06B5  2EB7               	goto	u900
  1184     06B6                     u901:
  1185     06B6  2EF4               	goto	l1311
  1186     06B7                     u900:
  1187     06B7                     l1289:
  1188     06B7  3000               	movlw	0
  1189     06B8  024E               	subwf	_n+1,w
  1190     06B9  3005               	movlw	5
  1191     06BA  1903               	skipnz
  1192     06BB  024D               	subwf	_n,w
  1193     06BC  1C03               	skipc
  1194     06BD  2EBF               	goto	u911
  1195     06BE  2EC0               	goto	u910
  1196     06BF                     u911:
  1197     06BF  2EF4               	goto	l1311
  1198     06C0                     u910:
  1199     06C0                     l1291:
  1200                           
  1201                           ;Battery.c: 102:                 if(j<17 || (j==17 && n<=5)) {
  1202     06C0  3000               	movlw	0
  1203     06C1  0250               	subwf	_j+1,w
  1204     06C2  3011               	movlw	17
  1205     06C3  1903               	skipnz
  1206     06C4  024F               	subwf	_j,w
  1207     06C5  1C03               	skipc
  1208     06C6  2EC8               	goto	u921
  1209     06C7  2EC9               	goto	u920
  1210     06C8                     u921:
  1211     06C8  2ED9               	goto	l1297
  1212     06C9                     u920:
  1213     06C9                     l1293:
  1214     06C9  3011               	movlw	17
  1215     06CA  064F               	xorwf	_j,w
  1216     06CB  0450               	iorwf	_j+1,w
  1217     06CC  1D03               	btfss	3,2
  1218     06CD  2ECF               	goto	u931
  1219     06CE  2ED0               	goto	u930
  1220     06CF                     u931:
  1221     06CF  2EF4               	goto	l1311
  1222     06D0                     u930:
  1223     06D0                     l1295:
  1224     06D0  3000               	movlw	0
  1225     06D1  024E               	subwf	_n+1,w
  1226     06D2  3006               	movlw	6
  1227     06D3  1903               	skipnz
  1228     06D4  024D               	subwf	_n,w
  1229     06D5  1803               	skipnc
  1230     06D6  2ED8               	goto	u941
  1231     06D7  2ED9               	goto	u940
  1232     06D8                     u941:
  1233     06D8  2EF4               	goto	l1311
  1234     06D9                     u940:
  1235     06D9                     l1297:
  1236                           
  1237                           ;Battery.c: 103:                     LCD_Comm(0xC0);
  1238     06D9  30C0               	movlw	192
  1239     06DA  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
  1240     06DF                     l1299:
  1241                           
  1242                           ;Battery.c: 104:                     for(x=0;x<10;x++) {
  1243     06DF  01FD               	clrf	_x
  1244     06E0                     l1305:
  1245                           
  1246                           ;Battery.c: 105:                         LCD_Data(low[x]);
  1247     06E0  087D               	movf	_x,w
  1248     06E1  3E3E               	addlw	(low (_low| 0))& (0+255)
  1249     06E2  0084               	movwf	4
  1250     06E3  1383               	bcf	3,7	;select IRP bank0
  1251     06E4  0800               	movf	0,w
  1252     06E5  120A  118A  233E  120A  118A  	fcall	_LCD_Data
  1253     06EA                     l1307:
  1254                           
  1255                           ;Battery.c: 106:                     }
  1256     06EA  3001               	movlw	1
  1257     06EB  00FF               	movwf	btemp+1
  1258     06EC  087F               	movf	btemp+1,w
  1259     06ED  07FD               	addwf	_x,f
  1260     06EE                     l1309:
  1261     06EE  300A               	movlw	10
  1262     06EF  027D               	subwf	_x,w
  1263     06F0  1C03               	skipc
  1264     06F1  2EF3               	goto	u951
  1265     06F2  2EF4               	goto	u950
  1266     06F3                     u951:
  1267     06F3  2EE0               	goto	l1305
  1268     06F4                     u950:
  1269     06F4                     l1311:
  1270                           
  1271                           ;Battery.c: 109:             if(j>=17 && n>5) {
  1272     06F4  3000               	movlw	0
  1273     06F5  1283               	bcf	3,5	;RP0=0, select bank0
  1274     06F6  1303               	bcf	3,6	;RP1=0, select bank0
  1275     06F7  0250               	subwf	_j+1,w
  1276     06F8  3011               	movlw	17
  1277     06F9  1903               	skipnz
  1278     06FA  024F               	subwf	_j,w
  1279     06FB  1C03               	skipc
  1280     06FC  2EFE               	goto	u961
  1281     06FD  2EFF               	goto	u960
  1282     06FE                     u961:
  1283     06FE  2F3C               	goto	l1335
  1284     06FF                     u960:
  1285     06FF                     l1313:
  1286     06FF  3000               	movlw	0
  1287     0700  024E               	subwf	_n+1,w
  1288     0701  3006               	movlw	6
  1289     0702  1903               	skipnz
  1290     0703  024D               	subwf	_n,w
  1291     0704  1C03               	skipc
  1292     0705  2F07               	goto	u971
  1293     0706  2F08               	goto	u970
  1294     0707                     u971:
  1295     0707  2F3C               	goto	l1335
  1296     0708                     u970:
  1297     0708                     l1315:
  1298                           
  1299                           ;Battery.c: 110:                 if(j<20 || (j==20 && n<=5)) {
  1300     0708  3000               	movlw	0
  1301     0709  0250               	subwf	_j+1,w
  1302     070A  3014               	movlw	20
  1303     070B  1903               	skipnz
  1304     070C  024F               	subwf	_j,w
  1305     070D  1C03               	skipc
  1306     070E  2F10               	goto	u981
  1307     070F  2F11               	goto	u980
  1308     0710                     u981:
  1309     0710  2F21               	goto	l1321
  1310     0711                     u980:
  1311     0711                     l1317:
  1312     0711  3014               	movlw	20
  1313     0712  064F               	xorwf	_j,w
  1314     0713  0450               	iorwf	_j+1,w
  1315     0714  1D03               	btfss	3,2
  1316     0715  2F17               	goto	u991
  1317     0716  2F18               	goto	u990
  1318     0717                     u991:
  1319     0717  2F3C               	goto	l1335
  1320     0718                     u990:
  1321     0718                     l1319:
  1322     0718  3000               	movlw	0
  1323     0719  024E               	subwf	_n+1,w
  1324     071A  3006               	movlw	6
  1325     071B  1903               	skipnz
  1326     071C  024D               	subwf	_n,w
  1327     071D  1803               	skipnc
  1328     071E  2F20               	goto	u1001
  1329     071F  2F21               	goto	u1000
  1330     0720                     u1001:
  1331     0720  2F3C               	goto	l1335
  1332     0721                     u1000:
  1333     0721                     l1321:
  1334                           
  1335                           ;Battery.c: 111:                     LCD_Comm(0xC0);
  1336     0721  30C0               	movlw	192
  1337     0722  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
  1338     0727                     l1323:
  1339                           
  1340                           ;Battery.c: 112:                     for(x=0;x<10;x++) {
  1341     0727  01FD               	clrf	_x
  1342     0728                     l1329:
  1343                           
  1344                           ;Battery.c: 113:                         LCD_Data(norm[x]);
  1345     0728  087D               	movf	_x,w
  1346     0729  3E2F               	addlw	(low (_norm| 0))& (0+255)
  1347     072A  0084               	movwf	4
  1348     072B  1383               	bcf	3,7	;select IRP bank0
  1349     072C  0800               	movf	0,w
  1350     072D  120A  118A  233E  120A  118A  	fcall	_LCD_Data
  1351     0732                     l1331:
  1352                           
  1353                           ;Battery.c: 114:                     }
  1354     0732  3001               	movlw	1
  1355     0733  00FF               	movwf	btemp+1
  1356     0734  087F               	movf	btemp+1,w
  1357     0735  07FD               	addwf	_x,f
  1358     0736                     l1333:
  1359     0736  300A               	movlw	10
  1360     0737  027D               	subwf	_x,w
  1361     0738  1C03               	skipc
  1362     0739  2F3B               	goto	u1011
  1363     073A  2F3C               	goto	u1010
  1364     073B                     u1011:
  1365     073B  2F28               	goto	l1329
  1366     073C                     u1010:
  1367     073C                     l1335:
  1368                           
  1369                           ;Battery.c: 117:             if(j>=20 && n>5) {
  1370     073C  3000               	movlw	0
  1371     073D  1283               	bcf	3,5	;RP0=0, select bank0
  1372     073E  1303               	bcf	3,6	;RP1=0, select bank0
  1373     073F  0250               	subwf	_j+1,w
  1374     0740  3014               	movlw	20
  1375     0741  1903               	skipnz
  1376     0742  024F               	subwf	_j,w
  1377     0743  1C03               	skipc
  1378     0744  2F46               	goto	u1021
  1379     0745  2F47               	goto	u1020
  1380     0746                     u1021:
  1381     0746  2FD4               	goto	l111
  1382     0747                     u1020:
  1383     0747                     l1337:
  1384     0747  3000               	movlw	0
  1385     0748  024E               	subwf	_n+1,w
  1386     0749  3006               	movlw	6
  1387     074A  1903               	skipnz
  1388     074B  024D               	subwf	_n,w
  1389     074C  1C03               	skipc
  1390     074D  2F4F               	goto	u1031
  1391     074E  2F50               	goto	u1030
  1392     074F                     u1031:
  1393     074F  2FD4               	goto	l111
  1394     0750                     u1030:
  1395     0750                     l1339:
  1396                           
  1397                           ;Battery.c: 118:                 if(j<22 || (j==22 && n<=5)) {
  1398     0750  3000               	movlw	0
  1399     0751  0250               	subwf	_j+1,w
  1400     0752  3016               	movlw	22
  1401     0753  1903               	skipnz
  1402     0754  024F               	subwf	_j,w
  1403     0755  1C03               	skipc
  1404     0756  2F58               	goto	u1041
  1405     0757  2F59               	goto	u1040
  1406     0758                     u1041:
  1407     0758  2F69               	goto	l1345
  1408     0759                     u1040:
  1409     0759                     l1341:
  1410     0759  3016               	movlw	22
  1411     075A  064F               	xorwf	_j,w
  1412     075B  0450               	iorwf	_j+1,w
  1413     075C  1D03               	btfss	3,2
  1414     075D  2F5F               	goto	u1051
  1415     075E  2F60               	goto	u1050
  1416     075F                     u1051:
  1417     075F  2FD4               	goto	l111
  1418     0760                     u1050:
  1419     0760                     l1343:
  1420     0760  3000               	movlw	0
  1421     0761  024E               	subwf	_n+1,w
  1422     0762  3006               	movlw	6
  1423     0763  1903               	skipnz
  1424     0764  024D               	subwf	_n,w
  1425     0765  1803               	skipnc
  1426     0766  2F68               	goto	u1061
  1427     0767  2F69               	goto	u1060
  1428     0768                     u1061:
  1429     0768  2FD4               	goto	l111
  1430     0769                     u1060:
  1431     0769                     l1345:
  1432                           
  1433                           ;Battery.c: 119:                     LCD_Comm(0xC0);
  1434     0769  30C0               	movlw	192
  1435     076A  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
  1436     076F                     l1347:
  1437                           
  1438                           ;Battery.c: 120:                     for(x=0;x<10;x++) {
  1439     076F  01FD               	clrf	_x
  1440     0770                     l1353:
  1441                           
  1442                           ;Battery.c: 121:                         LCD_Data(high[x]);
  1443     0770  087D               	movf	_x,w
  1444     0771  3E20               	addlw	(low (_high| 0))& (0+255)
  1445     0772  0084               	movwf	4
  1446     0773  1383               	bcf	3,7	;select IRP bank0
  1447     0774  0800               	movf	0,w
  1448     0775  120A  118A  233E  120A  118A  	fcall	_LCD_Data
  1449     077A                     l1355:
  1450                           
  1451                           ;Battery.c: 122:                     }
  1452     077A  3001               	movlw	1
  1453     077B  00FF               	movwf	btemp+1
  1454     077C  087F               	movf	btemp+1,w
  1455     077D  07FD               	addwf	_x,f
  1456     077E                     l1357:
  1457     077E  300A               	movlw	10
  1458     077F  027D               	subwf	_x,w
  1459     0780  1C03               	skipc
  1460     0781  2F83               	goto	u1071
  1461     0782  2F84               	goto	u1070
  1462     0783                     u1071:
  1463     0783  2F70               	goto	l1353
  1464     0784                     u1070:
  1465     0784  2FD4               	goto	l111
  1466     0785                     l1359:
  1467                           
  1468                           ;Battery.c: 127:             j=15; n=5;
  1469     0785  300F               	movlw	15
  1470     0786  00CF               	movwf	_j
  1471     0787  3000               	movlw	0
  1472     0788  00D0               	movwf	_j+1
  1473     0789  3005               	movlw	5
  1474     078A  00CD               	movwf	_n
  1475     078B  3000               	movlw	0
  1476     078C  00CE               	movwf	_n+1
  1477     078D                     l1361:
  1478                           
  1479                           ;Battery.c: 128:             LCD_Comm(0x8A);
  1480     078D  308A               	movlw	138
  1481     078E  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
  1482     0793                     l1363:
  1483                           
  1484                           ;Battery.c: 129:             LCDOutput(j,n);
  1485     0793  1283               	bcf	3,5	;RP0=0, select bank0
  1486     0794  1303               	bcf	3,6	;RP1=0, select bank0
  1487     0795  0850               	movf	_j+1,w
  1488     0796  00F8               	movwf	LCDOutput@i+1
  1489     0797  084F               	movf	_j,w
  1490     0798  00F7               	movwf	LCDOutput@i
  1491     0799  084E               	movf	_n+1,w
  1492     079A  00FA               	movwf	LCDOutput@k+1
  1493     079B  084D               	movf	_n,w
  1494     079C  00F9               	movwf	LCDOutput@k
  1495     079D  120A  118A  2414  120A  118A  	fcall	_LCDOutput
  1496     07A2                     l1365:
  1497                           
  1498                           ;Battery.c: 130:             LCD_Comm(0xC0);
  1499     07A2  30C0               	movlw	192
  1500     07A3  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
  1501     07A8                     l1367:
  1502                           
  1503                           ;Battery.c: 131:             for(x=0;x<10;x++) {
  1504     07A8  01FD               	clrf	_x
  1505     07A9                     l1373:
  1506                           
  1507                           ;Battery.c: 132:                 LCD_Data(low[x]);
  1508     07A9  087D               	movf	_x,w
  1509     07AA  3E3E               	addlw	(low (_low| 0))& (0+255)
  1510     07AB  0084               	movwf	4
  1511     07AC  1383               	bcf	3,7	;select IRP bank0
  1512     07AD  0800               	movf	0,w
  1513     07AE  120A  118A  233E  120A  118A  	fcall	_LCD_Data
  1514     07B3                     l1375:
  1515                           
  1516                           ;Battery.c: 133:             }
  1517     07B3  3001               	movlw	1
  1518     07B4  00FF               	movwf	btemp+1
  1519     07B5  087F               	movf	btemp+1,w
  1520     07B6  07FD               	addwf	_x,f
  1521     07B7                     l1377:
  1522     07B7  300A               	movlw	10
  1523     07B8  027D               	subwf	_x,w
  1524     07B9  1C03               	skipc
  1525     07BA  2FBC               	goto	u1081
  1526     07BB  2FBD               	goto	u1080
  1527     07BC                     u1081:
  1528     07BC  2FA9               	goto	l1373
  1529     07BD                     u1080:
  1530     07BD  2FD4               	goto	l111
  1531     07BE                     l1381:
  1532     07BE  0857               	movf	_val,w
  1533     07BF  00D8               	movwf	??_keyscan
  1534     07C0  01D9               	clrf	??_keyscan+1
  1535                           
  1536                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1537                           ; Switch size 1, requested type "simple"
  1538                           ; Number of cases is 1, Range of values is 0 to 0
  1539                           ; switch strategies available:
  1540                           ; Name         Instructions Cycles
  1541                           ; simple_byte            4     3 (average)
  1542                           ; direct_byte           11     8 (fixed)
  1543                           ; jumptable            260     6 (fixed)
  1544                           ;	Chosen strategy is simple_byte
  1545     07C1  0859               	movf	??_keyscan+1,w
  1546     07C2  3A00               	xorlw	0	; case 0
  1547     07C3  1903               	skipnz
  1548     07C4  2FC6               	goto	l1415
  1549     07C5  2FD4               	goto	l111
  1550     07C6                     l1415:
  1551                           
  1552                           ; Switch size 1, requested type "simple"
  1553                           ; Number of cases is 4, Range of values is 112 to 224
  1554                           ; switch strategies available:
  1555                           ; Name         Instructions Cycles
  1556                           ; simple_byte           13     7 (average)
  1557                           ; jumptable            263     9 (fixed)
  1558                           ;	Chosen strategy is simple_byte
  1559     07C6  0858               	movf	??_keyscan,w
  1560     07C7  3A70               	xorlw	112	; case 112
  1561     07C8  1903               	skipnz
  1562     07C9  2F85               	goto	l1359
  1563     07CA  3AC0               	xorlw	192	; case 176
  1564     07CB  1903               	skipnz
  1565     07CC  2E66               	goto	l1275
  1566     07CD  3A60               	xorlw	96	; case 208
  1567     07CE  1903               	skipnz
  1568     07CF  2D49               	goto	l1189
  1569     07D0  3A30               	xorlw	48	; case 224
  1570     07D1  1903               	skipnz
  1571     07D2  2CEF               	goto	l1161
  1572     07D3  2FD4               	goto	l111
  1573     07D4                     l111:
  1574     07D4  0008               	return
  1575     07D5                     __end_of_keyscan:
  1576                           
  1577                           	psect	text2
  1578     0414                     __ptext2:	
  1579 ;; *************** function _LCDOutput *****************
  1580 ;; Defined at:
  1581 ;;		line 157 in file "Battery.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  i               2    7[COMMON] unsigned int 
  1584 ;;  k               2    9[COMMON] unsigned int 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1596 ;;      Params:         4       0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0
  1598 ;;      Temps:          2       0       0       0       0
  1599 ;;      Totals:         6       0       0       0       0
  1600 ;;Total ram usage:        6 bytes
  1601 ;; Hardware stack levels used: 1
  1602 ;; Hardware stack levels required when called: 1
  1603 ;; This function calls:
  1604 ;;		_LCD_Comm
  1605 ;;		_LCD_Data
  1606 ;;		___bmul
  1607 ;;		___lwdiv
  1608 ;; This function is called by:
  1609 ;;		_keyscan
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613     0414                     _LCDOutput:	
  1614                           ;psect for function _LCDOutput
  1615                           
  1616     0414                     l1105:	
  1617                           ;incstack = 0
  1618                           ; Regs used in _LCDOutput: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1619                           
  1620                           
  1621                           ;Battery.c: 158:     d2 = (unsigned char)(i/10);
  1622     0414  300A               	movlw	10
  1623     0415  00F0               	movwf	___lwdiv@divisor
  1624     0416  3000               	movlw	0
  1625     0417  00F1               	movwf	___lwdiv@divisor+1
  1626     0418  0878               	movf	LCDOutput@i+1,w
  1627     0419  00F3               	movwf	___lwdiv@dividend+1
  1628     041A  0877               	movf	LCDOutput@i,w
  1629     041B  00F2               	movwf	___lwdiv@dividend
  1630     041C  120A  118A  23D0  120A  118A  	fcall	___lwdiv
  1631     0421  0870               	movf	?___lwdiv,w
  1632     0422  00FB               	movwf	??_LCDOutput
  1633     0423  01FC               	clrf	??_LCDOutput+1
  1634     0424  087B               	movf	??_LCDOutput,w
  1635     0425  1283               	bcf	3,5	;RP0=0, select bank0
  1636     0426  1303               	bcf	3,6	;RP1=0, select bank0
  1637     0427  00D5               	movwf	_d2
  1638     0428  087C               	movf	??_LCDOutput+1,w
  1639     0429  00D6               	movwf	_d2+1
  1640                           
  1641                           ;Battery.c: 159:     d1 = (unsigned char)(i-(d2*10));
  1642     042A  30F6               	movlw	246
  1643     042B  00F0               	movwf	___bmul@multiplicand
  1644     042C  0855               	movf	_d2,w
  1645     042D  120A  118A  2329  120A  118A  	fcall	___bmul
  1646     0432  0777               	addwf	LCDOutput@i,w
  1647     0433  00FB               	movwf	??_LCDOutput
  1648     0434  01FC               	clrf	??_LCDOutput+1
  1649     0435  087B               	movf	??_LCDOutput,w
  1650     0436  1283               	bcf	3,5	;RP0=0, select bank0
  1651     0437  1303               	bcf	3,6	;RP1=0, select bank0
  1652     0438  00D3               	movwf	_d1
  1653     0439  087C               	movf	??_LCDOutput+1,w
  1654     043A  00D4               	movwf	_d1+1
  1655     043B                     l1107:
  1656                           
  1657                           ;Battery.c: 160:     d0 = (unsigned char)k;
  1658     043B  0879               	movf	LCDOutput@k,w
  1659     043C  00FB               	movwf	??_LCDOutput
  1660     043D  01FC               	clrf	??_LCDOutput+1
  1661     043E  087B               	movf	??_LCDOutput,w
  1662     043F  00D1               	movwf	_d0
  1663     0440  087C               	movf	??_LCDOutput+1,w
  1664     0441  00D2               	movwf	_d0+1
  1665     0442                     l1109:
  1666                           
  1667                           ;Battery.c: 161:     LCD_Comm(0x8A);
  1668     0442  308A               	movlw	138
  1669     0443  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
  1670     0448                     l1111:
  1671                           
  1672                           ;Battery.c: 162:     LCD_Data(0x30+d2);
  1673     0448  1283               	bcf	3,5	;RP0=0, select bank0
  1674     0449  1303               	bcf	3,6	;RP1=0, select bank0
  1675     044A  0855               	movf	_d2,w
  1676     044B  3E30               	addlw	48
  1677     044C  120A  118A  233E  120A  118A  	fcall	_LCD_Data
  1678     0451                     l1113:
  1679                           
  1680                           ;Battery.c: 163:     LCD_Comm(0x8B);
  1681     0451  308B               	movlw	139
  1682     0452  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
  1683     0457                     l1115:
  1684                           
  1685                           ;Battery.c: 164:     LCD_Data(0x30+d1);
  1686     0457  1283               	bcf	3,5	;RP0=0, select bank0
  1687     0458  1303               	bcf	3,6	;RP1=0, select bank0
  1688     0459  0853               	movf	_d1,w
  1689     045A  3E30               	addlw	48
  1690     045B  120A  118A  233E  120A  118A  	fcall	_LCD_Data
  1691     0460                     l1117:
  1692                           
  1693                           ;Battery.c: 165:     LCD_Comm(0x8C);
  1694     0460  308C               	movlw	140
  1695     0461  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
  1696     0466                     l1119:
  1697                           
  1698                           ;Battery.c: 166:     LCD_Data('.');
  1699     0466  302E               	movlw	46
  1700     0467  120A  118A  233E  120A  118A  	fcall	_LCD_Data
  1701     046C                     l1121:
  1702                           
  1703                           ;Battery.c: 167:     LCD_Comm(0x8D);
  1704     046C  308D               	movlw	141
  1705     046D  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
  1706     0472                     l1123:
  1707                           
  1708                           ;Battery.c: 168:     LCD_Data(0x30+d0);
  1709     0472  1283               	bcf	3,5	;RP0=0, select bank0
  1710     0473  1303               	bcf	3,6	;RP1=0, select bank0
  1711     0474  0851               	movf	_d0,w
  1712     0475  3E30               	addlw	48
  1713     0476  120A  118A  233E  120A  118A  	fcall	_LCD_Data
  1714     047B                     l117:
  1715     047B  0008               	return
  1716     047C                     __end_of_LCDOutput:
  1717                           
  1718                           	psect	text3
  1719     03D0                     __ptext3:	
  1720 ;; *************** function ___lwdiv *****************
  1721 ;; Defined at:
  1722 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  divisor         2    0[COMMON] unsigned int 
  1725 ;;  dividend        2    2[COMMON] unsigned int 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  quotient        2    4[COMMON] unsigned int 
  1728 ;;  counter         1    6[COMMON] unsigned char 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  2    0[COMMON] unsigned int 
  1731 ;; Registers used:
  1732 ;;		wreg, status,2, status,0, btemp+1
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1738 ;;      Params:         4       0       0       0       0
  1739 ;;      Locals:         3       0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0
  1741 ;;      Totals:         7       0       0       0       0
  1742 ;;Total ram usage:        7 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_LCDOutput
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751     03D0                     ___lwdiv:	
  1752                           ;psect for function ___lwdiv
  1753                           
  1754     03D0                     l1079:	
  1755                           ;incstack = 0
  1756                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1757                           
  1758     03D0  01F4               	clrf	___lwdiv@quotient
  1759     03D1  01F5               	clrf	___lwdiv@quotient+1
  1760     03D2                     l1081:
  1761     03D2  0870               	movf	___lwdiv@divisor,w
  1762     03D3  0471               	iorwf	___lwdiv@divisor+1,w
  1763     03D4  1903               	btfsc	3,2
  1764     03D5  2BD7               	goto	u571
  1765     03D6  2BD8               	goto	u570
  1766     03D7                     u571:
  1767     03D7  2C0F               	goto	l1101
  1768     03D8                     u570:
  1769     03D8                     l1083:
  1770     03D8  01F6               	clrf	___lwdiv@counter
  1771     03D9  0AF6               	incf	___lwdiv@counter,f
  1772     03DA  2BE6               	goto	l1089
  1773     03DB                     l1085:
  1774     03DB  3001               	movlw	1
  1775     03DC                     u585:
  1776     03DC  1003               	clrc
  1777     03DD  0DF0               	rlf	___lwdiv@divisor,f
  1778     03DE  0DF1               	rlf	___lwdiv@divisor+1,f
  1779     03DF  3EFF               	addlw	-1
  1780     03E0  1D03               	skipz
  1781     03E1  2BDC               	goto	u585
  1782     03E2                     l1087:
  1783     03E2  3001               	movlw	1
  1784     03E3  00FF               	movwf	btemp+1
  1785     03E4  087F               	movf	btemp+1,w
  1786     03E5  07F6               	addwf	___lwdiv@counter,f
  1787     03E6                     l1089:
  1788     03E6  1FF1               	btfss	___lwdiv@divisor+1,7
  1789     03E7  2BE9               	goto	u591
  1790     03E8  2BEA               	goto	u590
  1791     03E9                     u591:
  1792     03E9  2BDB               	goto	l1085
  1793     03EA                     u590:
  1794     03EA                     l1091:
  1795     03EA  3001               	movlw	1
  1796     03EB                     u605:
  1797     03EB  1003               	clrc
  1798     03EC  0DF4               	rlf	___lwdiv@quotient,f
  1799     03ED  0DF5               	rlf	___lwdiv@quotient+1,f
  1800     03EE  3EFF               	addlw	-1
  1801     03EF  1D03               	skipz
  1802     03F0  2BEB               	goto	u605
  1803     03F1  0871               	movf	___lwdiv@divisor+1,w
  1804     03F2  0273               	subwf	___lwdiv@dividend+1,w
  1805     03F3  1D03               	skipz
  1806     03F4  2BF7               	goto	u615
  1807     03F5  0870               	movf	___lwdiv@divisor,w
  1808     03F6  0272               	subwf	___lwdiv@dividend,w
  1809     03F7                     u615:
  1810     03F7  1C03               	skipc
  1811     03F8  2BFA               	goto	u611
  1812     03F9  2BFB               	goto	u610
  1813     03FA                     u611:
  1814     03FA  2C02               	goto	l1097
  1815     03FB                     u610:
  1816     03FB                     l1093:
  1817     03FB  0870               	movf	___lwdiv@divisor,w
  1818     03FC  02F2               	subwf	___lwdiv@dividend,f
  1819     03FD  0871               	movf	___lwdiv@divisor+1,w
  1820     03FE  1C03               	skipc
  1821     03FF  03F3               	decf	___lwdiv@dividend+1,f
  1822     0400  02F3               	subwf	___lwdiv@dividend+1,f
  1823     0401                     l1095:
  1824     0401  1474               	bsf	___lwdiv@quotient,0
  1825     0402                     l1097:
  1826     0402  3001               	movlw	1
  1827     0403                     u625:
  1828     0403  1003               	clrc
  1829     0404  0CF1               	rrf	___lwdiv@divisor+1,f
  1830     0405  0CF0               	rrf	___lwdiv@divisor,f
  1831     0406  3EFF               	addlw	-1
  1832     0407  1D03               	skipz
  1833     0408  2C03               	goto	u625
  1834     0409                     l1099:
  1835     0409  3001               	movlw	1
  1836     040A  02F6               	subwf	___lwdiv@counter,f
  1837     040B  1D03               	btfss	3,2
  1838     040C  2C0E               	goto	u631
  1839     040D  2C0F               	goto	u630
  1840     040E                     u631:
  1841     040E  2BEA               	goto	l1091
  1842     040F                     u630:
  1843     040F                     l1101:
  1844     040F  0875               	movf	___lwdiv@quotient+1,w
  1845     0410  00F1               	movwf	?___lwdiv+1
  1846     0411  0874               	movf	___lwdiv@quotient,w
  1847     0412  00F0               	movwf	?___lwdiv
  1848     0413                     l489:
  1849     0413  0008               	return
  1850     0414                     __end_of___lwdiv:
  1851                           
  1852                           	psect	text4
  1853     0329                     __ptext4:	
  1854 ;; *************** function ___bmul *****************
  1855 ;; Defined at:
  1856 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;  multiplier      1    wreg     unsigned char 
  1859 ;;  multiplicand    1    0[COMMON] unsigned char 
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;  multiplier      1    2[COMMON] unsigned char 
  1862 ;;  product         1    1[COMMON] unsigned char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      unsigned char 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2, status,0, btemp+1
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1872 ;;      Params:         1       0       0       0       0
  1873 ;;      Locals:         2       0       0       0       0
  1874 ;;      Temps:          0       0       0       0       0
  1875 ;;      Totals:         3       0       0       0       0
  1876 ;;Total ram usage:        3 bytes
  1877 ;; Hardware stack levels used: 1
  1878 ;; This function calls:
  1879 ;;		Nothing
  1880 ;; This function is called by:
  1881 ;;		_LCDOutput
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885     0329                     ___bmul:	
  1886                           ;psect for function ___bmul
  1887                           
  1888                           
  1889                           ;incstack = 0
  1890                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1891                           ;___bmul@multiplier stored from wreg
  1892     0329  00F2               	movwf	___bmul@multiplier
  1893     032A                     l1063:
  1894     032A  01F1               	clrf	___bmul@product
  1895     032B                     l1065:
  1896     032B  1C72               	btfss	___bmul@multiplier,0
  1897     032C  2B2E               	goto	u551
  1898     032D  2B2F               	goto	u550
  1899     032E                     u551:
  1900     032E  2B33               	goto	l1069
  1901     032F                     u550:
  1902     032F                     l1067:
  1903     032F  0870               	movf	___bmul@multiplicand,w
  1904     0330  00FF               	movwf	btemp+1
  1905     0331  087F               	movf	btemp+1,w
  1906     0332  07F1               	addwf	___bmul@product,f
  1907     0333                     l1069:
  1908     0333  1003               	clrc
  1909     0334  0DF0               	rlf	___bmul@multiplicand,f
  1910     0335                     l1071:
  1911     0335  1003               	clrc
  1912     0336  0CF2               	rrf	___bmul@multiplier,f
  1913     0337                     l1073:
  1914     0337  0872               	movf	___bmul@multiplier,w
  1915     0338  1D03               	btfss	3,2
  1916     0339  2B3B               	goto	u561
  1917     033A  2B3C               	goto	u560
  1918     033B                     u561:
  1919     033B  2B2B               	goto	l1065
  1920     033C                     u560:
  1921     033C                     l1075:
  1922     033C  0871               	movf	___bmul@product,w
  1923     033D                     l235:
  1924     033D  0008               	return
  1925     033E                     __end_of___bmul:
  1926                           
  1927                           	psect	text5
  1928     033E                     __ptext5:	
  1929 ;; *************** function _LCD_Data *****************
  1930 ;; Defined at:
  1931 ;;		line 178 in file "Battery.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  i               1    wreg     unsigned char 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  i               1    2[COMMON] unsigned char 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, status,2, status,0, btemp+1
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1945 ;;      Params:         0       0       0       0       0
  1946 ;;      Locals:         1       0       0       0       0
  1947 ;;      Temps:          2       0       0       0       0
  1948 ;;      Totals:         3       0       0       0       0
  1949 ;;Total ram usage:        3 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_keyscan
  1955 ;;		_LCDOutput
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959     033E                     _LCD_Data:	
  1960                           ;psect for function _LCD_Data
  1961                           
  1962                           
  1963                           ;incstack = 0
  1964                           ; Regs used in _LCD_Data: [wreg+status,2+status,0+btemp+1]
  1965                           ;LCD_Data@i stored from wreg
  1966     033E  00F2               	movwf	LCD_Data@i
  1967     033F                     l1055:
  1968                           
  1969                           ;Battery.c: 179:     PORTC|=0x08;
  1970     033F  1283               	bcf	3,5	;RP0=0, select bank0
  1971     0340  1303               	bcf	3,6	;RP1=0, select bank0
  1972     0341  1587               	bsf	7,3	;volatile
  1973     0342                     l1057:
  1974                           
  1975                           ;Battery.c: 180:     PORTD = i;
  1976     0342  0872               	movf	LCD_Data@i,w
  1977     0343  0088               	movwf	8	;volatile
  1978     0344                     l1059:
  1979                           
  1980                           ;Battery.c: 181:     PORTC|=0x01;
  1981     0344  1407               	bsf	7,0	;volatile
  1982                           
  1983                           ;Battery.c: 182:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1984     0345  30C3               	movlw	195
  1985     0346  00F1               	movwf	??_LCD_Data+1
  1986     0347  30CD               	movlw	205
  1987     0348  00F0               	movwf	??_LCD_Data
  1988     0349                     u1097:
  1989     0349  0BF0               	decfsz	??_LCD_Data,f
  1990     034A  2B49               	goto	u1097
  1991     034B  0BF1               	decfsz	??_LCD_Data+1,f
  1992     034C  2B49               	goto	u1097
  1993     034D                     l1061:
  1994                           
  1995                           ;Battery.c: 183:     PORTC&=~0x01;
  1996     034D  30FE               	movlw	254
  1997     034E  00FF               	movwf	btemp+1
  1998     034F  087F               	movf	btemp+1,w
  1999     0350  1283               	bcf	3,5	;RP0=0, select bank0
  2000     0351  1303               	bcf	3,6	;RP1=0, select bank0
  2001     0352  0587               	andwf	7,f	;volatile
  2002     0353                     l123:
  2003     0353  0008               	return
  2004     0354                     __end_of_LCD_Data:
  2005                           
  2006                           	psect	text6
  2007     047C                     __ptext6:	
  2008 ;; *************** function _init *****************
  2009 ;; Defined at:
  2010 ;;		line 137 in file "Battery.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;		None
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2024 ;;      Params:         0       0       0       0       0
  2025 ;;      Locals:         0       0       0       0       0
  2026 ;;      Temps:          2       0       0       0       0
  2027 ;;      Totals:         2       0       0       0       0
  2028 ;;Total ram usage:        2 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; Hardware stack levels required when called: 1
  2031 ;; This function calls:
  2032 ;;		_LCD_Comm
  2033 ;; This function is called by:
  2034 ;;		_main
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038     047C                     _init:	
  2039                           ;psect for function _init
  2040                           
  2041     047C                     l1125:	
  2042                           ;incstack = 0
  2043                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2044                           
  2045                           
  2046                           ;Battery.c: 138:     TRISC=0x00;
  2047     047C  1683               	bsf	3,5	;RP0=1, select bank1
  2048     047D  1303               	bcf	3,6	;RP1=0, select bank1
  2049     047E  0187               	clrf	7	;volatile
  2050                           
  2051                           ;Battery.c: 139:     TRISD=0x00;
  2052     047F  0188               	clrf	8	;volatile
  2053     0480                     l1127:
  2054                           
  2055                           ;Battery.c: 140:     TRISB=0xF0;
  2056     0480  30F0               	movlw	240
  2057     0481  0086               	movwf	6	;volatile
  2058     0482                     l1129:
  2059                           
  2060                           ;Battery.c: 141:     OPTION_REG&=0x7F;
  2061     0482  307F               	movlw	127
  2062     0483  00FF               	movwf	btemp+1
  2063     0484  087F               	movf	btemp+1,w
  2064     0485  0581               	andwf	1,f	;volatile
  2065     0486                     l1131:
  2066                           
  2067                           ;Battery.c: 142:     LCD_Comm(0x38);
  2068     0486  3038               	movlw	56
  2069     0487  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
  2070     048C                     l1133:
  2071                           
  2072                           ;Battery.c: 143:     _delay((unsigned long)((100)*(6000000/4000.0)));
  2073     048C  30C3               	movlw	195
  2074     048D  00F4               	movwf	??_init+1
  2075     048E  30CD               	movlw	205
  2076     048F  00F3               	movwf	??_init
  2077     0490                     u1107:
  2078     0490  0BF3               	decfsz	??_init,f
  2079     0491  2C90               	goto	u1107
  2080     0492  0BF4               	decfsz	??_init+1,f
  2081     0493  2C90               	goto	u1107
  2082     0494                     l1135:
  2083                           
  2084                           ;Battery.c: 144:     LCD_Comm(0x38);
  2085     0494  3038               	movlw	56
  2086     0495  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
  2087     049A                     l1137:
  2088                           
  2089                           ;Battery.c: 145:     _delay((unsigned long)((100)*(6000000/4000.0)));
  2090     049A  30C3               	movlw	195
  2091     049B  00F4               	movwf	??_init+1
  2092     049C  30CD               	movlw	205
  2093     049D  00F3               	movwf	??_init
  2094     049E                     u1117:
  2095     049E  0BF3               	decfsz	??_init,f
  2096     049F  2C9E               	goto	u1117
  2097     04A0  0BF4               	decfsz	??_init+1,f
  2098     04A1  2C9E               	goto	u1117
  2099     04A2                     l1139:
  2100                           
  2101                           ;Battery.c: 146:     LCD_Comm(0x38);
  2102     04A2  3038               	movlw	56
  2103     04A3  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
  2104     04A8                     l1141:
  2105                           
  2106                           ;Battery.c: 147:     _delay((unsigned long)((100)*(6000000/4000.0)));
  2107     04A8  30C3               	movlw	195
  2108     04A9  00F4               	movwf	??_init+1
  2109     04AA  30CD               	movlw	205
  2110     04AB  00F3               	movwf	??_init
  2111     04AC                     u1127:
  2112     04AC  0BF3               	decfsz	??_init,f
  2113     04AD  2CAC               	goto	u1127
  2114     04AE  0BF4               	decfsz	??_init+1,f
  2115     04AF  2CAC               	goto	u1127
  2116     04B0                     l1143:
  2117                           
  2118                           ;Battery.c: 148:     LCD_Comm(0x38);
  2119     04B0  3038               	movlw	56
  2120     04B1  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
  2121     04B6                     l1145:
  2122                           
  2123                           ;Battery.c: 149:     _delay((unsigned long)((100)*(6000000/4000.0)));
  2124     04B6  30C3               	movlw	195
  2125     04B7  00F4               	movwf	??_init+1
  2126     04B8  30CD               	movlw	205
  2127     04B9  00F3               	movwf	??_init
  2128     04BA                     u1137:
  2129     04BA  0BF3               	decfsz	??_init,f
  2130     04BB  2CBA               	goto	u1137
  2131     04BC  0BF4               	decfsz	??_init+1,f
  2132     04BD  2CBA               	goto	u1137
  2133     04BE                     l1147:
  2134                           
  2135                           ;Battery.c: 150:     LCD_Comm(0x0C);
  2136     04BE  300C               	movlw	12
  2137     04BF  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
  2138     04C4                     l1149:
  2139                           
  2140                           ;Battery.c: 151:     _delay((unsigned long)((100)*(6000000/4000.0)));
  2141     04C4  30C3               	movlw	195
  2142     04C5  00F4               	movwf	??_init+1
  2143     04C6  30CD               	movlw	205
  2144     04C7  00F3               	movwf	??_init
  2145     04C8                     u1147:
  2146     04C8  0BF3               	decfsz	??_init,f
  2147     04C9  2CC8               	goto	u1147
  2148     04CA  0BF4               	decfsz	??_init+1,f
  2149     04CB  2CC8               	goto	u1147
  2150     04CC                     l1151:
  2151                           
  2152                           ;Battery.c: 152:     LCD_Comm(0x06);
  2153     04CC  3006               	movlw	6
  2154     04CD  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
  2155     04D2                     l1153:
  2156                           
  2157                           ;Battery.c: 153:     _delay((unsigned long)((100)*(6000000/4000.0)));
  2158     04D2  30C3               	movlw	195
  2159     04D3  00F4               	movwf	??_init+1
  2160     04D4  30CD               	movlw	205
  2161     04D5  00F3               	movwf	??_init
  2162     04D6                     u1157:
  2163     04D6  0BF3               	decfsz	??_init,f
  2164     04D7  2CD6               	goto	u1157
  2165     04D8  0BF4               	decfsz	??_init+1,f
  2166     04D9  2CD6               	goto	u1157
  2167     04DA                     l1155:
  2168                           
  2169                           ;Battery.c: 154:     LCD_Comm(0x01);
  2170     04DA  3001               	movlw	1
  2171     04DB  120A  118A  236C  120A  118A  	fcall	_LCD_Comm
  2172     04E0                     l1157:
  2173                           
  2174                           ;Battery.c: 155:     _delay((unsigned long)((100)*(6000000/4000.0)));
  2175     04E0  30C3               	movlw	195
  2176     04E1  00F4               	movwf	??_init+1
  2177     04E2  30CD               	movlw	205
  2178     04E3  00F3               	movwf	??_init
  2179     04E4                     u1167:
  2180     04E4  0BF3               	decfsz	??_init,f
  2181     04E5  2CE4               	goto	u1167
  2182     04E6  0BF4               	decfsz	??_init+1,f
  2183     04E7  2CE4               	goto	u1167
  2184     04E8                     l114:
  2185     04E8  0008               	return
  2186     04E9                     __end_of_init:
  2187                           
  2188                           	psect	text7
  2189     036C                     __ptext7:	
  2190 ;; *************** function _LCD_Comm *****************
  2191 ;; Defined at:
  2192 ;;		line 170 in file "Battery.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  i               1    wreg     unsigned char 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  i               1    2[COMMON] unsigned char 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0, btemp+1
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2206 ;;      Params:         0       0       0       0       0
  2207 ;;      Locals:         1       0       0       0       0
  2208 ;;      Temps:          2       0       0       0       0
  2209 ;;      Totals:         3       0       0       0       0
  2210 ;;Total ram usage:        3 bytes
  2211 ;; Hardware stack levels used: 1
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_keyscan
  2216 ;;		_init
  2217 ;;		_LCDOutput
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221     036C                     _LCD_Comm:	
  2222                           ;psect for function _LCD_Comm
  2223                           
  2224                           
  2225                           ;incstack = 0
  2226                           ; Regs used in _LCD_Comm: [wreg+status,2+status,0+btemp+1]
  2227                           ;LCD_Comm@i stored from wreg
  2228     036C  00F2               	movwf	LCD_Comm@i
  2229     036D                     l1047:
  2230                           
  2231                           ;Battery.c: 171:     PORTC&=0xF7;
  2232     036D  30F7               	movlw	247
  2233     036E  00FF               	movwf	btemp+1
  2234     036F  087F               	movf	btemp+1,w
  2235     0370  1283               	bcf	3,5	;RP0=0, select bank0
  2236     0371  1303               	bcf	3,6	;RP1=0, select bank0
  2237     0372  0587               	andwf	7,f	;volatile
  2238     0373                     l1049:
  2239                           
  2240                           ;Battery.c: 172:     PORTD = i;
  2241     0373  0872               	movf	LCD_Comm@i,w
  2242     0374  0088               	movwf	8	;volatile
  2243     0375                     l1051:
  2244                           
  2245                           ;Battery.c: 173:     PORTC|=0x01;
  2246     0375  1407               	bsf	7,0	;volatile
  2247     0376                     l1053:
  2248                           
  2249                           ;Battery.c: 174:     _delay((unsigned long)((100)*(6000000/4000.0)));
  2250     0376  30C3               	movlw	195
  2251     0377  00F1               	movwf	??_LCD_Comm+1
  2252     0378  30CD               	movlw	205
  2253     0379  00F0               	movwf	??_LCD_Comm
  2254     037A                     u1177:
  2255     037A  0BF0               	decfsz	??_LCD_Comm,f
  2256     037B  2B7A               	goto	u1177
  2257     037C  0BF1               	decfsz	??_LCD_Comm+1,f
  2258     037D  2B7A               	goto	u1177
  2259                           
  2260                           ;Battery.c: 175:     PORTC&=~0x01;
  2261     037E  30FE               	movlw	254
  2262     037F  00FF               	movwf	btemp+1
  2263     0380  087F               	movf	btemp+1,w
  2264     0381  1283               	bcf	3,5	;RP0=0, select bank0
  2265     0382  1303               	bcf	3,6	;RP1=0, select bank0
  2266     0383  0587               	andwf	7,f	;volatile
  2267     0384                     l120:
  2268     0384  0008               	return
  2269     0385                     __end_of_LCD_Comm:
  2270     007E                     btemp	set	126	;btemp
  2271     007E                     wtemp0	set	126
  2272                           
  2273                           	psect	config
  2274                           
  2275                           ;Config register CONFIG @ 0x2007
  2276                           ;	Oscillator Selection bits
  2277                           ;	FOSC = EXTRC, RC oscillator
  2278                           ;	Watchdog Timer Enable bit
  2279                           ;	WDTE = OFF, WDT disabled
  2280                           ;	Power-up Timer Enable bit
  2281                           ;	PWRTE = OFF, PWRT disabled
  2282                           ;	Brown-out Reset Enable bit
  2283                           ;	BOREN = OFF, BOR disabled
  2284                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2285                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2286                           ;	Data EEPROM Memory Code Protection bit
  2287                           ;	CPD = OFF, Data EEPROM code protection off
  2288                           ;	Flash Program Memory Write Enable bits
  2289                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2290                           ;	In-Circuit Debugger Mode bit
  2291                           ;	DEBUG = 0x1, unprogrammed default
  2292                           ;	Flash Program Memory Code Protection bit
  2293                           ;	CP = OFF, Code protection off
  2294     2007                     	org	8199
  2295     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        75
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      2      58
    BANK1            80      0      30
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _keyscan->_LCDOutput
    _LCDOutput->___lwdiv
    _init->_LCD_Comm

Critical Paths under _main in BANK0

    _main->_keyscan

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1266
                               _init
                            _keyscan
 ---------------------------------------------------------------------------------
 (1) _keyscan                                              2     2      0    1244
                                              0 BANK0      2     2      0
                          _LCDOutput
                           _LCD_Comm
                           _LCD_Data
 ---------------------------------------------------------------------------------
 (2) _LCDOutput                                            6     2      4    1200
                                              7 COMMON     6     2      4
                           _LCD_Comm
                           _LCD_Data
                             ___bmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     168
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _LCD_Data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      22
                                              3 COMMON     2     2      0
                           _LCD_Comm
 ---------------------------------------------------------------------------------
 (2) _LCD_Comm                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _LCD_Comm
   _keyscan
     _LCDOutput
       _LCD_Comm
       _LCD_Data
       ___bmul
       ___lwdiv
     _LCD_Comm
     _LCD_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      1E       7       37.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      2      3A       5       72.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      66      12        0.0%
ABS                  0      0      66       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Jan 09 20:27:25 2024

                      _j 004F                        _n 004D                        _x 007D  
                      pc 0002           ___bmul@product 0071                       _d0 0051  
                     _d1 0053                       _d2 0055                       fsr 0004  
                    l111 07D4                      l120 0384                      l114 04E8  
                    l123 0353                      l117 047B                      l235 033D  
                    l489 0413                      u610 03FB                      u611 03FA  
                    u700 05A1                      u605 03EB                      u701 05A0  
                    u550 032F                      u630 040F                      u710 05AA  
                    u551 032E                      u631 040E                      u615 03F7  
                    u711 05A9                      u560 033C                      u800 061D  
                    u720 05B1                      u640 050A                      u561 033B  
                    u625 0403                      u801 061C                      u721 05B0  
                    u641 0509                      u570 03D8                      u810 0628  
                    u730 05BA                      u650 0548                      u571 03D7  
                    u811 0627                      u731 05B9                      u651 0547  
                    u900 06B7                      u820 0631                      u740 05D5  
                    u660 0558                      u901 06B6                      u821 0630  
                    u741 05D4                      u661 0557                      u590 03EA  
                    u910 06C0                      u830 063A                      u750 05E0  
                    u670 0567                      u591 03E9                      u911 06BF  
                    u831 0639                      u751 05DF                      u671 0566  
                    u920 06C9                      u840 0641                      u760 05E9  
                    u680 0570                      u585 03DC                      u921 06C8  
                    u841 0640                      u761 05E8                      u681 056F  
                    u930 06D0                      u850 064A                      u770 05F2  
                    u690 0598                      u931 06CF                      u851 0649  
                    u771 05F1                      u691 0597                      u940 06D9  
                    u860 0665                      u780 05F9                      u941 06D8  
                    u861 0664                      u781 05F8                      u950 06F4  
                    u870 0675                      u790 0602                      u951 06F3  
                    u871 0674                      u791 0601                      u960 06FF  
                    u880 0686                      u961 06FE                      u881 0685  
                    u970 0708                      u890 068F                      u971 0707  
                    u891 068E                      u980 0711                      u981 0710  
                    u990 0718                      u991 0717                      _arr 00A0  
                    _low 003E                      _val 0057                      fsr0 0004  
                    indf 0000                     l1101 040F                     l1111 0448  
                   l1121 046C                     l1113 0451                     l1105 0414  
                   l1201 0578                     l1051 0375                     l1131 0486  
                   l1123 0472                     l1115 0457                     l1107 043B  
                   l1211 05B1                     l1203 057E                     l1053 0376  
                   l1141 04A8                     l1133 048C                     l1125 047C  
                   l1061 034D                     l1117 0460                     l1109 0442  
                   l1221 05C1                     l1213 05BA                     l1205 0598  
                   l1047 036D                     l1151 04CC                     l1143 04B0  
                   l1135 0494                     l1127 0480                     l1055 033F  
                   l1071 0335                     l1063 032A                     l1119 0466  
                   l1311 06F4                     l1231 05E9                     l1223 05CB  
                   l1215 05C0                     l1207 05A1                     l1049 0373  
                   l1153 04D2                     l1145 04B6                     l1137 049A  
                   l1129 0482                     l1057 0342                     l1073 0337  
                   l1065 032B                     l1081 03D2                     l1321 0721  
                   l1313 06FF                     l1305 06E0                     l1233 05F2  
                   l1225 05CF                     l1209 05AA                     l1161 04EF  
                   l1155 04DA                     l1147 04BE                     l1139 04A2  
                   l1059 0344                     l1075 033C                     l1067 032F  
                   l1091 03EA                     l1083 03D8                     l1331 0732  
                   l1323 0727                     l1315 0708                     l1307 06EA  
                   l1235 05F9                     l1251 061D                     l1227 05D5  
                   l1171 0500                     l1163 04F5                     l1157 04E0  
                   l1149 04C4                     l1069 0333                     l1093 03FB  
                   l1085 03DB                     l1341 0759                     l1333 0736  
                   l1317 0711                     l1309 06EE                     l1261 064A  
                   l1253 0628                     l1245 0609                     l1237 0602  
                   l1229 05E0                     l1173 0504                     l1095 0401  
                   l1087 03E2                     l1079 03D0                     l1415 07C6  
                   l1343 0760                     l1319 0718                     l1335 073C  
                   l1271 065B                     l1263 0650                     l1255 0631  
                   l1247 0613                     l1239 0608                     l1191 0558  
                   l1183 0534                     l1175 050A                     l1159 04E9  
                   l1097 0402                     l1089 03E6                     l1361 078D  
                   l1353 0770                     l1345 0769                     l1337 0747  
                   l1329 0728                     l1281 0686                     l1273 065F  
                   l1257 063A                     l1249 0617                     l1193 055A  
                   l1185 053E                     l1177 0533                     l1169 04F6  
                   l1099 0409                     l1363 0793                     l1355 077A  
                   l1347 076F                     l1339 0750                     l1291 06C0  
                   l1283 068F                     l1275 0666                     l1259 0641  
                   l1195 0560                     l1187 0542                     l1373 07A9  
                   l1365 07A2                     l1357 077E                     l1293 06C9  
                   l1285 0697                     l1277 0675                     l1269 0651  
                   l1197 0567                     l1189 0549                     l1381 07BE  
                   l1375 07B3                     l1367 07A8                     l1359 0785  
                   l1295 06D0                     l1287 069D                     l1279 067F  
                   l1199 0570                     l1391 035F                     l1377 07B7  
                   l1297 06D9                     l1289 06B7                     l1393 0363  
                   l1299 06DF                     l1387 0354                     l1389 0359  
                   u1000 0721                     u1001 0720                     u1010 073C  
                   u1011 073B                     u1020 0747                     u1021 0746  
                   u1030 0750                     u1031 074F                     u1040 0759  
                   u1041 0758                     u1050 0760                     u1107 0490  
                   u1051 075F                     u1060 0769                     u1117 049E  
                   u1061 0768                     u1070 0784                     u1127 04AC  
                   u1071 0783                     u1080 07BD                     u1137 04BA  
                   u1081 07BC                     u1147 04C8                     u1157 04D6  
                   u1167 04E4                     u1177 037A                     u1097 0349  
                   _high 0020                     _main 0354                     _init 047C  
                   _norm 002F                     btemp 007E                     start 0000  
      ___bmul@multiplier 0072         __end_of_LCD_Data 0354         __end_of_LCD_Comm 0385  
                  ?_main 0070                    ?_init 0070          __end_of___lwdiv 0414  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
        __end_of_keyscan 07D5                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07D5             __end_of_main 036C  
           __end_of_init 04E9                   ??_main 007D                   ??_init 0073  
      __end_of_LCDOutput 047C                   ___bmul 0329                ??___lwdiv 0074  
              ??_keyscan 0058                ?_LCD_Data 0070  __end_of__initialization 07FC  
              ?_LCD_Comm 0070                LCD_Data@i 0072                LCD_Comm@i 0072  
    ___bmul@multiplicand 0070           __pcstackCOMMON 0070             __pidataBANK0 03A3  
           __pidataBANK1 0385               __pbssBANK0 004D               ??_LCD_Data 0070  
             ??_LCD_Comm 0070               __pmaintext 0354                  ?___bmul 0070  
                ___lwdiv 03D0                  __ptext1 04E9                  __ptext2 0414  
                __ptext3 03D0                  __ptext4 0329                  __ptext5 033E  
                __ptext6 047C                  __ptext7 036C                  _keyscan 04E9  
              _LCDOutput 0414     end_of_initialization 07FC               ?_LCDOutput 0077  
         __end_of___bmul 033E               LCDOutput@i 0077               LCDOutput@k 0079  
    start_initialization 07D5                 ??___bmul 0071               init_fetch0 0316  
            __pdataBANK0 0020              __pdataBANK1 00A0              __pbssCOMMON 007D  
              ___latbits 0002            __pcstackBANK0 0058              ??_LCDOutput 007B  
       ___lwdiv@dividend 0072                 ?___lwdiv 0070                 ?_keyscan 0070  
       ___lwdiv@quotient 0074                 _LCD_Data 033E                 _LCD_Comm 036C  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0076                 init_ram0 031A  
             _OPTION_REG 0081  
