

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Apr 12 17:30:58 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Generated 22/03/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F877A Definitions
    66                           ; 
    67                           ; SFR Addresses
    68     0000                     	;# 
    69     0001                     	;# 
    70     0002                     	;# 
    71     0003                     	;# 
    72     0004                     	;# 
    73     0005                     	;# 
    74     0006                     	;# 
    75     0007                     	;# 
    76     0008                     	;# 
    77     0009                     	;# 
    78     000A                     	;# 
    79     000B                     	;# 
    80     000C                     	;# 
    81     000D                     	;# 
    82     000E                     	;# 
    83     000E                     	;# 
    84     000F                     	;# 
    85     0010                     	;# 
    86     0011                     	;# 
    87     0012                     	;# 
    88     0013                     	;# 
    89     0014                     	;# 
    90     0015                     	;# 
    91     0015                     	;# 
    92     0016                     	;# 
    93     0017                     	;# 
    94     0018                     	;# 
    95     0019                     	;# 
    96     001A                     	;# 
    97     001B                     	;# 
    98     001B                     	;# 
    99     001C                     	;# 
   100     001D                     	;# 
   101     001E                     	;# 
   102     001F                     	;# 
   103     0081                     	;# 
   104     0085                     	;# 
   105     0086                     	;# 
   106     0087                     	;# 
   107     0088                     	;# 
   108     0089                     	;# 
   109     008C                     	;# 
   110     008D                     	;# 
   111     008E                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0094                     	;# 
   116     0098                     	;# 
   117     0099                     	;# 
   118     009C                     	;# 
   119     009D                     	;# 
   120     009E                     	;# 
   121     009F                     	;# 
   122     010C                     	;# 
   123     010D                     	;# 
   124     010E                     	;# 
   125     010F                     	;# 
   126     018C                     	;# 
   127     018D                     	;# 
   128     0000                     	;# 
   129     0001                     	;# 
   130     0002                     	;# 
   131     0003                     	;# 
   132     0004                     	;# 
   133     0005                     	;# 
   134     0006                     	;# 
   135     0007                     	;# 
   136     0008                     	;# 
   137     0009                     	;# 
   138     000A                     	;# 
   139     000B                     	;# 
   140     000C                     	;# 
   141     000D                     	;# 
   142     000E                     	;# 
   143     000E                     	;# 
   144     000F                     	;# 
   145     0010                     	;# 
   146     0011                     	;# 
   147     0012                     	;# 
   148     0013                     	;# 
   149     0014                     	;# 
   150     0015                     	;# 
   151     0015                     	;# 
   152     0016                     	;# 
   153     0017                     	;# 
   154     0018                     	;# 
   155     0019                     	;# 
   156     001A                     	;# 
   157     001B                     	;# 
   158     001B                     	;# 
   159     001C                     	;# 
   160     001D                     	;# 
   161     001E                     	;# 
   162     001F                     	;# 
   163     0081                     	;# 
   164     0085                     	;# 
   165     0086                     	;# 
   166     0087                     	;# 
   167     0088                     	;# 
   168     0089                     	;# 
   169     008C                     	;# 
   170     008D                     	;# 
   171     008E                     	;# 
   172     0091                     	;# 
   173     0092                     	;# 
   174     0093                     	;# 
   175     0094                     	;# 
   176     0098                     	;# 
   177     0099                     	;# 
   178     009C                     	;# 
   179     009D                     	;# 
   180     009E                     	;# 
   181     009F                     	;# 
   182     010C                     	;# 
   183     010D                     	;# 
   184     010E                     	;# 
   185     010F                     	;# 
   186     018C                     	;# 
   187     018D                     	;# 
   188     0000                     	;# 
   189     0001                     	;# 
   190     0002                     	;# 
   191     0003                     	;# 
   192     0004                     	;# 
   193     0005                     	;# 
   194     0006                     	;# 
   195     0007                     	;# 
   196     0008                     	;# 
   197     0009                     	;# 
   198     000A                     	;# 
   199     000B                     	;# 
   200     000C                     	;# 
   201     000D                     	;# 
   202     000E                     	;# 
   203     000E                     	;# 
   204     000F                     	;# 
   205     0010                     	;# 
   206     0011                     	;# 
   207     0012                     	;# 
   208     0013                     	;# 
   209     0014                     	;# 
   210     0015                     	;# 
   211     0015                     	;# 
   212     0016                     	;# 
   213     0017                     	;# 
   214     0018                     	;# 
   215     0019                     	;# 
   216     001A                     	;# 
   217     001B                     	;# 
   218     001B                     	;# 
   219     001C                     	;# 
   220     001D                     	;# 
   221     001E                     	;# 
   222     001F                     	;# 
   223     0081                     	;# 
   224     0085                     	;# 
   225     0086                     	;# 
   226     0087                     	;# 
   227     0088                     	;# 
   228     0089                     	;# 
   229     008C                     	;# 
   230     008D                     	;# 
   231     008E                     	;# 
   232     0091                     	;# 
   233     0092                     	;# 
   234     0093                     	;# 
   235     0094                     	;# 
   236     0098                     	;# 
   237     0099                     	;# 
   238     009C                     	;# 
   239     009D                     	;# 
   240     009E                     	;# 
   241     009F                     	;# 
   242     010C                     	;# 
   243     010D                     	;# 
   244     010E                     	;# 
   245     010F                     	;# 
   246     018C                     	;# 
   247     018D                     	;# 
   248                           
   249                           	psect	idataBANK0
   250     0170                     __pidataBANK0:
   251                           
   252                           ;initializer for _msg2
   253     0170  3444               	retlw	68
   254     0171  3441               	retlw	65
   255     0172  3454               	retlw	84
   256     0173  343A               	retlw	58
   257     0174  3400               	retlw	0
   258                           
   259                           ;initializer for _msg1
   260     0175  3454               	retlw	84
   261     0176  3449               	retlw	73
   262     0177  344D               	retlw	77
   263     0178  343A               	retlw	58
   264     0179  3400               	retlw	0
   265                           
   266                           ;initializer for _mode2
   267     017A  3420               	retlw	32
   268     017B  3450               	retlw	80
   269     017C  344D               	retlw	77
   270     017D  3400               	retlw	0
   271                           
   272                           ;initializer for _mode1
   273     017E  3420               	retlw	32
   274     017F  3441               	retlw	65
   275     0180  344D               	retlw	77
   276     0181  3400               	retlw	0
   277                           
   278                           ;initializer for _year
   279     0182  3418               	retlw	24
   280     0183  3400               	retlw	0
   281                           
   282                           ;initializer for _day
   283     0184  3401               	retlw	1
   284     0185  3400               	retlw	0
   285                           
   286                           ;initializer for _month
   287     0186  3404               	retlw	4
   288     0187  3400               	retlw	0
   289                           
   290                           ;initializer for _date
   291     0188  3408               	retlw	8
   292     0189  3400               	retlw	0
   293                           
   294                           ;initializer for _hour
   295     018A  340B               	retlw	11
   296     018B  3400               	retlw	0
   297                           
   298                           ;initializer for _min
   299     018C  343B               	retlw	59
   300     018D  3400               	retlw	0
   301                           
   302                           ;initializer for _sec
   303     018E  343A               	retlw	58
   304     018F  3400               	retlw	0
   305                           
   306                           ;initializer for _dataD
   307     0190  3408               	retlw	8
   308     0191  3400               	retlw	0
   309                           
   310                           ;initializer for _dataC
   311     0192  3407               	retlw	7
   312     0193  3400               	retlw	0
   313                           
   314                           ;initializer for _DRD
   315     0194  3488               	retlw	136
   316     0195  3400               	retlw	0
   317                           
   318                           ;initializer for _DRC
   319     0196  3487               	retlw	135
   320     0197  3400               	retlw	0
   321                           
   322                           ;initializer for _PIF1
   323     0198  340C               	retlw	12
   324     0199  3400               	retlw	0
   325                           
   326                           ;initializer for _SSP_ADD
   327     019A  3493               	retlw	147
   328     019B  3400               	retlw	0
   329                           
   330                           ;initializer for _SSP_STAT
   331     019C  3494               	retlw	148
   332     019D  3400               	retlw	0
   333                           
   334                           ;initializer for _SSP_BUF
   335     019E  3413               	retlw	19
   336     019F  3400               	retlw	0
   337                           
   338                           ;initializer for _SSPCON_1
   339     01A0  3414               	retlw	20
   340     01A1  3400               	retlw	0
   341                           
   342                           ;initializer for _SSPCON_2
   343     01A2  3491               	retlw	145
   344     01A3  3400               	retlw	0
   345     0038                     _RC0	set	56
   346     0039                     _RC1	set	57
   347                           
   348                           	psect	cinit
   349     07EA                     start_initialization:	
   350                           ; #config settings
   351                           
   352     07EA                     __initialization:
   353                           
   354                           ; Initialize objects allocated to BANK0
   355     07EA  1383               	bcf	3,7	;select IRP bank0
   356     07EB  3054               	movlw	low (__pdataBANK0+52)
   357     07EC  00FD               	movwf	btemp+-1
   358     07ED  3001               	movlw	high __pidataBANK0
   359     07EE  00FE               	movwf	btemp
   360     07EF  3070               	movlw	low __pidataBANK0
   361     07F0  00FF               	movwf	btemp+1
   362     07F1  3020               	movlw	low __pdataBANK0
   363     07F2  0084               	movwf	4
   364     07F3  120A  118A  20AA  120A  118A  	fcall	init_ram0
   365                           
   366                           ; Clear objects allocated to BANK0
   367     07F8  01DF               	clrf	__pbssBANK0& (0+127)
   368     07F9  01E0               	clrf	(__pbssBANK0+1)& (0+127)
   369     07FA  01E1               	clrf	(__pbssBANK0+2)& (0+127)
   370     07FB  01E2               	clrf	(__pbssBANK0+3)& (0+127)
   371     07FC                     end_of_initialization:	
   372                           ;End of C runtime variable initialization code
   373                           
   374     07FC                     __end_of__initialization:
   375     07FC  0183               	clrf	3
   376     07FD  120A  118A  2D91   	ljmp	_main	;jump to C main() function
   377                           
   378                           	psect	bssBANK0
   379     005F                     __pbssBANK0:
   380     005F                     _hour1:
   381     005F                     	ds	2
   382     0061                     _i:
   383     0061                     	ds	2
   384                           
   385                           	psect	dataBANK0
   386     0020                     __pdataBANK0:
   387     0020                     _msg2:
   388     0020                     	ds	5
   389     0025                     _msg1:
   390     0025                     	ds	5
   391     002A                     _mode2:
   392     002A                     	ds	4
   393     002E                     _mode1:
   394     002E                     	ds	4
   395     0032                     _year:
   396     0032                     	ds	2
   397     0034                     _day:
   398     0034                     	ds	2
   399     0036                     _month:
   400     0036                     	ds	2
   401     0038                     _date:
   402     0038                     	ds	2
   403     003A                     _hour:
   404     003A                     	ds	2
   405     003C                     _min:
   406     003C                     	ds	2
   407     003E                     _sec:
   408     003E                     	ds	2
   409     0040                     _dataD:
   410     0040                     	ds	2
   411     0042                     _dataC:
   412     0042                     	ds	2
   413     0044                     _DRD:
   414     0044                     	ds	2
   415     0046                     _DRC:
   416     0046                     	ds	2
   417     0048                     _PIF1:
   418     0048                     	ds	2
   419     004A                     _SSP_ADD:
   420     004A                     	ds	2
   421     004C                     _SSP_STAT:
   422     004C                     	ds	2
   423     004E                     _SSP_BUF:
   424     004E                     	ds	2
   425     0050                     _SSPCON_1:
   426     0050                     	ds	2
   427     0052                     _SSPCON_2:
   428     0052                     	ds	2
   429                           
   430                           	psect	inittext
   431     00A6                     init_fetch0:	
   432                           ;	Called with low address in FSR and high address in W
   433                           
   434     00A6  087E               	movf	btemp,w
   435     00A7  008A               	movwf	10
   436     00A8  087F               	movf	btemp+1,w
   437     00A9  0082               	movwf	2
   438     00AA                     init_ram0:	
   439                           ;Called with:
   440                           ;	high address of idata address in btemp 
   441                           ;	low address of idata address in btemp+1 
   442                           ;	low address of data in FSR
   443                           ;	high address + 1 of data in btemp-1
   444                           
   445     00AA  120A  118A  20A6  120A  118A  	fcall	init_fetch0
   446     00AF  0080               	movwf	0
   447     00B0  0A84               	incf	4,f
   448     00B1  0804               	movf	4,w
   449     00B2  067D               	xorwf	btemp+-1,w
   450     00B3  1903               	btfsc	3,2
   451     00B4  3400               	retlw	0
   452     00B5  0AFF               	incf	btemp+1,f
   453     00B6  1903               	btfsc	3,2
   454     00B7  0AFE               	incf	btemp,f
   455     00B8  28AA               	goto	init_ram0
   456                           
   457                           	psect	cstackCOMMON
   458     0070                     __pcstackCOMMON:
   459     0070                     ?_delay:
   460     0070                     ?_i2c_wait:	
   461                           ; 1 bytes @ 0x0
   462                           
   463     0070                     ??_i2c_wait:	
   464                           ; 1 bytes @ 0x0
   465                           
   466     0070                     ?_i2c_start:	
   467                           ; 1 bytes @ 0x0
   468                           
   469     0070                     ??_i2c_start:	
   470                           ; 1 bytes @ 0x0
   471                           
   472     0070                     ?_i2c_stop:	
   473                           ; 1 bytes @ 0x0
   474                           
   475     0070                     ??_i2c_stop:	
   476                           ; 1 bytes @ 0x0
   477                           
   478     0070                     ?_i2c_read:	
   479                           ; 1 bytes @ 0x0
   480                           
   481     0070                     ??_i2c_read:	
   482                           ; 1 bytes @ 0x0
   483                           
   484     0070                     ?_i2c_write:	
   485                           ; 1 bytes @ 0x0
   486                           
   487     0070                     ??_i2c_write:	
   488                           ; 1 bytes @ 0x0
   489                           
   490     0070                     ?_lcd_cmd:	
   491                           ; 1 bytes @ 0x0
   492                           
   493     0070                     ?_lcd_data:	
   494                           ; 1 bytes @ 0x0
   495                           
   496     0070                     ?_init:	
   497                           ; 1 bytes @ 0x0
   498                           
   499     0070                     ?_setup:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0070                     ?_update:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     ?_main:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0070                     ?___bmul:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0070                     ?___wmul:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0070                     ?___awdiv:	
   515                           ; 2 bytes @ 0x0
   516                           
   517     0070                     ?___awmod:	
   518                           ; 2 bytes @ 0x0
   519                           
   520     0070                     ?___lldiv:	
   521                           ; 2 bytes @ 0x0
   522                           
   523     0070                     i2c_write@data:	
   524                           ; 4 bytes @ 0x0
   525                           
   526     0070                     ___bmul@multiplicand:	
   527                           ; 1 bytes @ 0x0
   528                           
   529     0070                     ___wmul@multiplier:	
   530                           ; 1 bytes @ 0x0
   531                           
   532     0070                     ___awdiv@divisor:	
   533                           ; 2 bytes @ 0x0
   534                           
   535     0070                     ___awmod@divisor:	
   536                           ; 2 bytes @ 0x0
   537                           
   538     0070                     ___lldiv@divisor:	
   539                           ; 2 bytes @ 0x0
   540                           
   541                           
   542                           ; 4 bytes @ 0x0
   543     0070                     	ds	1
   544     0071                     ??___bmul:
   545     0071                     ___bmul@product:	
   546                           ; 1 bytes @ 0x1
   547                           
   548                           
   549                           ; 1 bytes @ 0x1
   550     0071                     	ds	1
   551     0072                     ___bmul@multiplier:
   552     0072                     i2c_read@val:	
   553                           ; 1 bytes @ 0x2
   554                           
   555     0072                     ___wmul@multiplicand:	
   556                           ; 2 bytes @ 0x2
   557                           
   558     0072                     ___awdiv@dividend:	
   559                           ; 2 bytes @ 0x2
   560                           
   561     0072                     ___awmod@dividend:	
   562                           ; 2 bytes @ 0x2
   563                           
   564                           
   565                           ; 2 bytes @ 0x2
   566     0072                     	ds	1
   567     0073                     ??_delay:
   568     0073                     delay@del:	
   569                           ; 1 bytes @ 0x3
   570                           
   571                           
   572                           ; 1 bytes @ 0x3
   573     0073                     	ds	1
   574     0074                     ??_lcd_cmd:
   575     0074                     ??_lcd_data:	
   576                           ; 1 bytes @ 0x4
   577                           
   578     0074                     ??___wmul:	
   579                           ; 1 bytes @ 0x4
   580                           
   581     0074                     ??___awdiv:	
   582                           ; 1 bytes @ 0x4
   583                           
   584     0074                     ??___awmod:	
   585                           ; 1 bytes @ 0x4
   586                           
   587     0074                     lcd_cmd@i:	
   588                           ; 1 bytes @ 0x4
   589                           
   590     0074                     lcd_data@i:	
   591                           ; 1 bytes @ 0x4
   592                           
   593     0074                     ___awdiv@counter:	
   594                           ; 1 bytes @ 0x4
   595                           
   596     0074                     ___awmod@counter:	
   597                           ; 1 bytes @ 0x4
   598                           
   599     0074                     ___wmul@product:	
   600                           ; 1 bytes @ 0x4
   601                           
   602     0074                     ___lldiv@dividend:	
   603                           ; 2 bytes @ 0x4
   604                           
   605                           
   606                           ; 4 bytes @ 0x4
   607     0074                     	ds	1
   608     0075                     ??_init:
   609     0075                     ?_days:	
   610                           ; 1 bytes @ 0x5
   611                           
   612     0075                     ___awdiv@sign:	
   613                           ; 1 bytes @ 0x5
   614                           
   615     0075                     ___awmod@sign:	
   616                           ; 1 bytes @ 0x5
   617                           
   618     0075                     days@day:	
   619                           ; 1 bytes @ 0x5
   620                           
   621                           
   622                           ; 2 bytes @ 0x5
   623     0075                     	ds	1
   624     0076                     ?_bcd2dec:
   625     0076                     bcd2dec@temp:	
   626                           ; 2 bytes @ 0x6
   627                           
   628     0076                     ___awdiv@quotient:	
   629                           ; 2 bytes @ 0x6
   630                           
   631                           
   632                           ; 2 bytes @ 0x6
   633     0076                     	ds	1
   634     0077                     ??_days:
   635                           
   636                           ; 1 bytes @ 0x7
   637     0077                     	ds	1
   638     0078                     ??_bcd2dec:
   639     0078                     ??___lldiv:	
   640                           ; 1 bytes @ 0x8
   641                           
   642     0078                     ?_dec2bcd:	
   643                           ; 1 bytes @ 0x8
   644                           
   645     0078                     dec2bcd@temp:	
   646                           ; 2 bytes @ 0x8
   647                           
   648                           
   649                           ; 2 bytes @ 0x8
   650     0078                     	ds	1
   651     0079                     ___lldiv@quotient:
   652                           
   653                           ; 4 bytes @ 0x9
   654     0079                     	ds	1
   655     007A                     ??_dec2bcd:
   656     007A                     ??_update:	
   657                           ; 1 bytes @ 0xA
   658                           
   659                           
   660                           ; 1 bytes @ 0xA
   661     007A                     	ds	2
   662     007C                     ??_setup:
   663                           
   664                           ; 1 bytes @ 0xC
   665     007C                     	ds	1
   666     007D                     ___lldiv@counter:
   667                           
   668                           ; 1 bytes @ 0xD
   669     007D                     	ds	1
   670                           
   671                           	psect	cstackBANK0
   672     0054                     __pcstackBANK0:
   673     0054                     ?_i2c_init:
   674     0054                     i2c_init@baud:	
   675                           ; 1 bytes @ 0x0
   676                           
   677                           
   678                           ; 4 bytes @ 0x0
   679     0054                     	ds	4
   680     0058                     ??_i2c_init:
   681                           
   682                           ; 1 bytes @ 0x4
   683     0058                     	ds	4
   684     005C                     ??_main:
   685                           
   686                           ; 1 bytes @ 0x8
   687     005C                     	ds	3
   688                           
   689                           	psect	maintext
   690     0591                     __pmaintext:	
   691 ;;
   692 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   693 ;;
   694 ;; *************** function _main *****************
   695 ;; Defined at:
   696 ;;		line 3 in file "RTC_API_main.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : B00/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   710 ;;      Params:         0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0
   712 ;;      Temps:          0       3       0       0       0
   713 ;;      Totals:         0       3       0       0       0
   714 ;;Total ram usage:        3 bytes
   715 ;; Hardware stack levels required when called: 4
   716 ;; This function calls:
   717 ;;		___awdiv
   718 ;;		___awmod
   719 ;;		_days
   720 ;;		_dec2bcd
   721 ;;		_i2c_init
   722 ;;		_init
   723 ;;		_lcd_cmd
   724 ;;		_lcd_data
   725 ;;		_setup
   726 ;;		_update
   727 ;; This function is called by:
   728 ;;		Startup code after reset
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732     0591                     _main:	
   733                           ;psect for function _main
   734                           
   735     0591                     l1487:	
   736                           ;incstack = 0
   737                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   738                           
   739                           
   740                           ;RTC_API_main.c: 4:     init();
   741     0591  120A  118A  2233  120A  118A  	fcall	_init
   742                           
   743                           ;RTC_API_main.c: 5:     i2c_init(10000);
   744     0596  3000               	movlw	0
   745     0597  1283               	bcf	3,5	;RP0=0, select bank0
   746     0598  1303               	bcf	3,6	;RP1=0, select bank0
   747     0599  00D7               	movwf	i2c_init@baud+3
   748     059A  3000               	movlw	0
   749     059B  00D6               	movwf	i2c_init@baud+2
   750     059C  3027               	movlw	39
   751     059D  00D5               	movwf	i2c_init@baud+1
   752     059E  3010               	movlw	16
   753     059F  00D4               	movwf	i2c_init@baud
   754     05A0  120A  118A  21A4  120A  118A  	fcall	_i2c_init
   755                           
   756                           ;RTC_API_main.c: 6:     setup();
   757     05A5  120A  118A  235F  120A  118A  	fcall	_setup
   758     05AA                     l186:	
   759                           ;RTC_API_main.c: 7:     while(1) {
   760                           
   761                           
   762                           ;RTC_API_main.c: 8:         update();
   763     05AA  120A  118A  24BB  120A  118A  	fcall	_update
   764                           
   765                           ;RTC_API_main.c: 9:         hour1=(dec2bcd(hour)&0x1F)-6;
   766     05AF  1283               	bcf	3,5	;RP0=0, select bank0
   767     05B0  1303               	bcf	3,6	;RP1=0, select bank0
   768     05B1  083B               	movf	_hour+1,w
   769     05B2  00F9               	movwf	dec2bcd@temp+1
   770     05B3  083A               	movf	_hour,w
   771     05B4  00F8               	movwf	dec2bcd@temp
   772     05B5  120A  118A  2140  120A  118A  	fcall	_dec2bcd
   773     05BA  301F               	movlw	31
   774     05BB  0578               	andwf	?_dec2bcd,w
   775     05BC  1283               	bcf	3,5	;RP0=0, select bank0
   776     05BD  1303               	bcf	3,6	;RP1=0, select bank0
   777     05BE  00DC               	movwf	??_main
   778     05BF  3000               	movlw	0
   779     05C0  0579               	andwf	?_dec2bcd+1,w
   780     05C1  00DD               	movwf	??_main+1
   781     05C2  085C               	movf	??_main,w
   782     05C3  3EFA               	addlw	250
   783     05C4  00DF               	movwf	_hour1
   784     05C5  085D               	movf	??_main+1,w
   785     05C6  1803               	skipnc
   786     05C7  3E01               	addlw	1
   787     05C8  3EFF               	addlw	255
   788     05C9  00E0               	movwf	_hour1+1
   789                           
   790                           ;RTC_API_main.c: 10:         lcd_cmd(0x80);
   791     05CA  3080               	movlw	128
   792     05CB  120A  118A  2082  120A  118A  	fcall	_lcd_cmd
   793     05D0                     l1489:
   794                           
   795                           ;RTC_API_main.c: 11:         for(i=0; i<4; i++)
   796     05D0  1283               	bcf	3,5	;RP0=0, select bank0
   797     05D1  1303               	bcf	3,6	;RP1=0, select bank0
   798     05D2  01E1               	clrf	_i
   799     05D3  01E2               	clrf	_i+1
   800     05D4                     l1495:
   801                           
   802                           ;RTC_API_main.c: 12:             lcd_data(msg1[i]);
   803     05D4  1283               	bcf	3,5	;RP0=0, select bank0
   804     05D5  1303               	bcf	3,6	;RP1=0, select bank0
   805     05D6  0861               	movf	_i,w
   806     05D7  3E25               	addlw	(low (_msg1| 0))& (0+255)
   807     05D8  0084               	movwf	4
   808     05D9  1383               	bcf	3,7	;select IRP bank0
   809     05DA  0800               	movf	0,w
   810     05DB  120A  118A  2071  120A  118A  	fcall	_lcd_data
   811     05E0                     l1497:
   812     05E0  3001               	movlw	1
   813     05E1  1283               	bcf	3,5	;RP0=0, select bank0
   814     05E2  1303               	bcf	3,6	;RP1=0, select bank0
   815     05E3  07E1               	addwf	_i,f
   816     05E4  1803               	skipnc
   817     05E5  0AE2               	incf	_i+1,f
   818     05E6  3000               	movlw	0
   819     05E7  07E2               	addwf	_i+1,f
   820     05E8                     l1499:
   821     05E8  0862               	movf	_i+1,w
   822     05E9  3A80               	xorlw	128
   823     05EA  00FF               	movwf	btemp+1
   824     05EB  3080               	movlw	128
   825     05EC  027F               	subwf	btemp+1,w
   826     05ED  1D03               	skipz
   827     05EE  2DF1               	goto	u845
   828     05EF  3004               	movlw	4
   829     05F0  0261               	subwf	_i,w
   830     05F1                     u845:
   831     05F1  1C03               	skipc
   832     05F2  2DF4               	goto	u841
   833     05F3  2DF5               	goto	u840
   834     05F4                     u841:
   835     05F4  2DD4               	goto	l1495
   836     05F5                     u840:
   837     05F5                     l1501:
   838                           
   839                           ;RTC_API_main.c: 13:         lcd_data(hour1/10+'0');
   840     05F5  300A               	movlw	10
   841     05F6  00F0               	movwf	___awdiv@divisor
   842     05F7  3000               	movlw	0
   843     05F8  00F1               	movwf	___awdiv@divisor+1
   844     05F9  1283               	bcf	3,5	;RP0=0, select bank0
   845     05FA  1303               	bcf	3,6	;RP1=0, select bank0
   846     05FB  0860               	movf	_hour1+1,w
   847     05FC  00F3               	movwf	___awdiv@dividend+1
   848     05FD  085F               	movf	_hour1,w
   849     05FE  00F2               	movwf	___awdiv@dividend
   850     05FF  120A  118A  22F8  120A  118A  	fcall	___awdiv
   851     0604  0870               	movf	?___awdiv,w
   852     0605  3E30               	addlw	48
   853     0606  120A  118A  2071  120A  118A  	fcall	_lcd_data
   854                           
   855                           ;RTC_API_main.c: 14:         lcd_data(hour1%10+'0');
   856     060B  300A               	movlw	10
   857     060C  00F0               	movwf	___awmod@divisor
   858     060D  3000               	movlw	0
   859     060E  00F1               	movwf	___awmod@divisor+1
   860     060F  1283               	bcf	3,5	;RP0=0, select bank0
   861     0610  1303               	bcf	3,6	;RP1=0, select bank0
   862     0611  0860               	movf	_hour1+1,w
   863     0612  00F3               	movwf	___awmod@dividend+1
   864     0613  085F               	movf	_hour1,w
   865     0614  00F2               	movwf	___awmod@dividend
   866     0615  120A  118A  21DA  120A  118A  	fcall	___awmod
   867     061A  0870               	movf	?___awmod,w
   868     061B  3E30               	addlw	48
   869     061C  120A  118A  2071  120A  118A  	fcall	_lcd_data
   870                           
   871                           ;RTC_API_main.c: 15:         lcd_data('-');
   872     0621  302D               	movlw	45
   873     0622  120A  118A  2071  120A  118A  	fcall	_lcd_data
   874                           
   875                           ;RTC_API_main.c: 16:         lcd_data(min/10+'0');
   876     0627  300A               	movlw	10
   877     0628  00F0               	movwf	___awdiv@divisor
   878     0629  3000               	movlw	0
   879     062A  00F1               	movwf	___awdiv@divisor+1
   880     062B  1283               	bcf	3,5	;RP0=0, select bank0
   881     062C  1303               	bcf	3,6	;RP1=0, select bank0
   882     062D  083D               	movf	_min+1,w
   883     062E  00F3               	movwf	___awdiv@dividend+1
   884     062F  083C               	movf	_min,w
   885     0630  00F2               	movwf	___awdiv@dividend
   886     0631  120A  118A  22F8  120A  118A  	fcall	___awdiv
   887     0636  0870               	movf	?___awdiv,w
   888     0637  3E30               	addlw	48
   889     0638  120A  118A  2071  120A  118A  	fcall	_lcd_data
   890                           
   891                           ;RTC_API_main.c: 17:         lcd_data(min%10+'0');
   892     063D  300A               	movlw	10
   893     063E  00F0               	movwf	___awmod@divisor
   894     063F  3000               	movlw	0
   895     0640  00F1               	movwf	___awmod@divisor+1
   896     0641  1283               	bcf	3,5	;RP0=0, select bank0
   897     0642  1303               	bcf	3,6	;RP1=0, select bank0
   898     0643  083D               	movf	_min+1,w
   899     0644  00F3               	movwf	___awmod@dividend+1
   900     0645  083C               	movf	_min,w
   901     0646  00F2               	movwf	___awmod@dividend
   902     0647  120A  118A  21DA  120A  118A  	fcall	___awmod
   903     064C  0870               	movf	?___awmod,w
   904     064D  3E30               	addlw	48
   905     064E  120A  118A  2071  120A  118A  	fcall	_lcd_data
   906                           
   907                           ;RTC_API_main.c: 18:         lcd_data('-');
   908     0653  302D               	movlw	45
   909     0654  120A  118A  2071  120A  118A  	fcall	_lcd_data
   910                           
   911                           ;RTC_API_main.c: 19:         lcd_data(sec/10+'0');
   912     0659  300A               	movlw	10
   913     065A  00F0               	movwf	___awdiv@divisor
   914     065B  3000               	movlw	0
   915     065C  00F1               	movwf	___awdiv@divisor+1
   916     065D  1283               	bcf	3,5	;RP0=0, select bank0
   917     065E  1303               	bcf	3,6	;RP1=0, select bank0
   918     065F  083F               	movf	_sec+1,w
   919     0660  00F3               	movwf	___awdiv@dividend+1
   920     0661  083E               	movf	_sec,w
   921     0662  00F2               	movwf	___awdiv@dividend
   922     0663  120A  118A  22F8  120A  118A  	fcall	___awdiv
   923     0668  0870               	movf	?___awdiv,w
   924     0669  3E30               	addlw	48
   925     066A  120A  118A  2071  120A  118A  	fcall	_lcd_data
   926                           
   927                           ;RTC_API_main.c: 20:         lcd_data(sec%10+'0');
   928     066F  300A               	movlw	10
   929     0670  00F0               	movwf	___awmod@divisor
   930     0671  3000               	movlw	0
   931     0672  00F1               	movwf	___awmod@divisor+1
   932     0673  1283               	bcf	3,5	;RP0=0, select bank0
   933     0674  1303               	bcf	3,6	;RP1=0, select bank0
   934     0675  083F               	movf	_sec+1,w
   935     0676  00F3               	movwf	___awmod@dividend+1
   936     0677  083E               	movf	_sec,w
   937     0678  00F2               	movwf	___awmod@dividend
   938     0679  120A  118A  21DA  120A  118A  	fcall	___awmod
   939     067E  0870               	movf	?___awmod,w
   940     067F  3E30               	addlw	48
   941     0680  120A  118A  2071  120A  118A  	fcall	_lcd_data
   942                           
   943                           ;RTC_API_main.c: 21:         if(!(dec2bcd(hour)&0x20))
   944     0685  1283               	bcf	3,5	;RP0=0, select bank0
   945     0686  1303               	bcf	3,6	;RP1=0, select bank0
   946     0687  083B               	movf	_hour+1,w
   947     0688  00F9               	movwf	dec2bcd@temp+1
   948     0689  083A               	movf	_hour,w
   949     068A  00F8               	movwf	dec2bcd@temp
   950     068B  120A  118A  2140  120A  118A  	fcall	_dec2bcd
   951     0690  1AF8               	btfsc	?_dec2bcd,5
   952     0691  2E93               	goto	u851
   953     0692  2E94               	goto	u850
   954     0693                     u851:
   955     0693  2EBA               	goto	l1515
   956     0694                     u850:
   957     0694                     l1503:
   958                           
   959                           ;RTC_API_main.c: 22:             for(i=0; i<3; i++)
   960     0694  1283               	bcf	3,5	;RP0=0, select bank0
   961     0695  1303               	bcf	3,6	;RP1=0, select bank0
   962     0696  01E1               	clrf	_i
   963     0697  01E2               	clrf	_i+1
   964     0698                     l1509:
   965                           
   966                           ;RTC_API_main.c: 23:                 lcd_data(mode1[i]);
   967     0698  1283               	bcf	3,5	;RP0=0, select bank0
   968     0699  1303               	bcf	3,6	;RP1=0, select bank0
   969     069A  0861               	movf	_i,w
   970     069B  3E2E               	addlw	(low (_mode1| 0))& (0+255)
   971     069C  0084               	movwf	4
   972     069D  1383               	bcf	3,7	;select IRP bank0
   973     069E  0800               	movf	0,w
   974     069F  120A  118A  2071  120A  118A  	fcall	_lcd_data
   975     06A4                     l1511:
   976     06A4  3001               	movlw	1
   977     06A5  1283               	bcf	3,5	;RP0=0, select bank0
   978     06A6  1303               	bcf	3,6	;RP1=0, select bank0
   979     06A7  07E1               	addwf	_i,f
   980     06A8  1803               	skipnc
   981     06A9  0AE2               	incf	_i+1,f
   982     06AA  3000               	movlw	0
   983     06AB  07E2               	addwf	_i+1,f
   984     06AC                     l1513:
   985     06AC  0862               	movf	_i+1,w
   986     06AD  3A80               	xorlw	128
   987     06AE  00FF               	movwf	btemp+1
   988     06AF  3080               	movlw	128
   989     06B0  027F               	subwf	btemp+1,w
   990     06B1  1D03               	skipz
   991     06B2  2EB5               	goto	u865
   992     06B3  3003               	movlw	3
   993     06B4  0261               	subwf	_i,w
   994     06B5                     u865:
   995     06B5  1C03               	skipc
   996     06B6  2EB8               	goto	u861
   997     06B7  2EB9               	goto	u860
   998     06B8                     u861:
   999     06B8  2E98               	goto	l1509
  1000     06B9                     u860:
  1001     06B9  2EDF               	goto	l1527
  1002     06BA                     l1515:
  1003                           
  1004                           ;RTC_API_main.c: 25:             for(i=0; i<3; i++)
  1005     06BA  1283               	bcf	3,5	;RP0=0, select bank0
  1006     06BB  1303               	bcf	3,6	;RP1=0, select bank0
  1007     06BC  01E1               	clrf	_i
  1008     06BD  01E2               	clrf	_i+1
  1009     06BE                     l1521:
  1010                           
  1011                           ;RTC_API_main.c: 26:                 lcd_data(mode2[i]);
  1012     06BE  1283               	bcf	3,5	;RP0=0, select bank0
  1013     06BF  1303               	bcf	3,6	;RP1=0, select bank0
  1014     06C0  0861               	movf	_i,w
  1015     06C1  3E2A               	addlw	(low (_mode2| 0))& (0+255)
  1016     06C2  0084               	movwf	4
  1017     06C3  1383               	bcf	3,7	;select IRP bank0
  1018     06C4  0800               	movf	0,w
  1019     06C5  120A  118A  2071  120A  118A  	fcall	_lcd_data
  1020     06CA                     l1523:
  1021     06CA  3001               	movlw	1
  1022     06CB  1283               	bcf	3,5	;RP0=0, select bank0
  1023     06CC  1303               	bcf	3,6	;RP1=0, select bank0
  1024     06CD  07E1               	addwf	_i,f
  1025     06CE  1803               	skipnc
  1026     06CF  0AE2               	incf	_i+1,f
  1027     06D0  3000               	movlw	0
  1028     06D1  07E2               	addwf	_i+1,f
  1029     06D2                     l1525:
  1030     06D2  0862               	movf	_i+1,w
  1031     06D3  3A80               	xorlw	128
  1032     06D4  00FF               	movwf	btemp+1
  1033     06D5  3080               	movlw	128
  1034     06D6  027F               	subwf	btemp+1,w
  1035     06D7  1D03               	skipz
  1036     06D8  2EDB               	goto	u875
  1037     06D9  3003               	movlw	3
  1038     06DA  0261               	subwf	_i,w
  1039     06DB                     u875:
  1040     06DB  1C03               	skipc
  1041     06DC  2EDE               	goto	u871
  1042     06DD  2EDF               	goto	u870
  1043     06DE                     u871:
  1044     06DE  2EBE               	goto	l1521
  1045     06DF                     u870:
  1046     06DF                     l1527:
  1047                           
  1048                           ;RTC_API_main.c: 28:         lcd_cmd(0xC0);
  1049     06DF  30C0               	movlw	192
  1050     06E0  120A  118A  2082  120A  118A  	fcall	_lcd_cmd
  1051     06E5                     l1529:
  1052                           
  1053                           ;RTC_API_main.c: 29:         for(i=0; i<4; i++)
  1054     06E5  1283               	bcf	3,5	;RP0=0, select bank0
  1055     06E6  1303               	bcf	3,6	;RP1=0, select bank0
  1056     06E7  01E1               	clrf	_i
  1057     06E8  01E2               	clrf	_i+1
  1058     06E9                     l1535:
  1059                           
  1060                           ;RTC_API_main.c: 30:             lcd_data(msg2[i]);
  1061     06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1062     06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1063     06EB  0861               	movf	_i,w
  1064     06EC  3E20               	addlw	(low (_msg2| 0))& (0+255)
  1065     06ED  0084               	movwf	4
  1066     06EE  1383               	bcf	3,7	;select IRP bank0
  1067     06EF  0800               	movf	0,w
  1068     06F0  120A  118A  2071  120A  118A  	fcall	_lcd_data
  1069     06F5                     l1537:
  1070     06F5  3001               	movlw	1
  1071     06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1072     06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1073     06F8  07E1               	addwf	_i,f
  1074     06F9  1803               	skipnc
  1075     06FA  0AE2               	incf	_i+1,f
  1076     06FB  3000               	movlw	0
  1077     06FC  07E2               	addwf	_i+1,f
  1078     06FD                     l1539:
  1079     06FD  0862               	movf	_i+1,w
  1080     06FE  3A80               	xorlw	128
  1081     06FF  00FF               	movwf	btemp+1
  1082     0700  3080               	movlw	128
  1083     0701  027F               	subwf	btemp+1,w
  1084     0702  1D03               	skipz
  1085     0703  2F06               	goto	u885
  1086     0704  3004               	movlw	4
  1087     0705  0261               	subwf	_i,w
  1088     0706                     u885:
  1089     0706  1C03               	skipc
  1090     0707  2F09               	goto	u881
  1091     0708  2F0A               	goto	u880
  1092     0709                     u881:
  1093     0709  2EE9               	goto	l1535
  1094     070A                     u880:
  1095     070A                     l1541:
  1096                           
  1097                           ;RTC_API_main.c: 31:         lcd_data(date/10+'0');
  1098     070A  300A               	movlw	10
  1099     070B  00F0               	movwf	___awdiv@divisor
  1100     070C  3000               	movlw	0
  1101     070D  00F1               	movwf	___awdiv@divisor+1
  1102     070E  1283               	bcf	3,5	;RP0=0, select bank0
  1103     070F  1303               	bcf	3,6	;RP1=0, select bank0
  1104     0710  0839               	movf	_date+1,w
  1105     0711  00F3               	movwf	___awdiv@dividend+1
  1106     0712  0838               	movf	_date,w
  1107     0713  00F2               	movwf	___awdiv@dividend
  1108     0714  120A  118A  22F8  120A  118A  	fcall	___awdiv
  1109     0719  0870               	movf	?___awdiv,w
  1110     071A  3E30               	addlw	48
  1111     071B  120A  118A  2071  120A  118A  	fcall	_lcd_data
  1112                           
  1113                           ;RTC_API_main.c: 32:         lcd_data(date%10+'0');
  1114     0720  300A               	movlw	10
  1115     0721  00F0               	movwf	___awmod@divisor
  1116     0722  3000               	movlw	0
  1117     0723  00F1               	movwf	___awmod@divisor+1
  1118     0724  1283               	bcf	3,5	;RP0=0, select bank0
  1119     0725  1303               	bcf	3,6	;RP1=0, select bank0
  1120     0726  0839               	movf	_date+1,w
  1121     0727  00F3               	movwf	___awmod@dividend+1
  1122     0728  0838               	movf	_date,w
  1123     0729  00F2               	movwf	___awmod@dividend
  1124     072A  120A  118A  21DA  120A  118A  	fcall	___awmod
  1125     072F  0870               	movf	?___awmod,w
  1126     0730  3E30               	addlw	48
  1127     0731  120A  118A  2071  120A  118A  	fcall	_lcd_data
  1128                           
  1129                           ;RTC_API_main.c: 33:         lcd_data('-');
  1130     0736  302D               	movlw	45
  1131     0737  120A  118A  2071  120A  118A  	fcall	_lcd_data
  1132                           
  1133                           ;RTC_API_main.c: 34:         lcd_data(month/10+'0');
  1134     073C  300A               	movlw	10
  1135     073D  00F0               	movwf	___awdiv@divisor
  1136     073E  3000               	movlw	0
  1137     073F  00F1               	movwf	___awdiv@divisor+1
  1138     0740  1283               	bcf	3,5	;RP0=0, select bank0
  1139     0741  1303               	bcf	3,6	;RP1=0, select bank0
  1140     0742  0837               	movf	_month+1,w
  1141     0743  00F3               	movwf	___awdiv@dividend+1
  1142     0744  0836               	movf	_month,w
  1143     0745  00F2               	movwf	___awdiv@dividend
  1144     0746  120A  118A  22F8  120A  118A  	fcall	___awdiv
  1145     074B  0870               	movf	?___awdiv,w
  1146     074C  3E30               	addlw	48
  1147     074D  120A  118A  2071  120A  118A  	fcall	_lcd_data
  1148                           
  1149                           ;RTC_API_main.c: 35:         lcd_data(month%10+'0');
  1150     0752  300A               	movlw	10
  1151     0753  00F0               	movwf	___awmod@divisor
  1152     0754  3000               	movlw	0
  1153     0755  00F1               	movwf	___awmod@divisor+1
  1154     0756  1283               	bcf	3,5	;RP0=0, select bank0
  1155     0757  1303               	bcf	3,6	;RP1=0, select bank0
  1156     0758  0837               	movf	_month+1,w
  1157     0759  00F3               	movwf	___awmod@dividend+1
  1158     075A  0836               	movf	_month,w
  1159     075B  00F2               	movwf	___awmod@dividend
  1160     075C  120A  118A  21DA  120A  118A  	fcall	___awmod
  1161     0761  0870               	movf	?___awmod,w
  1162     0762  3E30               	addlw	48
  1163     0763  120A  118A  2071  120A  118A  	fcall	_lcd_data
  1164                           
  1165                           ;RTC_API_main.c: 36:         lcd_data('-');
  1166     0768  302D               	movlw	45
  1167     0769  120A  118A  2071  120A  118A  	fcall	_lcd_data
  1168                           
  1169                           ;RTC_API_main.c: 37:         lcd_data(year/10+'0');
  1170     076E  300A               	movlw	10
  1171     076F  00F0               	movwf	___awdiv@divisor
  1172     0770  3000               	movlw	0
  1173     0771  00F1               	movwf	___awdiv@divisor+1
  1174     0772  1283               	bcf	3,5	;RP0=0, select bank0
  1175     0773  1303               	bcf	3,6	;RP1=0, select bank0
  1176     0774  0833               	movf	_year+1,w
  1177     0775  00F3               	movwf	___awdiv@dividend+1
  1178     0776  0832               	movf	_year,w
  1179     0777  00F2               	movwf	___awdiv@dividend
  1180     0778  120A  118A  22F8  120A  118A  	fcall	___awdiv
  1181     077D  0870               	movf	?___awdiv,w
  1182     077E  3E30               	addlw	48
  1183     077F  120A  118A  2071  120A  118A  	fcall	_lcd_data
  1184                           
  1185                           ;RTC_API_main.c: 38:         lcd_data(year%10+'0');
  1186     0784  300A               	movlw	10
  1187     0785  00F0               	movwf	___awmod@divisor
  1188     0786  3000               	movlw	0
  1189     0787  00F1               	movwf	___awmod@divisor+1
  1190     0788  1283               	bcf	3,5	;RP0=0, select bank0
  1191     0789  1303               	bcf	3,6	;RP1=0, select bank0
  1192     078A  0833               	movf	_year+1,w
  1193     078B  00F3               	movwf	___awmod@dividend+1
  1194     078C  0832               	movf	_year,w
  1195     078D  00F2               	movwf	___awmod@dividend
  1196     078E  120A  118A  21DA  120A  118A  	fcall	___awmod
  1197     0793  0870               	movf	?___awmod,w
  1198     0794  3E30               	addlw	48
  1199     0795  120A  118A  2071  120A  118A  	fcall	_lcd_data
  1200                           
  1201                           ;RTC_API_main.c: 39:         if(dec2bcd(hour)&0x52) {
  1202     079A  1283               	bcf	3,5	;RP0=0, select bank0
  1203     079B  1303               	bcf	3,6	;RP1=0, select bank0
  1204     079C  083B               	movf	_hour+1,w
  1205     079D  00F9               	movwf	dec2bcd@temp+1
  1206     079E  083A               	movf	_hour,w
  1207     079F  00F8               	movwf	dec2bcd@temp
  1208     07A0  120A  118A  2140  120A  118A  	fcall	_dec2bcd
  1209     07A5  3052               	movlw	82
  1210     07A6  0578               	andwf	?_dec2bcd,w
  1211     07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1212     07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1213     07A9  00DC               	movwf	??_main
  1214     07AA  3000               	movlw	0
  1215     07AB  0579               	andwf	?_dec2bcd+1,w
  1216     07AC  00DD               	movwf	??_main+1
  1217     07AD  085C               	movf	??_main,w
  1218     07AE  045D               	iorwf	??_main+1,w
  1219     07AF  1903               	btfsc	3,2
  1220     07B0  2FB2               	goto	u891
  1221     07B1  2FB3               	goto	u890
  1222     07B2                     u891:
  1223     07B2  2FCC               	goto	l1549
  1224     07B3                     u890:
  1225     07B3                     l1543:
  1226                           
  1227                           ;RTC_API_main.c: 40:             day++;
  1228     07B3  3001               	movlw	1
  1229     07B4  07B4               	addwf	_day,f
  1230     07B5  1803               	skipnc
  1231     07B6  0AB5               	incf	_day+1,f
  1232     07B7  3000               	movlw	0
  1233     07B8  07B5               	addwf	_day+1,f
  1234     07B9                     l1545:
  1235                           
  1236                           ;RTC_API_main.c: 41:             if(day>7)
  1237     07B9  0835               	movf	_day+1,w
  1238     07BA  3A80               	xorlw	128
  1239     07BB  00FF               	movwf	btemp+1
  1240     07BC  3080               	movlw	128
  1241     07BD  027F               	subwf	btemp+1,w
  1242     07BE  1D03               	skipz
  1243     07BF  2FC2               	goto	u905
  1244     07C0  3008               	movlw	8
  1245     07C1  0234               	subwf	_day,w
  1246     07C2                     u905:
  1247     07C2  1C03               	skipc
  1248     07C3  2FC5               	goto	u901
  1249     07C4  2FC6               	goto	u900
  1250     07C5                     u901:
  1251     07C5  2FCC               	goto	l1549
  1252     07C6                     u900:
  1253     07C6                     l1547:
  1254                           
  1255                           ;RTC_API_main.c: 42:                 day=1;
  1256     07C6  3001               	movlw	1
  1257     07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1258     07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1259     07C9  00B4               	movwf	_day
  1260     07CA  3000               	movlw	0
  1261     07CB  00B5               	movwf	_day+1
  1262     07CC                     l1549:
  1263                           
  1264                           ;RTC_API_main.c: 44:         days(day);
  1265     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1266     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1267     07CE  0835               	movf	_day+1,w
  1268     07CF  00F6               	movwf	days@day+1
  1269     07D0  0834               	movf	_day,w
  1270     07D1  00F5               	movwf	days@day
  1271     07D2  120A  118A  23EE  120A  118A  	fcall	_days
  1272     07D7                     l1551:
  1273                           
  1274                           ;RTC_API_main.c: 45:         _delay((unsigned long)((100)*(16000000/4000.0)));
  1275     07D7  3003               	movlw	3
  1276     07D8  1283               	bcf	3,5	;RP0=0, select bank0
  1277     07D9  1303               	bcf	3,6	;RP1=0, select bank0
  1278     07DA  00DE               	movwf	??_main+2
  1279     07DB  3008               	movlw	8
  1280     07DC  00DD               	movwf	??_main+1
  1281     07DD  3076               	movlw	118
  1282     07DE  00DC               	movwf	??_main
  1283     07DF                     u917:
  1284     07DF  0BDC               	decfsz	??_main,f
  1285     07E0  2FDF               	goto	u917
  1286     07E1  0BDD               	decfsz	??_main+1,f
  1287     07E2  2FDF               	goto	u917
  1288     07E3  0BDE               	decfsz	??_main+2,f
  1289     07E4  2FDF               	goto	u917
  1290     07E5  0000               	nop
  1291     07E6  2DAA               	goto	l186
  1292     07E7  120A  118A  2800   	ljmp	start
  1293     07EA                     __end_of_main:
  1294                           
  1295                           	psect	text1
  1296     04BB                     __ptext1:	
  1297 ;; *************** function _update *****************
  1298 ;; Defined at:
  1299 ;;		line 162 in file "RTC_API_driver.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;		None
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;		None
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1    wreg      void 
  1306 ;; Registers used:
  1307 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1313 ;;      Params:         0       0       0       0       0
  1314 ;;      Locals:         0       0       0       0       0
  1315 ;;      Temps:          2       0       0       0       0
  1316 ;;      Totals:         2       0       0       0       0
  1317 ;;Total ram usage:        2 bytes
  1318 ;; Hardware stack levels used: 1
  1319 ;; Hardware stack levels required when called: 2
  1320 ;; This function calls:
  1321 ;;		_bcd2dec
  1322 ;;		_i2c_read
  1323 ;;		_i2c_start
  1324 ;;		_i2c_stop
  1325 ;;		_i2c_write
  1326 ;; This function is called by:
  1327 ;;		_main
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331     04BB                     _update:	
  1332                           ;psect for function _update
  1333                           
  1334     04BB                     l1457:	
  1335                           ;incstack = 0
  1336                           ; Regs used in _update: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1337                           
  1338                           
  1339                           ;RTC_API_driver.c: 163:     i2c_start();
  1340     04BB  120A  118A  2041  120A  118A  	fcall	_i2c_start
  1341     04C0                     l1459:
  1342                           
  1343                           ;RTC_API_driver.c: 164:     i2c_write(0xD0);
  1344     04C0  30D0               	movlw	208
  1345     04C1  120A  118A  2093  120A  118A  	fcall	_i2c_write
  1346     04C6                     l1461:
  1347                           
  1348                           ;RTC_API_driver.c: 165:     i2c_write(0x00);
  1349     04C6  3000               	movlw	0
  1350     04C7  120A  118A  2093  120A  118A  	fcall	_i2c_write
  1351                           
  1352                           ;RTC_API_driver.c: 166:     i2c_stop();
  1353     04CC  120A  118A  204A  120A  118A  	fcall	_i2c_stop
  1354                           
  1355                           ;RTC_API_driver.c: 168:     i2c_start();
  1356     04D1  120A  118A  2041  120A  118A  	fcall	_i2c_start
  1357     04D6                     l1463:
  1358                           
  1359                           ;RTC_API_driver.c: 169:     i2c_write(0xD1);
  1360     04D6  30D1               	movlw	209
  1361     04D7  120A  118A  2093  120A  118A  	fcall	_i2c_write
  1362     04DC                     l1465:
  1363                           
  1364                           ;RTC_API_driver.c: 170:     sec = bcd2dec(i2c_read());
  1365     04DC  120A  118A  2118  120A  118A  	fcall	_i2c_read
  1366     04E1  00FA               	movwf	??_update
  1367     04E2  01FB               	clrf	??_update+1
  1368     04E3  087A               	movf	??_update,w
  1369     04E4  00F6               	movwf	bcd2dec@temp
  1370     04E5  087B               	movf	??_update+1,w
  1371     04E6  00F7               	movwf	bcd2dec@temp+1
  1372     04E7  120A  118A  20F3  120A  118A  	fcall	_bcd2dec
  1373     04EC  0877               	movf	?_bcd2dec+1,w
  1374     04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1375     04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1376     04EF  00BF               	movwf	_sec+1
  1377     04F0  0876               	movf	?_bcd2dec,w
  1378     04F1  00BE               	movwf	_sec
  1379     04F2                     l1467:
  1380                           
  1381                           ;RTC_API_driver.c: 171:     min = bcd2dec(i2c_read());
  1382     04F2  120A  118A  2118  120A  118A  	fcall	_i2c_read
  1383     04F7  00FA               	movwf	??_update
  1384     04F8  01FB               	clrf	??_update+1
  1385     04F9  087A               	movf	??_update,w
  1386     04FA  00F6               	movwf	bcd2dec@temp
  1387     04FB  087B               	movf	??_update+1,w
  1388     04FC  00F7               	movwf	bcd2dec@temp+1
  1389     04FD  120A  118A  20F3  120A  118A  	fcall	_bcd2dec
  1390     0502  0877               	movf	?_bcd2dec+1,w
  1391     0503  1283               	bcf	3,5	;RP0=0, select bank0
  1392     0504  1303               	bcf	3,6	;RP1=0, select bank0
  1393     0505  00BD               	movwf	_min+1
  1394     0506  0876               	movf	?_bcd2dec,w
  1395     0507  00BC               	movwf	_min
  1396     0508                     l1469:
  1397                           
  1398                           ;RTC_API_driver.c: 172:     hour = bcd2dec(i2c_read());
  1399     0508  120A  118A  2118  120A  118A  	fcall	_i2c_read
  1400     050D  00FA               	movwf	??_update
  1401     050E  01FB               	clrf	??_update+1
  1402     050F  087A               	movf	??_update,w
  1403     0510  00F6               	movwf	bcd2dec@temp
  1404     0511  087B               	movf	??_update+1,w
  1405     0512  00F7               	movwf	bcd2dec@temp+1
  1406     0513  120A  118A  20F3  120A  118A  	fcall	_bcd2dec
  1407     0518  0877               	movf	?_bcd2dec+1,w
  1408     0519  1283               	bcf	3,5	;RP0=0, select bank0
  1409     051A  1303               	bcf	3,6	;RP1=0, select bank0
  1410     051B  00BB               	movwf	_hour+1
  1411     051C  0876               	movf	?_bcd2dec,w
  1412     051D  00BA               	movwf	_hour
  1413     051E                     l1471:
  1414                           
  1415                           ;RTC_API_driver.c: 173:     day = bcd2dec(i2c_read());
  1416     051E  120A  118A  2118  120A  118A  	fcall	_i2c_read
  1417     0523  00FA               	movwf	??_update
  1418     0524  01FB               	clrf	??_update+1
  1419     0525  087A               	movf	??_update,w
  1420     0526  00F6               	movwf	bcd2dec@temp
  1421     0527  087B               	movf	??_update+1,w
  1422     0528  00F7               	movwf	bcd2dec@temp+1
  1423     0529  120A  118A  20F3  120A  118A  	fcall	_bcd2dec
  1424     052E  0877               	movf	?_bcd2dec+1,w
  1425     052F  1283               	bcf	3,5	;RP0=0, select bank0
  1426     0530  1303               	bcf	3,6	;RP1=0, select bank0
  1427     0531  00B5               	movwf	_day+1
  1428     0532  0876               	movf	?_bcd2dec,w
  1429     0533  00B4               	movwf	_day
  1430     0534                     l1473:
  1431                           
  1432                           ;RTC_API_driver.c: 174:     date = bcd2dec(i2c_read());
  1433     0534  120A  118A  2118  120A  118A  	fcall	_i2c_read
  1434     0539  00FA               	movwf	??_update
  1435     053A  01FB               	clrf	??_update+1
  1436     053B  087A               	movf	??_update,w
  1437     053C  00F6               	movwf	bcd2dec@temp
  1438     053D  087B               	movf	??_update+1,w
  1439     053E  00F7               	movwf	bcd2dec@temp+1
  1440     053F  120A  118A  20F3  120A  118A  	fcall	_bcd2dec
  1441     0544  0877               	movf	?_bcd2dec+1,w
  1442     0545  1283               	bcf	3,5	;RP0=0, select bank0
  1443     0546  1303               	bcf	3,6	;RP1=0, select bank0
  1444     0547  00B9               	movwf	_date+1
  1445     0548  0876               	movf	?_bcd2dec,w
  1446     0549  00B8               	movwf	_date
  1447     054A                     l1475:
  1448                           
  1449                           ;RTC_API_driver.c: 175:     month = bcd2dec(i2c_read());
  1450     054A  120A  118A  2118  120A  118A  	fcall	_i2c_read
  1451     054F  00FA               	movwf	??_update
  1452     0550  01FB               	clrf	??_update+1
  1453     0551  087A               	movf	??_update,w
  1454     0552  00F6               	movwf	bcd2dec@temp
  1455     0553  087B               	movf	??_update+1,w
  1456     0554  00F7               	movwf	bcd2dec@temp+1
  1457     0555  120A  118A  20F3  120A  118A  	fcall	_bcd2dec
  1458     055A  0877               	movf	?_bcd2dec+1,w
  1459     055B  1283               	bcf	3,5	;RP0=0, select bank0
  1460     055C  1303               	bcf	3,6	;RP1=0, select bank0
  1461     055D  00B7               	movwf	_month+1
  1462     055E  0876               	movf	?_bcd2dec,w
  1463     055F  00B6               	movwf	_month
  1464     0560                     l1477:
  1465                           
  1466                           ;RTC_API_driver.c: 176:     year = bcd2dec(i2c_read());
  1467     0560  120A  118A  2118  120A  118A  	fcall	_i2c_read
  1468     0565  00FA               	movwf	??_update
  1469     0566  01FB               	clrf	??_update+1
  1470     0567  087A               	movf	??_update,w
  1471     0568  00F6               	movwf	bcd2dec@temp
  1472     0569  087B               	movf	??_update+1,w
  1473     056A  00F7               	movwf	bcd2dec@temp+1
  1474     056B  120A  118A  20F3  120A  118A  	fcall	_bcd2dec
  1475     0570  0877               	movf	?_bcd2dec+1,w
  1476     0571  1283               	bcf	3,5	;RP0=0, select bank0
  1477     0572  1303               	bcf	3,6	;RP1=0, select bank0
  1478     0573  00B3               	movwf	_year+1
  1479     0574  0876               	movf	?_bcd2dec,w
  1480     0575  00B2               	movwf	_year
  1481                           
  1482                           ;RTC_API_driver.c: 177:     i2c_stop();
  1483     0576  120A  118A  204A  120A  118A  	fcall	_i2c_stop
  1484                           
  1485                           ;RTC_API_driver.c: 178:     i2c_start();
  1486     057B  120A  118A  2041  120A  118A  	fcall	_i2c_start
  1487     0580                     l1479:
  1488                           
  1489                           ;RTC_API_driver.c: 179:     i2c_write(0xD1);
  1490     0580  30D1               	movlw	209
  1491     0581  120A  118A  2093  120A  118A  	fcall	_i2c_write
  1492     0586                     l1481:
  1493                           
  1494                           ;RTC_API_driver.c: 180:     i2c_read();
  1495     0586  120A  118A  2118  120A  118A  	fcall	_i2c_read
  1496                           
  1497                           ;RTC_API_driver.c: 181:     i2c_stop();
  1498     058B  120A  118A  204A  120A  118A  	fcall	_i2c_stop
  1499     0590                     l111:
  1500     0590  0008               	return
  1501     0591                     __end_of_update:
  1502                           
  1503                           	psect	text2
  1504     0118                     __ptext2:	
  1505 ;; *************** function _i2c_read *****************
  1506 ;; Defined at:
  1507 ;;		line 30 in file "RTC_API_driver.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;		None
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  val             2    2[COMMON] int 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      unsigned char 
  1514 ;; Registers used:
  1515 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1521 ;;      Params:         0       0       0       0       0
  1522 ;;      Locals:         2       0       0       0       0
  1523 ;;      Temps:          2       0       0       0       0
  1524 ;;      Totals:         4       0       0       0       0
  1525 ;;Total ram usage:        4 bytes
  1526 ;; Hardware stack levels used: 1
  1527 ;; Hardware stack levels required when called: 1
  1528 ;; This function calls:
  1529 ;;		_i2c_wait
  1530 ;; This function is called by:
  1531 ;;		_update
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535     0118                     _i2c_read:	
  1536                           ;psect for function _i2c_read
  1537                           
  1538     0118                     l1287:	
  1539                           ;incstack = 0
  1540                           ; Regs used in _i2c_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1541                           
  1542                           
  1543                           ;RTC_API_driver.c: 31:     int val;;RTC_API_driver.c: 32:     i2c_wait();
  1544     0118  120A  118A  2053  120A  118A  	fcall	_i2c_wait
  1545     011D                     l1289:
  1546                           
  1547                           ;RTC_API_driver.c: 33:     (*SSPCON_2)|=0X08;
  1548     011D  1683               	bsf	3,5	;RP0=1, select bank1
  1549     011E  1303               	bcf	3,6	;RP1=0, select bank1
  1550     011F  1591               	bsf	17,3
  1551                           
  1552                           ;RTC_API_driver.c: 34:     i2c_wait();
  1553     0120  120A  118A  2053  120A  118A  	fcall	_i2c_wait
  1554     0125                     l1291:
  1555                           
  1556                           ;RTC_API_driver.c: 35:     if((*PIF1)&0x08)
  1557     0125  1283               	bcf	3,5	;RP0=0, select bank0
  1558     0126  1303               	bcf	3,6	;RP1=0, select bank0
  1559     0127  1D8C               	btfss	12,3
  1560     0128  292A               	goto	u741
  1561     0129  292B               	goto	u740
  1562     012A                     u741:
  1563     012A  292F               	goto	l1295
  1564     012B                     u740:
  1565     012B                     l1293:
  1566                           
  1567                           ;RTC_API_driver.c: 36:         (*PIF1)&=~0x08;
  1568     012B  30F7               	movlw	247
  1569     012C  00FF               	movwf	btemp+1
  1570     012D  087F               	movf	btemp+1,w
  1571     012E  058C               	andwf	12,f
  1572     012F                     l1295:
  1573                           
  1574                           ;RTC_API_driver.c: 37:     val = *SSP_BUF;
  1575     012F  0813               	movf	19,w
  1576     0130  00F0               	movwf	??_i2c_read
  1577     0131  01F1               	clrf	??_i2c_read+1
  1578     0132  0870               	movf	??_i2c_read,w
  1579     0133  00F2               	movwf	i2c_read@val
  1580     0134  0871               	movf	??_i2c_read+1,w
  1581     0135  00F3               	movwf	i2c_read@val+1
  1582     0136                     l1297:
  1583                           
  1584                           ;RTC_API_driver.c: 38:     i2c_wait();
  1585     0136  120A  118A  2053  120A  118A  	fcall	_i2c_wait
  1586     013B                     l1299:
  1587                           
  1588                           ;RTC_API_driver.c: 40:     (*SSPCON_2)|=0x10;
  1589     013B  1683               	bsf	3,5	;RP0=1, select bank1
  1590     013C  1303               	bcf	3,6	;RP1=0, select bank1
  1591     013D  1611               	bsf	17,4
  1592     013E                     l1301:
  1593                           
  1594                           ;RTC_API_driver.c: 41:     return val;
  1595     013E  0872               	movf	i2c_read@val,w
  1596     013F                     l74:
  1597     013F  0008               	return
  1598     0140                     __end_of_i2c_read:
  1599                           
  1600                           	psect	text3
  1601     00F3                     __ptext3:	
  1602 ;; *************** function _bcd2dec *****************
  1603 ;; Defined at:
  1604 ;;		line 146 in file "RTC_API_driver.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  temp            2    6[COMMON] int 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;		None
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  2    6[COMMON] int 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0, pclath, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1618 ;;      Params:         2       0       0       0       0
  1619 ;;      Locals:         0       0       0       0       0
  1620 ;;      Temps:          2       0       0       0       0
  1621 ;;      Totals:         4       0       0       0       0
  1622 ;;Total ram usage:        4 bytes
  1623 ;; Hardware stack levels used: 1
  1624 ;; Hardware stack levels required when called: 1
  1625 ;; This function calls:
  1626 ;;		___wmul
  1627 ;; This function is called by:
  1628 ;;		_update
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632     00F3                     _bcd2dec:	
  1633                           ;psect for function _bcd2dec
  1634                           
  1635     00F3                     l1339:	
  1636                           ;incstack = 0
  1637                           ; Regs used in _bcd2dec: [wreg+status,2+status,0+pclath+cstack]
  1638                           
  1639                           
  1640                           ;RTC_API_driver.c: 147:     return ((temp>>4)*10)+((temp&0x0F));
  1641     00F3  300F               	movlw	15
  1642     00F4  0576               	andwf	bcd2dec@temp,w
  1643     00F5  00F8               	movwf	??_bcd2dec
  1644     00F6  3000               	movlw	0
  1645     00F7  0577               	andwf	bcd2dec@temp+1,w
  1646     00F8  00F9               	movwf	??_bcd2dec+1
  1647     00F9  0E76               	swapf	bcd2dec@temp,w
  1648     00FA  390F               	andlw	15
  1649     00FB  00F0               	movwf	___wmul@multiplier
  1650     00FC  0E77               	swapf	bcd2dec@temp+1,w
  1651     00FD  39F0               	andlw	240
  1652     00FE  04F0               	iorwf	___wmul@multiplier,f
  1653     00FF  0E77               	swapf	bcd2dec@temp+1,w
  1654     0100  390F               	andlw	15
  1655     0101  00F1               	movwf	___wmul@multiplier+1
  1656     0102  30F0               	movlw	240
  1657     0103  1DF1               	btfss	___wmul@multiplier+1,3
  1658     0104  3000               	movlw	0
  1659     0105  04F1               	iorwf	___wmul@multiplier+1,f
  1660     0106  300A               	movlw	10
  1661     0107  00F2               	movwf	___wmul@multiplicand
  1662     0108  3000               	movlw	0
  1663     0109  00F3               	movwf	___wmul@multiplicand+1
  1664     010A  120A  118A  20CE  120A  118A  	fcall	___wmul
  1665     010F  0878               	movf	??_bcd2dec,w
  1666     0110  0770               	addwf	?___wmul,w
  1667     0111  00F6               	movwf	?_bcd2dec
  1668     0112  0879               	movf	??_bcd2dec+1,w
  1669     0113  1803               	skipnc
  1670     0114  0A79               	incf	??_bcd2dec+1,w
  1671     0115  0771               	addwf	?___wmul+1,w
  1672     0116  00F7               	movwf	?_bcd2dec+1
  1673     0117                     l105:
  1674     0117  0008               	return
  1675     0118                     __end_of_bcd2dec:
  1676                           
  1677                           	psect	text4
  1678     00CE                     __ptext4:	
  1679 ;; *************** function ___wmul *****************
  1680 ;; Defined at:
  1681 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  multiplier      2    0[COMMON] unsigned int 
  1684 ;;  multiplicand    2    2[COMMON] unsigned int 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  product         2    4[COMMON] unsigned int 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  2    0[COMMON] unsigned int 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1696 ;;      Params:         4       0       0       0       0
  1697 ;;      Locals:         2       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0
  1699 ;;      Totals:         6       0       0       0       0
  1700 ;;Total ram usage:        6 bytes
  1701 ;; Hardware stack levels used: 1
  1702 ;; This function calls:
  1703 ;;		Nothing
  1704 ;; This function is called by:
  1705 ;;		_bcd2dec
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709     00CE                     ___wmul:	
  1710                           ;psect for function ___wmul
  1711                           
  1712     00CE                     l1183:	
  1713                           ;incstack = 0
  1714                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1715                           
  1716     00CE  01F4               	clrf	___wmul@product
  1717     00CF  01F5               	clrf	___wmul@product+1
  1718     00D0                     l1185:
  1719     00D0  1C70               	btfss	___wmul@multiplier,0
  1720     00D1  28D3               	goto	u511
  1721     00D2  28D4               	goto	u510
  1722     00D3                     u511:
  1723     00D3  28DA               	goto	l287
  1724     00D4                     u510:
  1725     00D4                     l1187:
  1726     00D4  0872               	movf	___wmul@multiplicand,w
  1727     00D5  07F4               	addwf	___wmul@product,f
  1728     00D6  1803               	skipnc
  1729     00D7  0AF5               	incf	___wmul@product+1,f
  1730     00D8  0873               	movf	___wmul@multiplicand+1,w
  1731     00D9  07F5               	addwf	___wmul@product+1,f
  1732     00DA                     l287:
  1733     00DA  3001               	movlw	1
  1734     00DB                     u525:
  1735     00DB  1003               	clrc
  1736     00DC  0DF2               	rlf	___wmul@multiplicand,f
  1737     00DD  0DF3               	rlf	___wmul@multiplicand+1,f
  1738     00DE  3EFF               	addlw	-1
  1739     00DF  1D03               	skipz
  1740     00E0  28DB               	goto	u525
  1741     00E1                     l1189:
  1742     00E1  3001               	movlw	1
  1743     00E2                     u535:
  1744     00E2  1003               	clrc
  1745     00E3  0CF1               	rrf	___wmul@multiplier+1,f
  1746     00E4  0CF0               	rrf	___wmul@multiplier,f
  1747     00E5  3EFF               	addlw	-1
  1748     00E6  1D03               	skipz
  1749     00E7  28E2               	goto	u535
  1750     00E8                     l1191:
  1751     00E8  0870               	movf	___wmul@multiplier,w
  1752     00E9  0471               	iorwf	___wmul@multiplier+1,w
  1753     00EA  1D03               	btfss	3,2
  1754     00EB  28ED               	goto	u541
  1755     00EC  28EE               	goto	u540
  1756     00ED                     u541:
  1757     00ED  28D0               	goto	l1185
  1758     00EE                     u540:
  1759     00EE                     l1193:
  1760     00EE  0875               	movf	___wmul@product+1,w
  1761     00EF  00F1               	movwf	?___wmul+1
  1762     00F0  0874               	movf	___wmul@product,w
  1763     00F1  00F0               	movwf	?___wmul
  1764     00F2                     l289:
  1765     00F2  0008               	return
  1766     00F3                     __end_of___wmul:
  1767                           
  1768                           	psect	text5
  1769     035F                     __ptext5:	
  1770 ;; *************** function _setup *****************
  1771 ;; Defined at:
  1772 ;;		line 149 in file "RTC_API_driver.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1786 ;;      Params:         0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0
  1789 ;;      Totals:         0       0       0       0       0
  1790 ;;Total ram usage:        0 bytes
  1791 ;; Hardware stack levels used: 1
  1792 ;; Hardware stack levels required when called: 2
  1793 ;; This function calls:
  1794 ;;		_dec2bcd
  1795 ;;		_i2c_start
  1796 ;;		_i2c_stop
  1797 ;;		_i2c_write
  1798 ;; This function is called by:
  1799 ;;		_main
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803     035F                     _setup:	
  1804                           ;psect for function _setup
  1805                           
  1806     035F                     l1435:	
  1807                           ;incstack = 0
  1808                           ; Regs used in _setup: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1809                           
  1810                           
  1811                           ;RTC_API_driver.c: 150:     i2c_start();
  1812     035F  120A  118A  2041  120A  118A  	fcall	_i2c_start
  1813     0364                     l1437:
  1814                           
  1815                           ;RTC_API_driver.c: 151:     i2c_write(0xD0);
  1816     0364  30D0               	movlw	208
  1817     0365  120A  118A  2093  120A  118A  	fcall	_i2c_write
  1818     036A                     l1439:
  1819                           
  1820                           ;RTC_API_driver.c: 152:     i2c_write(0x00);
  1821     036A  3000               	movlw	0
  1822     036B  120A  118A  2093  120A  118A  	fcall	_i2c_write
  1823     0370                     l1441:
  1824                           
  1825                           ;RTC_API_driver.c: 153:     i2c_write(dec2bcd(sec));
  1826     0370  1283               	bcf	3,5	;RP0=0, select bank0
  1827     0371  1303               	bcf	3,6	;RP1=0, select bank0
  1828     0372  083F               	movf	_sec+1,w
  1829     0373  00F9               	movwf	dec2bcd@temp+1
  1830     0374  083E               	movf	_sec,w
  1831     0375  00F8               	movwf	dec2bcd@temp
  1832     0376  120A  118A  2140  120A  118A  	fcall	_dec2bcd
  1833     037B  0878               	movf	?_dec2bcd,w
  1834     037C  120A  118A  2093  120A  118A  	fcall	_i2c_write
  1835     0381                     l1443:
  1836                           
  1837                           ;RTC_API_driver.c: 154:     i2c_write(dec2bcd(min));
  1838     0381  1283               	bcf	3,5	;RP0=0, select bank0
  1839     0382  1303               	bcf	3,6	;RP1=0, select bank0
  1840     0383  083D               	movf	_min+1,w
  1841     0384  00F9               	movwf	dec2bcd@temp+1
  1842     0385  083C               	movf	_min,w
  1843     0386  00F8               	movwf	dec2bcd@temp
  1844     0387  120A  118A  2140  120A  118A  	fcall	_dec2bcd
  1845     038C  0878               	movf	?_dec2bcd,w
  1846     038D  120A  118A  2093  120A  118A  	fcall	_i2c_write
  1847     0392                     l1445:
  1848                           
  1849                           ;RTC_API_driver.c: 155:     i2c_write(dec2bcd(hour)|0x60);
  1850     0392  1283               	bcf	3,5	;RP0=0, select bank0
  1851     0393  1303               	bcf	3,6	;RP1=0, select bank0
  1852     0394  083B               	movf	_hour+1,w
  1853     0395  00F9               	movwf	dec2bcd@temp+1
  1854     0396  083A               	movf	_hour,w
  1855     0397  00F8               	movwf	dec2bcd@temp
  1856     0398  120A  118A  2140  120A  118A  	fcall	_dec2bcd
  1857     039D  0878               	movf	?_dec2bcd,w
  1858     039E  3860               	iorlw	96
  1859     039F  120A  118A  2093  120A  118A  	fcall	_i2c_write
  1860     03A4                     l1447:
  1861                           
  1862                           ;RTC_API_driver.c: 156:     i2c_write(dec2bcd(day));
  1863     03A4  1283               	bcf	3,5	;RP0=0, select bank0
  1864     03A5  1303               	bcf	3,6	;RP1=0, select bank0
  1865     03A6  0835               	movf	_day+1,w
  1866     03A7  00F9               	movwf	dec2bcd@temp+1
  1867     03A8  0834               	movf	_day,w
  1868     03A9  00F8               	movwf	dec2bcd@temp
  1869     03AA  120A  118A  2140  120A  118A  	fcall	_dec2bcd
  1870     03AF  0878               	movf	?_dec2bcd,w
  1871     03B0  120A  118A  2093  120A  118A  	fcall	_i2c_write
  1872     03B5                     l1449:
  1873                           
  1874                           ;RTC_API_driver.c: 157:     i2c_write(dec2bcd(date));
  1875     03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1876     03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1877     03B7  0839               	movf	_date+1,w
  1878     03B8  00F9               	movwf	dec2bcd@temp+1
  1879     03B9  0838               	movf	_date,w
  1880     03BA  00F8               	movwf	dec2bcd@temp
  1881     03BB  120A  118A  2140  120A  118A  	fcall	_dec2bcd
  1882     03C0  0878               	movf	?_dec2bcd,w
  1883     03C1  120A  118A  2093  120A  118A  	fcall	_i2c_write
  1884     03C6                     l1451:
  1885                           
  1886                           ;RTC_API_driver.c: 158:     i2c_write(dec2bcd(month));
  1887     03C6  1283               	bcf	3,5	;RP0=0, select bank0
  1888     03C7  1303               	bcf	3,6	;RP1=0, select bank0
  1889     03C8  0837               	movf	_month+1,w
  1890     03C9  00F9               	movwf	dec2bcd@temp+1
  1891     03CA  0836               	movf	_month,w
  1892     03CB  00F8               	movwf	dec2bcd@temp
  1893     03CC  120A  118A  2140  120A  118A  	fcall	_dec2bcd
  1894     03D1  0878               	movf	?_dec2bcd,w
  1895     03D2  120A  118A  2093  120A  118A  	fcall	_i2c_write
  1896     03D7                     l1453:
  1897                           
  1898                           ;RTC_API_driver.c: 159:     i2c_write(dec2bcd(year));
  1899     03D7  1283               	bcf	3,5	;RP0=0, select bank0
  1900     03D8  1303               	bcf	3,6	;RP1=0, select bank0
  1901     03D9  0833               	movf	_year+1,w
  1902     03DA  00F9               	movwf	dec2bcd@temp+1
  1903     03DB  0832               	movf	_year,w
  1904     03DC  00F8               	movwf	dec2bcd@temp
  1905     03DD  120A  118A  2140  120A  118A  	fcall	_dec2bcd
  1906     03E2  0878               	movf	?_dec2bcd,w
  1907     03E3  120A  118A  2093  120A  118A  	fcall	_i2c_write
  1908     03E8                     l1455:
  1909                           
  1910                           ;RTC_API_driver.c: 160:     i2c_stop();
  1911     03E8  120A  118A  204A  120A  118A  	fcall	_i2c_stop
  1912     03ED                     l108:
  1913     03ED  0008               	return
  1914     03EE                     __end_of_setup:
  1915                           
  1916                           	psect	text6
  1917     0093                     __ptext6:	
  1918 ;; *************** function _i2c_write *****************
  1919 ;; Defined at:
  1920 ;;		line 43 in file "RTC_API_driver.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  data            1    wreg     unsigned char 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  data            1    0[COMMON] unsigned char 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      unsigned char 
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1934 ;;      Params:         0       0       0       0       0
  1935 ;;      Locals:         1       0       0       0       0
  1936 ;;      Temps:          0       0       0       0       0
  1937 ;;      Totals:         1       0       0       0       0
  1938 ;;Total ram usage:        1 bytes
  1939 ;; Hardware stack levels used: 1
  1940 ;; Hardware stack levels required when called: 1
  1941 ;; This function calls:
  1942 ;;		_i2c_wait
  1943 ;; This function is called by:
  1944 ;;		_setup
  1945 ;;		_update
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949     0093                     _i2c_write:	
  1950                           ;psect for function _i2c_write
  1951                           
  1952                           
  1953                           ;incstack = 0
  1954                           ; Regs used in _i2c_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1955                           ;i2c_write@data stored from wreg
  1956     0093  00F0               	movwf	i2c_write@data
  1957     0094                     l1305:
  1958                           
  1959                           ;RTC_API_driver.c: 44:     i2c_wait();
  1960     0094  120A  118A  2053  120A  118A  	fcall	_i2c_wait
  1961     0099                     l1307:
  1962                           
  1963                           ;RTC_API_driver.c: 45:     *SSP_BUF = data;
  1964     0099  0870               	movf	i2c_write@data,w
  1965     009A  1283               	bcf	3,5	;RP0=0, select bank0
  1966     009B  1303               	bcf	3,6	;RP1=0, select bank0
  1967     009C  0093               	movwf	19
  1968     009D                     l1309:
  1969                           
  1970                           ;RTC_API_driver.c: 46:     if((*PIF1)&0x08)
  1971     009D  1D8C               	btfss	12,3
  1972     009E  28A0               	goto	u751
  1973     009F  28A1               	goto	u750
  1974     00A0                     u751:
  1975     00A0  28A5               	goto	l78
  1976     00A1                     u750:
  1977     00A1                     l1311:
  1978                           
  1979                           ;RTC_API_driver.c: 47:         (*PIF1)&=~0x08;
  1980     00A1  30F7               	movlw	247
  1981     00A2  00FF               	movwf	btemp+1
  1982     00A3  087F               	movf	btemp+1,w
  1983     00A4  058C               	andwf	12,f
  1984     00A5                     l78:
  1985     00A5  0008               	return
  1986     00A6                     __end_of_i2c_write:
  1987                           
  1988                           	psect	text7
  1989     004A                     __ptext7:	
  1990 ;; *************** function _i2c_stop *****************
  1991 ;; Defined at:
  1992 ;;		line 26 in file "RTC_API_driver.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;		None
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg, status,2, status,0, pclath, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2006 ;;      Params:         0       0       0       0       0
  2007 ;;      Locals:         0       0       0       0       0
  2008 ;;      Temps:          0       0       0       0       0
  2009 ;;      Totals:         0       0       0       0       0
  2010 ;;Total ram usage:        0 bytes
  2011 ;; Hardware stack levels used: 1
  2012 ;; Hardware stack levels required when called: 1
  2013 ;; This function calls:
  2014 ;;		_i2c_wait
  2015 ;; This function is called by:
  2016 ;;		_setup
  2017 ;;		_update
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021     004A                     _i2c_stop:	
  2022                           ;psect for function _i2c_stop
  2023                           
  2024     004A                     l1283:	
  2025                           ;incstack = 0
  2026                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  2027                           
  2028                           
  2029                           ;RTC_API_driver.c: 27:     i2c_wait();
  2030     004A  120A  118A  2053  120A  118A  	fcall	_i2c_wait
  2031     004F                     l1285:
  2032                           
  2033                           ;RTC_API_driver.c: 28:     (*SSPCON_2)|=0x04;
  2034     004F  1683               	bsf	3,5	;RP0=1, select bank1
  2035     0050  1303               	bcf	3,6	;RP1=0, select bank1
  2036     0051  1511               	bsf	17,2
  2037     0052                     l70:
  2038     0052  0008               	return
  2039     0053                     __end_of_i2c_stop:
  2040                           
  2041                           	psect	text8
  2042     0041                     __ptext8:	
  2043 ;; *************** function _i2c_start *****************
  2044 ;; Defined at:
  2045 ;;		line 18 in file "RTC_API_driver.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;		None
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, status,2, status,0, pclath, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2059 ;;      Params:         0       0       0       0       0
  2060 ;;      Locals:         0       0       0       0       0
  2061 ;;      Temps:          0       0       0       0       0
  2062 ;;      Totals:         0       0       0       0       0
  2063 ;;Total ram usage:        0 bytes
  2064 ;; Hardware stack levels used: 1
  2065 ;; Hardware stack levels required when called: 1
  2066 ;; This function calls:
  2067 ;;		_i2c_wait
  2068 ;; This function is called by:
  2069 ;;		_setup
  2070 ;;		_update
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074     0041                     _i2c_start:	
  2075                           ;psect for function _i2c_start
  2076                           
  2077     0041                     l1279:	
  2078                           ;incstack = 0
  2079                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  2080                           
  2081                           
  2082                           ;RTC_API_driver.c: 19:     i2c_wait();
  2083     0041  120A  118A  2053  120A  118A  	fcall	_i2c_wait
  2084     0046                     l1281:
  2085                           
  2086                           ;RTC_API_driver.c: 20:     (*SSPCON_2)|=0x01;
  2087     0046  1683               	bsf	3,5	;RP0=1, select bank1
  2088     0047  1303               	bcf	3,6	;RP1=0, select bank1
  2089     0048  1411               	bsf	17,0
  2090     0049                     l64:
  2091     0049  0008               	return
  2092     004A                     __end_of_i2c_start:
  2093                           
  2094                           	psect	text9
  2095     0053                     __ptext9:	
  2096 ;; *************** function _i2c_wait *****************
  2097 ;; Defined at:
  2098 ;;		line 15 in file "RTC_API_driver.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2112 ;;      Params:         0       0       0       0       0
  2113 ;;      Locals:         0       0       0       0       0
  2114 ;;      Temps:          0       0       0       0       0
  2115 ;;      Totals:         0       0       0       0       0
  2116 ;;Total ram usage:        0 bytes
  2117 ;; Hardware stack levels used: 1
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_i2c_start
  2122 ;;		_i2c_stop
  2123 ;;		_i2c_read
  2124 ;;		_i2c_write
  2125 ;;		_i2c_rep_start
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129     0053                     _i2c_wait:	
  2130                           ;psect for function _i2c_wait
  2131                           
  2132     0053                     l1175:	
  2133                           ;incstack = 0
  2134                           ; Regs used in _i2c_wait: [wreg+status,2]
  2135                           
  2136     0053                     l58:	
  2137                           ;RTC_API_driver.c: 16:     while((*SSP_STAT)&0X04 || (*SSPCON_2&0X1F));
  2138                           
  2139     0053  1683               	bsf	3,5	;RP0=1, select bank1
  2140     0054  1303               	bcf	3,6	;RP1=0, select bank1
  2141     0055  1914               	btfsc	20,2
  2142     0056  2858               	goto	u481
  2143     0057  2859               	goto	u480
  2144     0058                     u481:
  2145     0058  2853               	goto	l58
  2146     0059                     u480:
  2147     0059                     l1177:
  2148     0059  0811               	movf	17,w
  2149     005A  391F               	andlw	31
  2150     005B  1D03               	btfss	3,2
  2151     005C  285E               	goto	u491
  2152     005D  285F               	goto	u490
  2153     005E                     u491:
  2154     005E  2853               	goto	l58
  2155     005F                     u490:
  2156     005F                     l61:
  2157     005F  0008               	return
  2158     0060                     __end_of_i2c_wait:
  2159                           
  2160                           	psect	text10
  2161     0140                     __ptext10:	
  2162 ;; *************** function _dec2bcd *****************
  2163 ;; Defined at:
  2164 ;;		line 143 in file "RTC_API_driver.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  temp            2    8[COMMON] int 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  2    8[COMMON] int 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2178 ;;      Params:         2       0       0       0       0
  2179 ;;      Locals:         0       0       0       0       0
  2180 ;;      Temps:          2       0       0       0       0
  2181 ;;      Totals:         4       0       0       0       0
  2182 ;;Total ram usage:        4 bytes
  2183 ;; Hardware stack levels used: 1
  2184 ;; Hardware stack levels required when called: 1
  2185 ;; This function calls:
  2186 ;;		___awdiv
  2187 ;;		___awmod
  2188 ;; This function is called by:
  2189 ;;		_setup
  2190 ;;		_main
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194     0140                     _dec2bcd:	
  2195                           ;psect for function _dec2bcd
  2196                           
  2197     0140                     l1335:	
  2198                           ;incstack = 0
  2199                           ; Regs used in _dec2bcd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2200                           
  2201                           
  2202                           ;RTC_API_driver.c: 144:     return ((temp/10)<<4)+((temp%10));
  2203     0140  300A               	movlw	10
  2204     0141  00F0               	movwf	___awdiv@divisor
  2205     0142  3000               	movlw	0
  2206     0143  00F1               	movwf	___awdiv@divisor+1
  2207     0144  0879               	movf	dec2bcd@temp+1,w
  2208     0145  00F3               	movwf	___awdiv@dividend+1
  2209     0146  0878               	movf	dec2bcd@temp,w
  2210     0147  00F2               	movwf	___awdiv@dividend
  2211     0148  120A  118A  22F8  120A  118A  	fcall	___awdiv
  2212     014D  0870               	movf	?___awdiv,w
  2213     014E  00FA               	movwf	??_dec2bcd
  2214     014F  0871               	movf	?___awdiv+1,w
  2215     0150  00FB               	movwf	??_dec2bcd+1
  2216     0151  0EFA               	swapf	??_dec2bcd,f
  2217     0152  0EFB               	swapf	??_dec2bcd+1,f
  2218     0153  30F0               	movlw	240
  2219     0154  05FB               	andwf	??_dec2bcd+1,f
  2220     0155  087A               	movf	??_dec2bcd,w
  2221     0156  390F               	andlw	15
  2222     0157  04FB               	iorwf	??_dec2bcd+1,f
  2223     0158  30F0               	movlw	240
  2224     0159  05FA               	andwf	??_dec2bcd,f
  2225     015A  300A               	movlw	10
  2226     015B  00F0               	movwf	___awmod@divisor
  2227     015C  3000               	movlw	0
  2228     015D  00F1               	movwf	___awmod@divisor+1
  2229     015E  0879               	movf	dec2bcd@temp+1,w
  2230     015F  00F3               	movwf	___awmod@dividend+1
  2231     0160  0878               	movf	dec2bcd@temp,w
  2232     0161  00F2               	movwf	___awmod@dividend
  2233     0162  120A  118A  21DA  120A  118A  	fcall	___awmod
  2234     0167  0870               	movf	?___awmod,w
  2235     0168  077A               	addwf	??_dec2bcd,w
  2236     0169  00F8               	movwf	?_dec2bcd
  2237     016A  0871               	movf	?___awmod+1,w
  2238     016B  1803               	skipnc
  2239     016C  0A71               	incf	?___awmod+1,w
  2240     016D  077B               	addwf	??_dec2bcd+1,w
  2241     016E  00F9               	movwf	?_dec2bcd+1
  2242     016F                     l102:
  2243     016F  0008               	return
  2244     0170                     __end_of_dec2bcd:
  2245                           
  2246                           	psect	text11
  2247     01DA                     __ptext11:	
  2248 ;; *************** function ___awmod *****************
  2249 ;; Defined at:
  2250 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  divisor         2    0[COMMON] int 
  2253 ;;  dividend        2    2[COMMON] int 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  sign            1    5[COMMON] unsigned char 
  2256 ;;  counter         1    4[COMMON] unsigned char 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  2    0[COMMON] int 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0, btemp+1
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2266 ;;      Params:         4       0       0       0       0
  2267 ;;      Locals:         2       0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0
  2269 ;;      Totals:         6       0       0       0       0
  2270 ;;Total ram usage:        6 bytes
  2271 ;; Hardware stack levels used: 1
  2272 ;; This function calls:
  2273 ;;		Nothing
  2274 ;; This function is called by:
  2275 ;;		_dec2bcd
  2276 ;;		_main
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280     01DA                     ___awmod:	
  2281                           ;psect for function ___awmod
  2282                           
  2283     01DA                     l1241:	
  2284                           ;incstack = 0
  2285                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  2286                           
  2287     01DA  01F5               	clrf	___awmod@sign
  2288     01DB                     l1243:
  2289     01DB  1FF3               	btfss	___awmod@dividend+1,7
  2290     01DC  29DE               	goto	u651
  2291     01DD  29DF               	goto	u650
  2292     01DE                     u651:
  2293     01DE  29E6               	goto	l1249
  2294     01DF                     u650:
  2295     01DF                     l1245:
  2296     01DF  09F2               	comf	___awmod@dividend,f
  2297     01E0  09F3               	comf	___awmod@dividend+1,f
  2298     01E1  0AF2               	incf	___awmod@dividend,f
  2299     01E2  1903               	skipnz
  2300     01E3  0AF3               	incf	___awmod@dividend+1,f
  2301     01E4                     l1247:
  2302     01E4  01F5               	clrf	___awmod@sign
  2303     01E5  0AF5               	incf	___awmod@sign,f
  2304     01E6                     l1249:
  2305     01E6  1FF1               	btfss	___awmod@divisor+1,7
  2306     01E7  29E9               	goto	u661
  2307     01E8  29EA               	goto	u660
  2308     01E9                     u661:
  2309     01E9  29EF               	goto	l1253
  2310     01EA                     u660:
  2311     01EA                     l1251:
  2312     01EA  09F0               	comf	___awmod@divisor,f
  2313     01EB  09F1               	comf	___awmod@divisor+1,f
  2314     01EC  0AF0               	incf	___awmod@divisor,f
  2315     01ED  1903               	skipnz
  2316     01EE  0AF1               	incf	___awmod@divisor+1,f
  2317     01EF                     l1253:
  2318     01EF  0870               	movf	___awmod@divisor,w
  2319     01F0  0471               	iorwf	___awmod@divisor+1,w
  2320     01F1  1903               	btfsc	3,2
  2321     01F2  29F4               	goto	u671
  2322     01F3  29F5               	goto	u670
  2323     01F4                     u671:
  2324     01F4  2A24               	goto	l1271
  2325     01F5                     u670:
  2326     01F5                     l1255:
  2327     01F5  01F4               	clrf	___awmod@counter
  2328     01F6  0AF4               	incf	___awmod@counter,f
  2329     01F7  2A03               	goto	l1261
  2330     01F8                     l1257:
  2331     01F8  3001               	movlw	1
  2332     01F9                     u685:
  2333     01F9  1003               	clrc
  2334     01FA  0DF0               	rlf	___awmod@divisor,f
  2335     01FB  0DF1               	rlf	___awmod@divisor+1,f
  2336     01FC  3EFF               	addlw	-1
  2337     01FD  1D03               	skipz
  2338     01FE  29F9               	goto	u685
  2339     01FF                     l1259:
  2340     01FF  3001               	movlw	1
  2341     0200  00FF               	movwf	btemp+1
  2342     0201  087F               	movf	btemp+1,w
  2343     0202  07F4               	addwf	___awmod@counter,f
  2344     0203                     l1261:
  2345     0203  1FF1               	btfss	___awmod@divisor+1,7
  2346     0204  2A06               	goto	u691
  2347     0205  2A07               	goto	u690
  2348     0206                     u691:
  2349     0206  29F8               	goto	l1257
  2350     0207                     u690:
  2351     0207                     l1263:
  2352     0207  0871               	movf	___awmod@divisor+1,w
  2353     0208  0273               	subwf	___awmod@dividend+1,w
  2354     0209  1D03               	skipz
  2355     020A  2A0D               	goto	u705
  2356     020B  0870               	movf	___awmod@divisor,w
  2357     020C  0272               	subwf	___awmod@dividend,w
  2358     020D                     u705:
  2359     020D  1C03               	skipc
  2360     020E  2A10               	goto	u701
  2361     020F  2A11               	goto	u700
  2362     0210                     u701:
  2363     0210  2A17               	goto	l1267
  2364     0211                     u700:
  2365     0211                     l1265:
  2366     0211  0870               	movf	___awmod@divisor,w
  2367     0212  02F2               	subwf	___awmod@dividend,f
  2368     0213  0871               	movf	___awmod@divisor+1,w
  2369     0214  1C03               	skipc
  2370     0215  03F3               	decf	___awmod@dividend+1,f
  2371     0216  02F3               	subwf	___awmod@dividend+1,f
  2372     0217                     l1267:
  2373     0217  3001               	movlw	1
  2374     0218                     u715:
  2375     0218  1003               	clrc
  2376     0219  0CF1               	rrf	___awmod@divisor+1,f
  2377     021A  0CF0               	rrf	___awmod@divisor,f
  2378     021B  3EFF               	addlw	-1
  2379     021C  1D03               	skipz
  2380     021D  2A18               	goto	u715
  2381     021E                     l1269:
  2382     021E  3001               	movlw	1
  2383     021F  02F4               	subwf	___awmod@counter,f
  2384     0220  1D03               	btfss	3,2
  2385     0221  2A23               	goto	u721
  2386     0222  2A24               	goto	u720
  2387     0223                     u721:
  2388     0223  2A07               	goto	l1263
  2389     0224                     u720:
  2390     0224                     l1271:
  2391     0224  0875               	movf	___awmod@sign,w
  2392     0225  1903               	btfsc	3,2
  2393     0226  2A28               	goto	u731
  2394     0227  2A29               	goto	u730
  2395     0228                     u731:
  2396     0228  2A2E               	goto	l1275
  2397     0229                     u730:
  2398     0229                     l1273:
  2399     0229  09F2               	comf	___awmod@dividend,f
  2400     022A  09F3               	comf	___awmod@dividend+1,f
  2401     022B  0AF2               	incf	___awmod@dividend,f
  2402     022C  1903               	skipnz
  2403     022D  0AF3               	incf	___awmod@dividend+1,f
  2404     022E                     l1275:
  2405     022E  0873               	movf	___awmod@dividend+1,w
  2406     022F  00F1               	movwf	?___awmod+1
  2407     0230  0872               	movf	___awmod@dividend,w
  2408     0231  00F0               	movwf	?___awmod
  2409     0232                     l453:
  2410     0232  0008               	return
  2411     0233                     __end_of___awmod:
  2412                           
  2413                           	psect	text12
  2414     02F8                     __ptext12:	
  2415 ;; *************** function ___awdiv *****************
  2416 ;; Defined at:
  2417 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  divisor         2    0[COMMON] int 
  2420 ;;  dividend        2    2[COMMON] int 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  quotient        2    6[COMMON] int 
  2423 ;;  sign            1    5[COMMON] unsigned char 
  2424 ;;  counter         1    4[COMMON] unsigned char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  2    0[COMMON] int 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2, status,0, btemp+1
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2434 ;;      Params:         4       0       0       0       0
  2435 ;;      Locals:         4       0       0       0       0
  2436 ;;      Temps:          0       0       0       0       0
  2437 ;;      Totals:         8       0       0       0       0
  2438 ;;Total ram usage:        8 bytes
  2439 ;; Hardware stack levels used: 1
  2440 ;; This function calls:
  2441 ;;		Nothing
  2442 ;; This function is called by:
  2443 ;;		_dec2bcd
  2444 ;;		_main
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448     02F8                     ___awdiv:	
  2449                           ;psect for function ___awdiv
  2450                           
  2451     02F8                     l1197:	
  2452                           ;incstack = 0
  2453                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2454                           
  2455     02F8  01F5               	clrf	___awdiv@sign
  2456     02F9                     l1199:
  2457     02F9  1FF1               	btfss	___awdiv@divisor+1,7
  2458     02FA  2AFC               	goto	u551
  2459     02FB  2AFD               	goto	u550
  2460     02FC                     u551:
  2461     02FC  2B04               	goto	l1205
  2462     02FD                     u550:
  2463     02FD                     l1201:
  2464     02FD  09F0               	comf	___awdiv@divisor,f
  2465     02FE  09F1               	comf	___awdiv@divisor+1,f
  2466     02FF  0AF0               	incf	___awdiv@divisor,f
  2467     0300  1903               	skipnz
  2468     0301  0AF1               	incf	___awdiv@divisor+1,f
  2469     0302                     l1203:
  2470     0302  01F5               	clrf	___awdiv@sign
  2471     0303  0AF5               	incf	___awdiv@sign,f
  2472     0304                     l1205:
  2473     0304  1FF3               	btfss	___awdiv@dividend+1,7
  2474     0305  2B07               	goto	u561
  2475     0306  2B08               	goto	u560
  2476     0307                     u561:
  2477     0307  2B11               	goto	l1211
  2478     0308                     u560:
  2479     0308                     l1207:
  2480     0308  09F2               	comf	___awdiv@dividend,f
  2481     0309  09F3               	comf	___awdiv@dividend+1,f
  2482     030A  0AF2               	incf	___awdiv@dividend,f
  2483     030B  1903               	skipnz
  2484     030C  0AF3               	incf	___awdiv@dividend+1,f
  2485     030D                     l1209:
  2486     030D  3001               	movlw	1
  2487     030E  00FF               	movwf	btemp+1
  2488     030F  087F               	movf	btemp+1,w
  2489     0310  06F5               	xorwf	___awdiv@sign,f
  2490     0311                     l1211:
  2491     0311  01F6               	clrf	___awdiv@quotient
  2492     0312  01F7               	clrf	___awdiv@quotient+1
  2493     0313                     l1213:
  2494     0313  0870               	movf	___awdiv@divisor,w
  2495     0314  0471               	iorwf	___awdiv@divisor+1,w
  2496     0315  1903               	btfsc	3,2
  2497     0316  2B18               	goto	u571
  2498     0317  2B19               	goto	u570
  2499     0318                     u571:
  2500     0318  2B50               	goto	l1233
  2501     0319                     u570:
  2502     0319                     l1215:
  2503     0319  01F4               	clrf	___awdiv@counter
  2504     031A  0AF4               	incf	___awdiv@counter,f
  2505     031B  2B27               	goto	l1221
  2506     031C                     l1217:
  2507     031C  3001               	movlw	1
  2508     031D                     u585:
  2509     031D  1003               	clrc
  2510     031E  0DF0               	rlf	___awdiv@divisor,f
  2511     031F  0DF1               	rlf	___awdiv@divisor+1,f
  2512     0320  3EFF               	addlw	-1
  2513     0321  1D03               	skipz
  2514     0322  2B1D               	goto	u585
  2515     0323                     l1219:
  2516     0323  3001               	movlw	1
  2517     0324  00FF               	movwf	btemp+1
  2518     0325  087F               	movf	btemp+1,w
  2519     0326  07F4               	addwf	___awdiv@counter,f
  2520     0327                     l1221:
  2521     0327  1FF1               	btfss	___awdiv@divisor+1,7
  2522     0328  2B2A               	goto	u591
  2523     0329  2B2B               	goto	u590
  2524     032A                     u591:
  2525     032A  2B1C               	goto	l1217
  2526     032B                     u590:
  2527     032B                     l1223:
  2528     032B  3001               	movlw	1
  2529     032C                     u605:
  2530     032C  1003               	clrc
  2531     032D  0DF6               	rlf	___awdiv@quotient,f
  2532     032E  0DF7               	rlf	___awdiv@quotient+1,f
  2533     032F  3EFF               	addlw	-1
  2534     0330  1D03               	skipz
  2535     0331  2B2C               	goto	u605
  2536     0332  0871               	movf	___awdiv@divisor+1,w
  2537     0333  0273               	subwf	___awdiv@dividend+1,w
  2538     0334  1D03               	skipz
  2539     0335  2B38               	goto	u615
  2540     0336  0870               	movf	___awdiv@divisor,w
  2541     0337  0272               	subwf	___awdiv@dividend,w
  2542     0338                     u615:
  2543     0338  1C03               	skipc
  2544     0339  2B3B               	goto	u611
  2545     033A  2B3C               	goto	u610
  2546     033B                     u611:
  2547     033B  2B43               	goto	l1229
  2548     033C                     u610:
  2549     033C                     l1225:
  2550     033C  0870               	movf	___awdiv@divisor,w
  2551     033D  02F2               	subwf	___awdiv@dividend,f
  2552     033E  0871               	movf	___awdiv@divisor+1,w
  2553     033F  1C03               	skipc
  2554     0340  03F3               	decf	___awdiv@dividend+1,f
  2555     0341  02F3               	subwf	___awdiv@dividend+1,f
  2556     0342                     l1227:
  2557     0342  1476               	bsf	___awdiv@quotient,0
  2558     0343                     l1229:
  2559     0343  3001               	movlw	1
  2560     0344                     u625:
  2561     0344  1003               	clrc
  2562     0345  0CF1               	rrf	___awdiv@divisor+1,f
  2563     0346  0CF0               	rrf	___awdiv@divisor,f
  2564     0347  3EFF               	addlw	-1
  2565     0348  1D03               	skipz
  2566     0349  2B44               	goto	u625
  2567     034A                     l1231:
  2568     034A  3001               	movlw	1
  2569     034B  02F4               	subwf	___awdiv@counter,f
  2570     034C  1D03               	btfss	3,2
  2571     034D  2B4F               	goto	u631
  2572     034E  2B50               	goto	u630
  2573     034F                     u631:
  2574     034F  2B2B               	goto	l1223
  2575     0350                     u630:
  2576     0350                     l1233:
  2577     0350  0875               	movf	___awdiv@sign,w
  2578     0351  1903               	btfsc	3,2
  2579     0352  2B54               	goto	u641
  2580     0353  2B55               	goto	u640
  2581     0354                     u641:
  2582     0354  2B5A               	goto	l1237
  2583     0355                     u640:
  2584     0355                     l1235:
  2585     0355  09F6               	comf	___awdiv@quotient,f
  2586     0356  09F7               	comf	___awdiv@quotient+1,f
  2587     0357  0AF6               	incf	___awdiv@quotient,f
  2588     0358  1903               	skipnz
  2589     0359  0AF7               	incf	___awdiv@quotient+1,f
  2590     035A                     l1237:
  2591     035A  0877               	movf	___awdiv@quotient+1,w
  2592     035B  00F1               	movwf	?___awdiv+1
  2593     035C  0876               	movf	___awdiv@quotient,w
  2594     035D  00F0               	movwf	?___awdiv
  2595     035E                     l440:
  2596     035E  0008               	return
  2597     035F                     __end_of___awdiv:
  2598                           
  2599                           	psect	text13
  2600     0233                     __ptext13:	
  2601 ;; *************** function _init *****************
  2602 ;; Defined at:
  2603 ;;		line 92 in file "RTC_API_driver.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;		None
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2617 ;;      Params:         0       0       0       0       0
  2618 ;;      Locals:         0       0       0       0       0
  2619 ;;      Temps:          0       0       0       0       0
  2620 ;;      Totals:         0       0       0       0       0
  2621 ;;Total ram usage:        0 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 3
  2624 ;; This function calls:
  2625 ;;		_delay
  2626 ;;		_lcd_cmd
  2627 ;; This function is called by:
  2628 ;;		_main
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632     0233                     _init:	
  2633                           ;psect for function _init
  2634                           
  2635     0233                     l1377:	
  2636                           ;incstack = 0
  2637                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2638                           
  2639                           
  2640                           ;RTC_API_driver.c: 93:     *DRC = 0X18;
  2641     0233  3018               	movlw	24
  2642     0234  1683               	bsf	3,5	;RP0=1, select bank1
  2643     0235  1303               	bcf	3,6	;RP1=0, select bank1
  2644     0236  0087               	movwf	7
  2645     0237                     l1379:
  2646                           
  2647                           ;RTC_API_driver.c: 94:     *dataC = 0x00;
  2648     0237  1283               	bcf	3,5	;RP0=0, select bank0
  2649     0238  1303               	bcf	3,6	;RP1=0, select bank0
  2650     0239  0187               	clrf	7
  2651     023A                     l1381:
  2652                           
  2653                           ;RTC_API_driver.c: 95:     *DRD = 0x00;
  2654     023A  1683               	bsf	3,5	;RP0=1, select bank1
  2655     023B  1303               	bcf	3,6	;RP1=0, select bank1
  2656     023C  0188               	clrf	8
  2657     023D                     l1383:
  2658                           
  2659                           ;RTC_API_driver.c: 96:     lcd_cmd(0x38);
  2660     023D  3038               	movlw	56
  2661     023E  120A  118A  2082  120A  118A  	fcall	_lcd_cmd
  2662     0243                     l1385:
  2663                           
  2664                           ;RTC_API_driver.c: 97:     delay(4);
  2665     0243  3004               	movlw	4
  2666     0244  120A  118A  2060  120A  118A  	fcall	_delay
  2667     0249                     l1387:
  2668                           
  2669                           ;RTC_API_driver.c: 98:     lcd_cmd(0x38);
  2670     0249  3038               	movlw	56
  2671     024A  120A  118A  2082  120A  118A  	fcall	_lcd_cmd
  2672     024F                     l1389:
  2673                           
  2674                           ;RTC_API_driver.c: 99:     delay(4);
  2675     024F  3004               	movlw	4
  2676     0250  120A  118A  2060  120A  118A  	fcall	_delay
  2677     0255                     l1391:
  2678                           
  2679                           ;RTC_API_driver.c: 100:     lcd_cmd(0x38);
  2680     0255  3038               	movlw	56
  2681     0256  120A  118A  2082  120A  118A  	fcall	_lcd_cmd
  2682     025B                     l1393:
  2683                           
  2684                           ;RTC_API_driver.c: 101:     delay(4);
  2685     025B  3004               	movlw	4
  2686     025C  120A  118A  2060  120A  118A  	fcall	_delay
  2687     0261                     l1395:
  2688                           
  2689                           ;RTC_API_driver.c: 102:     lcd_cmd(0x38);
  2690     0261  3038               	movlw	56
  2691     0262  120A  118A  2082  120A  118A  	fcall	_lcd_cmd
  2692     0267                     l1397:
  2693                           
  2694                           ;RTC_API_driver.c: 103:     delay(4);
  2695     0267  3004               	movlw	4
  2696     0268  120A  118A  2060  120A  118A  	fcall	_delay
  2697     026D                     l1399:
  2698                           
  2699                           ;RTC_API_driver.c: 104:     lcd_cmd(0x0C);
  2700     026D  300C               	movlw	12
  2701     026E  120A  118A  2082  120A  118A  	fcall	_lcd_cmd
  2702     0273                     l1401:
  2703                           
  2704                           ;RTC_API_driver.c: 105:     delay(4);
  2705     0273  3004               	movlw	4
  2706     0274  120A  118A  2060  120A  118A  	fcall	_delay
  2707     0279                     l1403:
  2708                           
  2709                           ;RTC_API_driver.c: 106:     lcd_cmd(0x06);
  2710     0279  3006               	movlw	6
  2711     027A  120A  118A  2082  120A  118A  	fcall	_lcd_cmd
  2712     027F                     l1405:
  2713                           
  2714                           ;RTC_API_driver.c: 107:     delay(4);
  2715     027F  3004               	movlw	4
  2716     0280  120A  118A  2060  120A  118A  	fcall	_delay
  2717     0285                     l1407:
  2718                           
  2719                           ;RTC_API_driver.c: 108:     lcd_cmd(0x01);
  2720     0285  3001               	movlw	1
  2721     0286  120A  118A  2082  120A  118A  	fcall	_lcd_cmd
  2722     028B                     l1409:
  2723                           
  2724                           ;RTC_API_driver.c: 109:     delay(4);
  2725     028B  3004               	movlw	4
  2726     028C  120A  118A  2060  120A  118A  	fcall	_delay
  2727     0291                     l87:
  2728     0291  0008               	return
  2729     0292                     __end_of_init:
  2730                           
  2731                           	psect	text14
  2732     0082                     __ptext14:	
  2733 ;; *************** function _lcd_cmd *****************
  2734 ;; Defined at:
  2735 ;;		line 64 in file "RTC_API_driver.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  i               1    wreg     unsigned char 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  i               1    4[COMMON] unsigned char 
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      void 
  2742 ;; Registers used:
  2743 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2749 ;;      Params:         0       0       0       0       0
  2750 ;;      Locals:         1       0       0       0       0
  2751 ;;      Temps:          0       0       0       0       0
  2752 ;;      Totals:         1       0       0       0       0
  2753 ;;Total ram usage:        1 bytes
  2754 ;; Hardware stack levels used: 1
  2755 ;; Hardware stack levels required when called: 2
  2756 ;; This function calls:
  2757 ;;		_delay
  2758 ;; This function is called by:
  2759 ;;		_init
  2760 ;;		_main
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764     0082                     _lcd_cmd:	
  2765                           ;psect for function _lcd_cmd
  2766                           
  2767                           
  2768                           ;incstack = 0
  2769                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2770                           ;lcd_cmd@i stored from wreg
  2771     0082  00F4               	movwf	lcd_cmd@i
  2772     0083                     l1315:
  2773                           
  2774                           ;RTC_API_driver.c: 65:     RC1 = 0;
  2775     0083  1283               	bcf	3,5	;RP0=0, select bank0
  2776     0084  1303               	bcf	3,6	;RP1=0, select bank0
  2777     0085  1087               	bcf	7,1	;volatile
  2778     0086                     l1317:
  2779                           
  2780                           ;RTC_API_driver.c: 66:     *dataD = i;
  2781     0086  0874               	movf	lcd_cmd@i,w
  2782     0087  0088               	movwf	8
  2783     0088                     l1319:
  2784                           
  2785                           ;RTC_API_driver.c: 67:     RC0 = 1;
  2786     0088  1407               	bsf	7,0	;volatile
  2787     0089                     l1321:
  2788                           
  2789                           ;RTC_API_driver.c: 68:     delay(5);
  2790     0089  3005               	movlw	5
  2791     008A  120A  118A  2060  120A  118A  	fcall	_delay
  2792     008F                     l1323:
  2793                           
  2794                           ;RTC_API_driver.c: 69:     RC0 = 0;
  2795     008F  1283               	bcf	3,5	;RP0=0, select bank0
  2796     0090  1303               	bcf	3,6	;RP1=0, select bank0
  2797     0091  1007               	bcf	7,0	;volatile
  2798     0092                     l81:
  2799     0092  0008               	return
  2800     0093                     __end_of_lcd_cmd:
  2801                           
  2802                           	psect	text15
  2803     01A4                     __ptext15:	
  2804 ;; *************** function _i2c_init *****************
  2805 ;; Defined at:
  2806 ;;		line 9 in file "RTC_API_driver.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  baud            4    0[BANK0 ] unsigned long 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;		None
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2820 ;;      Params:         0       4       0       0       0
  2821 ;;      Locals:         0       0       0       0       0
  2822 ;;      Temps:          0       4       0       0       0
  2823 ;;      Totals:         0       8       0       0       0
  2824 ;;Total ram usage:        8 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 1
  2827 ;; This function calls:
  2828 ;;		___lldiv
  2829 ;; This function is called by:
  2830 ;;		_main
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834     01A4                     _i2c_init:	
  2835                           ;psect for function _i2c_init
  2836                           
  2837     01A4                     l1369:	
  2838                           ;incstack = 0
  2839                           ; Regs used in _i2c_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2840                           
  2841                           
  2842                           ;RTC_API_driver.c: 10:     *SSPCON_1 = 0X28;
  2843     01A4  3028               	movlw	40
  2844     01A5  1283               	bcf	3,5	;RP0=0, select bank0
  2845     01A6  1303               	bcf	3,6	;RP1=0, select bank0
  2846     01A7  0094               	movwf	20
  2847     01A8                     l1371:
  2848                           
  2849                           ;RTC_API_driver.c: 11:     *SSP_STAT = 0X00;
  2850     01A8  1683               	bsf	3,5	;RP0=1, select bank1
  2851     01A9  1303               	bcf	3,6	;RP1=0, select bank1
  2852     01AA  0194               	clrf	20
  2853     01AB                     l1373:
  2854                           
  2855                           ;RTC_API_driver.c: 12:     *SSPCON_2 = 0X00;
  2856     01AB  0191               	clrf	17
  2857     01AC                     l1375:
  2858                           
  2859                           ;RTC_API_driver.c: 13:     *SSP_ADD = (16000000/(4*baud))-1;
  2860     01AC  1283               	bcf	3,5	;RP0=0, select bank0
  2861     01AD  1303               	bcf	3,6	;RP1=0, select bank0
  2862     01AE  0854               	movf	i2c_init@baud,w
  2863     01AF  00D8               	movwf	??_i2c_init
  2864     01B0  0855               	movf	i2c_init@baud+1,w
  2865     01B1  00D9               	movwf	??_i2c_init+1
  2866     01B2  0856               	movf	i2c_init@baud+2,w
  2867     01B3  00DA               	movwf	??_i2c_init+2
  2868     01B4  0857               	movf	i2c_init@baud+3,w
  2869     01B5  00DB               	movwf	??_i2c_init+3
  2870     01B6  3002               	movlw	2
  2871     01B7                     u835:
  2872     01B7  1003               	clrc
  2873     01B8  0DD8               	rlf	??_i2c_init,f
  2874     01B9  0DD9               	rlf	??_i2c_init+1,f
  2875     01BA  0DDA               	rlf	??_i2c_init+2,f
  2876     01BB  0DDB               	rlf	??_i2c_init+3,f
  2877     01BC                     u830:
  2878     01BC  3EFF               	addlw	-1
  2879     01BD  1D03               	skipz
  2880     01BE  29B7               	goto	u835
  2881     01BF  085B               	movf	??_i2c_init+3,w
  2882     01C0  00F3               	movwf	___lldiv@divisor+3
  2883     01C1  085A               	movf	??_i2c_init+2,w
  2884     01C2  00F2               	movwf	___lldiv@divisor+2
  2885     01C3  0859               	movf	??_i2c_init+1,w
  2886     01C4  00F1               	movwf	___lldiv@divisor+1
  2887     01C5  0858               	movf	??_i2c_init,w
  2888     01C6  00F0               	movwf	___lldiv@divisor
  2889     01C7  3000               	movlw	0
  2890     01C8  00F7               	movwf	___lldiv@dividend+3
  2891     01C9  30F4               	movlw	244
  2892     01CA  00F6               	movwf	___lldiv@dividend+2
  2893     01CB  3024               	movlw	36
  2894     01CC  00F5               	movwf	___lldiv@dividend+1
  2895     01CD  3000               	movlw	0
  2896     01CE  00F4               	movwf	___lldiv@dividend
  2897     01CF  120A  118A  2292  120A  118A  	fcall	___lldiv
  2898     01D4  0870               	movf	?___lldiv,w
  2899     01D5  3EFF               	addlw	255
  2900     01D6  1683               	bsf	3,5	;RP0=1, select bank1
  2901     01D7  1303               	bcf	3,6	;RP1=0, select bank1
  2902     01D8  0093               	movwf	19
  2903     01D9                     l55:
  2904     01D9  0008               	return
  2905     01DA                     __end_of_i2c_init:
  2906                           
  2907                           	psect	text16
  2908     0292                     __ptext16:	
  2909 ;; *************** function ___lldiv *****************
  2910 ;; Defined at:
  2911 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  divisor         4    0[COMMON] unsigned long 
  2914 ;;  dividend        4    4[COMMON] unsigned long 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  quotient        4    9[COMMON] unsigned long 
  2917 ;;  counter         1   13[COMMON] unsigned char 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  4    0[COMMON] unsigned long 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0, btemp+1
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2927 ;;      Params:         8       0       0       0       0
  2928 ;;      Locals:         5       0       0       0       0
  2929 ;;      Temps:          1       0       0       0       0
  2930 ;;      Totals:        14       0       0       0       0
  2931 ;;Total ram usage:       14 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; This function calls:
  2934 ;;		Nothing
  2935 ;; This function is called by:
  2936 ;;		_i2c_init
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940     0292                     ___lldiv:	
  2941                           ;psect for function ___lldiv
  2942                           
  2943     0292                     l1343:	
  2944                           ;incstack = 0
  2945                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  2946                           
  2947     0292  3000               	movlw	0
  2948     0293  00FC               	movwf	___lldiv@quotient+3
  2949     0294  3000               	movlw	0
  2950     0295  00FB               	movwf	___lldiv@quotient+2
  2951     0296  3000               	movlw	0
  2952     0297  00FA               	movwf	___lldiv@quotient+1
  2953     0298  3000               	movlw	0
  2954     0299  00F9               	movwf	___lldiv@quotient
  2955     029A  0873               	movf	___lldiv@divisor+3,w
  2956     029B  0472               	iorwf	___lldiv@divisor+2,w
  2957     029C  0471               	iorwf	___lldiv@divisor+1,w
  2958     029D  0470               	iorwf	___lldiv@divisor,w
  2959     029E  1903               	skipnz
  2960     029F  2AA1               	goto	u761
  2961     02A0  2AA2               	goto	u760
  2962     02A1                     u761:
  2963     02A1  2AEF               	goto	l1365
  2964     02A2                     u760:
  2965     02A2                     l1345:
  2966     02A2  01FD               	clrf	___lldiv@counter
  2967     02A3  0AFD               	incf	___lldiv@counter,f
  2968     02A4  2AB2               	goto	l1351
  2969     02A5                     l1347:
  2970     02A5  3001               	movlw	1
  2971     02A6  00F8               	movwf	??___lldiv
  2972     02A7                     u775:
  2973     02A7  1003               	clrc
  2974     02A8  0DF0               	rlf	___lldiv@divisor,f
  2975     02A9  0DF1               	rlf	___lldiv@divisor+1,f
  2976     02AA  0DF2               	rlf	___lldiv@divisor+2,f
  2977     02AB  0DF3               	rlf	___lldiv@divisor+3,f
  2978     02AC  0BF8               	decfsz	??___lldiv,f
  2979     02AD  2AA7               	goto	u775
  2980     02AE                     l1349:
  2981     02AE  3001               	movlw	1
  2982     02AF  00FF               	movwf	btemp+1
  2983     02B0  087F               	movf	btemp+1,w
  2984     02B1  07FD               	addwf	___lldiv@counter,f
  2985     02B2                     l1351:
  2986     02B2  1FF3               	btfss	___lldiv@divisor+3,7
  2987     02B3  2AB5               	goto	u781
  2988     02B4  2AB6               	goto	u780
  2989     02B5                     u781:
  2990     02B5  2AA5               	goto	l1347
  2991     02B6                     u780:
  2992     02B6                     l1353:
  2993     02B6  3001               	movlw	1
  2994     02B7  00F8               	movwf	??___lldiv
  2995     02B8                     u795:
  2996     02B8  1003               	clrc
  2997     02B9  0DF9               	rlf	___lldiv@quotient,f
  2998     02BA  0DFA               	rlf	___lldiv@quotient+1,f
  2999     02BB  0DFB               	rlf	___lldiv@quotient+2,f
  3000     02BC  0DFC               	rlf	___lldiv@quotient+3,f
  3001     02BD  0BF8               	decfsz	??___lldiv,f
  3002     02BE  2AB8               	goto	u795
  3003     02BF                     l1355:
  3004     02BF  0873               	movf	___lldiv@divisor+3,w
  3005     02C0  0277               	subwf	___lldiv@dividend+3,w
  3006     02C1  1D03               	skipz
  3007     02C2  2ACD               	goto	u805
  3008     02C3  0872               	movf	___lldiv@divisor+2,w
  3009     02C4  0276               	subwf	___lldiv@dividend+2,w
  3010     02C5  1D03               	skipz
  3011     02C6  2ACD               	goto	u805
  3012     02C7  0871               	movf	___lldiv@divisor+1,w
  3013     02C8  0275               	subwf	___lldiv@dividend+1,w
  3014     02C9  1D03               	skipz
  3015     02CA  2ACD               	goto	u805
  3016     02CB  0870               	movf	___lldiv@divisor,w
  3017     02CC  0274               	subwf	___lldiv@dividend,w
  3018     02CD                     u805:
  3019     02CD  1C03               	skipc
  3020     02CE  2AD0               	goto	u801
  3021     02CF  2AD1               	goto	u800
  3022     02D0                     u801:
  3023     02D0  2AE0               	goto	l1361
  3024     02D1                     u800:
  3025     02D1                     l1357:
  3026     02D1  0870               	movf	___lldiv@divisor,w
  3027     02D2  02F4               	subwf	___lldiv@dividend,f
  3028     02D3  0871               	movf	___lldiv@divisor+1,w
  3029     02D4  1C03               	skipc
  3030     02D5  0F71               	incfsz	___lldiv@divisor+1,w
  3031     02D6  02F5               	subwf	___lldiv@dividend+1,f
  3032     02D7  0872               	movf	___lldiv@divisor+2,w
  3033     02D8  1C03               	skipc
  3034     02D9  0F72               	incfsz	___lldiv@divisor+2,w
  3035     02DA  02F6               	subwf	___lldiv@dividend+2,f
  3036     02DB  0873               	movf	___lldiv@divisor+3,w
  3037     02DC  1C03               	skipc
  3038     02DD  0F73               	incfsz	___lldiv@divisor+3,w
  3039     02DE  02F7               	subwf	___lldiv@dividend+3,f
  3040     02DF                     l1359:
  3041     02DF  1479               	bsf	___lldiv@quotient,0
  3042     02E0                     l1361:
  3043     02E0  3001               	movlw	1
  3044     02E1                     u815:
  3045     02E1  1003               	clrc
  3046     02E2  0CF3               	rrf	___lldiv@divisor+3,f
  3047     02E3  0CF2               	rrf	___lldiv@divisor+2,f
  3048     02E4  0CF1               	rrf	___lldiv@divisor+1,f
  3049     02E5  0CF0               	rrf	___lldiv@divisor,f
  3050     02E6  3EFF               	addlw	-1
  3051     02E7  1D03               	skipz
  3052     02E8  2AE1               	goto	u815
  3053     02E9                     l1363:
  3054     02E9  3001               	movlw	1
  3055     02EA  02FD               	subwf	___lldiv@counter,f
  3056     02EB  1D03               	btfss	3,2
  3057     02EC  2AEE               	goto	u821
  3058     02ED  2AEF               	goto	u820
  3059     02EE                     u821:
  3060     02EE  2AB6               	goto	l1353
  3061     02EF                     u820:
  3062     02EF                     l1365:
  3063     02EF  087C               	movf	___lldiv@quotient+3,w
  3064     02F0  00F3               	movwf	?___lldiv+3
  3065     02F1  087B               	movf	___lldiv@quotient+2,w
  3066     02F2  00F2               	movwf	?___lldiv+2
  3067     02F3  087A               	movf	___lldiv@quotient+1,w
  3068     02F4  00F1               	movwf	?___lldiv+1
  3069     02F5  0879               	movf	___lldiv@quotient,w
  3070     02F6  00F0               	movwf	?___lldiv
  3071     02F7                     l323:
  3072     02F7  0008               	return
  3073     02F8                     __end_of___lldiv:
  3074                           
  3075                           	psect	text17
  3076     03EE                     __ptext17:	
  3077 ;; *************** function _days *****************
  3078 ;; Defined at:
  3079 ;;		line 111 in file "RTC_API_driver.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  day             2    5[COMMON] int 
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3093 ;;      Params:         2       0       0       0       0
  3094 ;;      Locals:         0       0       0       0       0
  3095 ;;      Temps:          0       0       0       0       0
  3096 ;;      Totals:         2       0       0       0       0
  3097 ;;Total ram usage:        2 bytes
  3098 ;; Hardware stack levels used: 1
  3099 ;; Hardware stack levels required when called: 3
  3100 ;; This function calls:
  3101 ;;		_lcd_data
  3102 ;; This function is called by:
  3103 ;;		_main
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107     03EE                     _days:	
  3108                           ;psect for function _days
  3109                           
  3110     03EE                     l1411:	
  3111                           ;incstack = 0
  3112                           ; Regs used in _days: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3113                           
  3114                           
  3115                           ;RTC_API_driver.c: 112:     switch(day) {
  3116     03EE  2C9E               	goto	l1429
  3117     03EF                     l1413:
  3118                           
  3119                           ;RTC_API_driver.c: 114:                 lcd_data(' '); lcd_data('S');
  3120     03EF  3020               	movlw	32
  3121     03F0  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3122     03F5  3053               	movlw	83
  3123     03F6  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3124                           
  3125                           ;RTC_API_driver.c: 115:                 lcd_data('U'); lcd_data('N');
  3126     03FB  3055               	movlw	85
  3127     03FC  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3128     0401  304E               	movlw	78
  3129     0402  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3130                           
  3131                           ;RTC_API_driver.c: 116:                 break;
  3132     0407  2CBA               	goto	l99
  3133     0408                     l1415:
  3134                           
  3135                           ;RTC_API_driver.c: 118:                 lcd_data(' '); lcd_data('M');
  3136     0408  3020               	movlw	32
  3137     0409  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3138     040E  304D               	movlw	77
  3139     040F  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3140                           
  3141                           ;RTC_API_driver.c: 119:                 lcd_data('O'); lcd_data('N');
  3142     0414  304F               	movlw	79
  3143     0415  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3144     041A  304E               	movlw	78
  3145     041B  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3146                           
  3147                           ;RTC_API_driver.c: 120:                 break;
  3148     0420  2CBA               	goto	l99
  3149     0421                     l1417:
  3150                           
  3151                           ;RTC_API_driver.c: 122:                 lcd_data(' '); lcd_data('T');
  3152     0421  3020               	movlw	32
  3153     0422  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3154     0427  3054               	movlw	84
  3155     0428  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3156                           
  3157                           ;RTC_API_driver.c: 123:                 lcd_data('U'); lcd_data('E');
  3158     042D  3055               	movlw	85
  3159     042E  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3160     0433  3045               	movlw	69
  3161     0434  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3162                           
  3163                           ;RTC_API_driver.c: 124:                 break;
  3164     0439  2CBA               	goto	l99
  3165     043A                     l1419:
  3166                           
  3167                           ;RTC_API_driver.c: 126:                 lcd_data(' '); lcd_data('W');
  3168     043A  3020               	movlw	32
  3169     043B  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3170     0440  3057               	movlw	87
  3171     0441  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3172                           
  3173                           ;RTC_API_driver.c: 127:                 lcd_data('E'); lcd_data('D');
  3174     0446  3045               	movlw	69
  3175     0447  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3176     044C  3044               	movlw	68
  3177     044D  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3178                           
  3179                           ;RTC_API_driver.c: 128:                 break;
  3180     0452  2CBA               	goto	l99
  3181     0453                     l1421:
  3182                           
  3183                           ;RTC_API_driver.c: 130:                 lcd_data(' '); lcd_data('T');
  3184     0453  3020               	movlw	32
  3185     0454  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3186     0459  3054               	movlw	84
  3187     045A  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3188                           
  3189                           ;RTC_API_driver.c: 131:                 lcd_data('H'); lcd_data('U');
  3190     045F  3048               	movlw	72
  3191     0460  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3192     0465  3055               	movlw	85
  3193     0466  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3194                           
  3195                           ;RTC_API_driver.c: 132:                 break;
  3196     046B  2CBA               	goto	l99
  3197     046C                     l1423:
  3198                           
  3199                           ;RTC_API_driver.c: 134:                 lcd_data(' '); lcd_data('F');
  3200     046C  3020               	movlw	32
  3201     046D  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3202     0472  3046               	movlw	70
  3203     0473  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3204                           
  3205                           ;RTC_API_driver.c: 135:                 lcd_data('R'); lcd_data('I');
  3206     0478  3052               	movlw	82
  3207     0479  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3208     047E  3049               	movlw	73
  3209     047F  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3210                           
  3211                           ;RTC_API_driver.c: 136:                 break;
  3212     0484  2CBA               	goto	l99
  3213     0485                     l1425:
  3214                           
  3215                           ;RTC_API_driver.c: 138:                 lcd_data(' '); lcd_data('S');
  3216     0485  3020               	movlw	32
  3217     0486  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3218     048B  3053               	movlw	83
  3219     048C  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3220                           
  3221                           ;RTC_API_driver.c: 139:                 lcd_data('A'); lcd_data('T');
  3222     0491  3041               	movlw	65
  3223     0492  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3224     0497  3054               	movlw	84
  3225     0498  120A  118A  2071  120A  118A  	fcall	_lcd_data
  3226                           
  3227                           ;RTC_API_driver.c: 140:                 break;
  3228     049D  2CBA               	goto	l99
  3229     049E                     l1429:
  3230                           
  3231                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3232                           ; Switch size 1, requested type "simple"
  3233                           ; Number of cases is 1, Range of values is 0 to 0
  3234                           ; switch strategies available:
  3235                           ; Name         Instructions Cycles
  3236                           ; simple_byte            4     3 (average)
  3237                           ; direct_byte           11     8 (fixed)
  3238                           ; jumptable            260     6 (fixed)
  3239                           ;	Chosen strategy is simple_byte
  3240     049E  0876               	movf	days@day+1,w
  3241     049F  3A00               	xorlw	0	; case 0
  3242     04A0  1903               	skipnz
  3243     04A1  2CA3               	goto	l1573
  3244     04A2  2CBA               	goto	l99
  3245     04A3                     l1573:
  3246                           
  3247                           ; Switch size 1, requested type "simple"
  3248                           ; Number of cases is 7, Range of values is 1 to 7
  3249                           ; switch strategies available:
  3250                           ; Name         Instructions Cycles
  3251                           ; simple_byte           22    12 (average)
  3252                           ; direct_byte           32    11 (fixed)
  3253                           ; jumptable            263     9 (fixed)
  3254                           ;	Chosen strategy is simple_byte
  3255     04A3  0875               	movf	days@day,w
  3256     04A4  3A01               	xorlw	1	; case 1
  3257     04A5  1903               	skipnz
  3258     04A6  2BEF               	goto	l1413
  3259     04A7  3A03               	xorlw	3	; case 2
  3260     04A8  1903               	skipnz
  3261     04A9  2C08               	goto	l1415
  3262     04AA  3A01               	xorlw	1	; case 3
  3263     04AB  1903               	skipnz
  3264     04AC  2C21               	goto	l1417
  3265     04AD  3A07               	xorlw	7	; case 4
  3266     04AE  1903               	skipnz
  3267     04AF  2C3A               	goto	l1419
  3268     04B0  3A01               	xorlw	1	; case 5
  3269     04B1  1903               	skipnz
  3270     04B2  2C53               	goto	l1421
  3271     04B3  3A03               	xorlw	3	; case 6
  3272     04B4  1903               	skipnz
  3273     04B5  2C6C               	goto	l1423
  3274     04B6  3A01               	xorlw	1	; case 7
  3275     04B7  1903               	skipnz
  3276     04B8  2C85               	goto	l1425
  3277     04B9  2CBA               	goto	l99
  3278     04BA                     l99:
  3279     04BA  0008               	return
  3280     04BB                     __end_of_days:
  3281                           
  3282                           	psect	text18
  3283     0071                     __ptext18:	
  3284 ;; *************** function _lcd_data *****************
  3285 ;; Defined at:
  3286 ;;		line 71 in file "RTC_API_driver.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  i               1    wreg     unsigned char 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  i               1    4[COMMON] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3300 ;;      Params:         0       0       0       0       0
  3301 ;;      Locals:         1       0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0
  3303 ;;      Totals:         1       0       0       0       0
  3304 ;;Total ram usage:        1 bytes
  3305 ;; Hardware stack levels used: 1
  3306 ;; Hardware stack levels required when called: 2
  3307 ;; This function calls:
  3308 ;;		_delay
  3309 ;; This function is called by:
  3310 ;;		_days
  3311 ;;		_main
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315     0071                     _lcd_data:	
  3316                           ;psect for function _lcd_data
  3317                           
  3318                           
  3319                           ;incstack = 0
  3320                           ; Regs used in _lcd_data: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3321                           ;lcd_data@i stored from wreg
  3322     0071  00F4               	movwf	lcd_data@i
  3323     0072                     l1325:
  3324                           
  3325                           ;RTC_API_driver.c: 72:     RC1 = 1;
  3326     0072  1283               	bcf	3,5	;RP0=0, select bank0
  3327     0073  1303               	bcf	3,6	;RP1=0, select bank0
  3328     0074  1487               	bsf	7,1	;volatile
  3329     0075                     l1327:
  3330                           
  3331                           ;RTC_API_driver.c: 73:     *dataD = i;
  3332     0075  0874               	movf	lcd_data@i,w
  3333     0076  0088               	movwf	8
  3334     0077                     l1329:
  3335                           
  3336                           ;RTC_API_driver.c: 74:     RC0 = 1;
  3337     0077  1407               	bsf	7,0	;volatile
  3338     0078                     l1331:
  3339                           
  3340                           ;RTC_API_driver.c: 75:     delay(5);
  3341     0078  3005               	movlw	5
  3342     0079  120A  118A  2060  120A  118A  	fcall	_delay
  3343     007E                     l1333:
  3344                           
  3345                           ;RTC_API_driver.c: 76:     RC0 = 0;
  3346     007E  1283               	bcf	3,5	;RP0=0, select bank0
  3347     007F  1303               	bcf	3,6	;RP1=0, select bank0
  3348     0080  1007               	bcf	7,0	;volatile
  3349     0081                     l84:
  3350     0081  0008               	return
  3351     0082                     __end_of_lcd_data:
  3352                           
  3353                           	psect	text19
  3354     0060                     __ptext19:	
  3355 ;; *************** function _delay *****************
  3356 ;; Defined at:
  3357 ;;		line 183 in file "RTC_API_driver.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  del             1    wreg     unsigned char 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  del             1    3[COMMON] unsigned char 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3371 ;;      Params:         0       0       0       0       0
  3372 ;;      Locals:         1       0       0       0       0
  3373 ;;      Temps:          0       0       0       0       0
  3374 ;;      Totals:         1       0       0       0       0
  3375 ;;Total ram usage:        1 bytes
  3376 ;; Hardware stack levels used: 1
  3377 ;; Hardware stack levels required when called: 1
  3378 ;; This function calls:
  3379 ;;		___bmul
  3380 ;; This function is called by:
  3381 ;;		_lcd_cmd
  3382 ;;		_lcd_data
  3383 ;;		_init
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387     0060                     _delay:	
  3388                           ;psect for function _delay
  3389                           
  3390                           
  3391                           ;incstack = 0
  3392                           ; Regs used in _delay: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3393                           ;delay@del stored from wreg
  3394     0060  00F3               	movwf	delay@del
  3395     0061                     l1179:
  3396                           
  3397                           ;RTC_API_driver.c: 184:     del*=(16000000/4000.0);
  3398     0061  0873               	movf	delay@del,w
  3399     0062  00F0               	movwf	___bmul@multiplicand
  3400     0063  30A0               	movlw	160
  3401     0064  120A  118A  20B9  120A  118A  	fcall	___bmul
  3402     0069  00F3               	movwf	delay@del
  3403     006A                     l1181:	
  3404                           ;RTC_API_driver.c: 185:     while(--del);
  3405                           
  3406     006A  3001               	movlw	1
  3407     006B  02F3               	subwf	delay@del,f
  3408     006C  1D03               	btfss	3,2
  3409     006D  286F               	goto	u501
  3410     006E  2870               	goto	u500
  3411     006F                     u501:
  3412     006F  286A               	goto	l1181
  3413     0070                     u500:
  3414     0070                     l117:
  3415     0070  0008               	return
  3416     0071                     __end_of_delay:
  3417                           
  3418                           	psect	text20
  3419     00B9                     __ptext20:	
  3420 ;; *************** function ___bmul *****************
  3421 ;; Defined at:
  3422 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  multiplier      1    wreg     unsigned char 
  3425 ;;  multiplicand    1    0[COMMON] unsigned char 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;  multiplier      1    2[COMMON] unsigned char 
  3428 ;;  product         1    1[COMMON] unsigned char 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      unsigned char 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2, status,0, btemp+1
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3438 ;;      Params:         1       0       0       0       0
  3439 ;;      Locals:         2       0       0       0       0
  3440 ;;      Temps:          0       0       0       0       0
  3441 ;;      Totals:         3       0       0       0       0
  3442 ;;Total ram usage:        3 bytes
  3443 ;; Hardware stack levels used: 1
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_delay
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451     00B9                     ___bmul:	
  3452                           ;psect for function ___bmul
  3453                           
  3454                           
  3455                           ;incstack = 0
  3456                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  3457                           ;___bmul@multiplier stored from wreg
  3458     00B9  00F2               	movwf	___bmul@multiplier
  3459     00BA                     l1159:
  3460     00BA  01F1               	clrf	___bmul@product
  3461     00BB                     l1161:
  3462     00BB  1C72               	btfss	___bmul@multiplier,0
  3463     00BC  28BE               	goto	u461
  3464     00BD  28BF               	goto	u460
  3465     00BE                     u461:
  3466     00BE  28C3               	goto	l1165
  3467     00BF                     u460:
  3468     00BF                     l1163:
  3469     00BF  0870               	movf	___bmul@multiplicand,w
  3470     00C0  00FF               	movwf	btemp+1
  3471     00C1  087F               	movf	btemp+1,w
  3472     00C2  07F1               	addwf	___bmul@product,f
  3473     00C3                     l1165:
  3474     00C3  1003               	clrc
  3475     00C4  0DF0               	rlf	___bmul@multiplicand,f
  3476     00C5                     l1167:
  3477     00C5  1003               	clrc
  3478     00C6  0CF2               	rrf	___bmul@multiplier,f
  3479     00C7                     l1169:
  3480     00C7  0872               	movf	___bmul@multiplier,w
  3481     00C8  1D03               	btfss	3,2
  3482     00C9  28CB               	goto	u471
  3483     00CA  28CC               	goto	u470
  3484     00CB                     u471:
  3485     00CB  28BB               	goto	l1161
  3486     00CC                     u470:
  3487     00CC                     l1171:
  3488     00CC  0871               	movf	___bmul@product,w
  3489     00CD                     l313:
  3490     00CD  0008               	return
  3491     00CE                     __end_of___bmul:
  3492     007E                     btemp	set	126	;btemp
  3493     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        52
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      67
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    dataC	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    dataD	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    DRC	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    DRD	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    PIF1	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    SSP_ADD	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    SSP_BUF	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    SSP_STAT	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    SSPCON_1	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    SSPCON_2	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 


Critical Paths under _main in COMMON

    _update->_bcd2dec
    _bcd2dec->___wmul
    _setup->_dec2bcd
    _dec2bcd->___awdiv
    _init->_lcd_cmd
    _lcd_cmd->_delay
    _i2c_init->___lldiv
    _days->_lcd_data
    _lcd_data->_delay
    _delay->___bmul

Critical Paths under _main in BANK0

    _main->_i2c_init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   12330
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                               _days
                            _dec2bcd
                           _i2c_init
                               _init
                            _lcd_cmd
                           _lcd_data
                              _setup
                             _update
 ---------------------------------------------------------------------------------
 (1) _update                                               2     2      0     865
                                             10 COMMON     2     2      0
                            _bcd2dec
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             4     4      0      23
                                              0 COMMON     4     4      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _bcd2dec                                              4     2      2     820
                                              6 COMMON     4     2      2
                             ___wmul
                           _i2c_read (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    3550
                            _dec2bcd
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _dec2bcd                                              4     2      2    3528
                                              8 COMMON     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1360
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     448
                              _delay
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_cmd                                              1     1      0     235
                                              4 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _days                                                 2     0      2     333
                                              5 COMMON     2     0      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_data                                             1     1      0     235
                                              4 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                1     1      0     213
                                              3 COMMON     1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     168
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   _days
     _lcd_data
       _delay
         ___bmul
   _dec2bcd
     ___awdiv
     ___awmod
   _i2c_init
     ___lldiv
   _init
     _delay
     _lcd_cmd
       _delay
   _lcd_cmd
   _lcd_data
   _setup
     _dec2bcd
     _i2c_start
       _i2c_wait
     _i2c_stop
       _i2c_wait
     _i2c_write
       _i2c_wait
   _update
     _bcd2dec
       ___wmul
       _i2c_read (ARG)
         _i2c_wait
     _i2c_read
     _i2c_start
     _i2c_stop
     _i2c_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      43       5       83.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      51      12        0.0%
ABS                  0      0      51       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Apr 12 17:30:58 2024

                      _i 0061                        pc 0002           ___bmul@product 0071  
                     l61 005F                       l70 0052                       l55 01D9  
                     l64 0049                       l81 0092                       l58 0053  
                     l74 013F                       l84 0081                       l78 00A5  
                     l87 0291                       l99 04BA             ___awdiv@sign 0075  
                     fsr 0004      ___wmul@multiplicand 0072                      l102 016F  
                    l111 0590                      l105 0117                      l108 03ED  
                    l117 0070                      l313 00CD                      l323 02F7  
                    l440 035E                      l186 05AA                      l453 0232  
                    l287 00DA                      l289 00F2                      _DRC 0046  
                    _DRD 0044                      _RC0 0038                      _RC1 0039  
                    u500 0070                      u501 006F                      u510 00D4  
                    u511 00D3                      u610 033C                      u611 033B  
                    u460 00BF                      u700 0211                      u540 00EE  
                    u461 00BE                      u605 032C                      u701 0210  
                    u541 00ED                      u525 00DB                      u470 00CC  
                    u630 0350                      u550 02FD                      u471 00CB  
                    u631 034F                      u615 0338                      u551 02FC  
                    u535 00E2                      u800 02D1                      u640 0355  
                    u560 0308                      u720 0224                      u480 0059  
                    u801 02D0                      u641 0354                      u625 0344  
                    u561 0307                      u721 0223                      u705 020D  
                    u481 0058                      u570 0319                      u730 0229  
                    u650 01DF                      u490 005F                      u571 0318  
                    u731 0228                      u715 0218                      u651 01DE  
                    u491 005E                      u820 02EF                      u660 01EA  
                    u740 012B                      u900 07C6                      u821 02EE  
                    u805 02CD                      u661 01E9                      u741 012A  
                    u901 07C5                      u830 01BC                      u590 032B  
                    u670 01F5                      u750 00A1                      u815 02E1  
                    u591 032A                      u671 01F4                      u751 00A0  
                    u760 02A2                      u840 05F5                      u761 02A1  
                    u585 031D                      u905 07C2                      u841 05F4  
                    u690 0207                      u850 0694                      u835 01B7  
                    u691 0206                      u851 0693                      u780 02B6  
                    u860 06B9                      u781 02B5                      u685 01F9  
                    u917 07DF                      u861 06B8                      u845 05F1  
                    u870 06DF                      u775 02A7                      u871 06DE  
                    u880 070A                      u881 0709                      u865 06B5  
                    u890 07B3                      u795 02B8                      u891 07B2  
                    u875 06DB                      u885 0706                      _day 0034  
                    _min 003C                      _sec 003E                      fsr0 0004  
                    indf 0000             ___awmod@sign 0075                     l1201 02FD  
                   l1211 0311                     l1203 0302                     l1221 0327  
                   l1213 0313                     l1205 0304                     l1301 013E  
                   l1231 034A                     l1223 032B                     l1215 0319  
                   l1207 0308                     l1311 00A1                     l1161 00BB  
                   l1321 0089                     l1401 0273                     l1225 033C  
                   l1217 031C                     l1233 0350                     l1209 030D  
                   l1241 01DA                     l1305 0094                     l1171 00CC  
                   l1163 00BF                     l1331 0078                     l1411 03EE  
                   l1323 008F                     l1315 0083                     l1403 0279  
                   l1235 0355                     l1227 0342                     l1219 0323  
                   l1251 01EA                     l1243 01DB                     l1307 0099  
                   l1165 00C3                     l1181 006A                     l1333 007E  
                   l1325 0072                     l1421 0453                     l1413 03EF  
                   l1317 0086                     l1405 027F                     l1237 035A  
                   l1229 0343                     l1261 0203                     l1253 01EF  
                   l1245 01DF                     l1309 009D                     l1501 05F5  
                   l1167 00C5                     l1159 00BA                     l1327 0075  
                   l1423 046C                     l1415 0408                     l1351 02B2  
                   l1343 0292                     l1319 0088                     l1407 0285  
                   l1263 0207                     l1255 01F5                     l1271 0224  
                   l1247 01E4                     l1335 0140                     l1175 0053  
                   l1191 00E8                     l1183 00CE                     l1511 06A4  
                   l1503 0694                     l1169 00C7                     l1329 0077  
                   l1425 0485                     l1417 0421                     l1361 02E0  
                   l1353 02B6                     l1345 02A2                     l1409 028B  
                   l1273 0229                     l1265 0211                     l1257 01F8  
                   l1249 01E6                     l1177 0059                     l1281 0046  
                   l1441 0370                     l1193 00EE                     l1185 00D0  
                   l1521 06BE                     l1513 06AC                     l1179 0061  
                   l1419 043A                     l1363 02E9                     l1355 02BF  
                   l1347 02A5                     l1371 01A8                     l1275 022E  
                   l1267 0217                     l1259 01FF                     l1283 004A  
                   l1451 03C6                     l1443 0381                     l1435 035F  
                   l1187 00D4                     l1339 00F3                     l1291 0125  
                   l1523 06CA                     l1515 06BA                     l1429 049E  
                   l1357 02D1                     l1349 02AE                     l1365 02EF  
                   l1373 01AB                     l1381 023A                     l1197 02F8  
                   l1269 021E                     l1285 004F                     l1453 03D7  
                   l1445 0392                     l1437 0364                     l1189 00E1  
                   l1293 012B                     l1461 04C6                     l1541 070A  
                   l1525 06D2                     l1509 0698                     l1359 02DF  
                   l1375 01AC                     l1391 0255                     l1383 023D  
                   l1199 02F9                     l1279 0041                     l1455 03E8  
                   l1447 03A4                     l1439 036A                     l1295 012F  
                   l1287 0118                     l1471 051E                     l1463 04D6  
                   l1551 07D7                     l1543 07B3                     l1535 06E9  
                   l1527 06DF                     l1369 01A4                     l1393 025B  
                   l1385 0243                     l1377 0233                     l1449 03B5  
                   l1297 0136                     l1289 011D                     l1481 0586  
                   l1473 0534                     l1465 04DC                     l1457 04BB  
                   l1545 07B9                     l1537 06F5                     l1529 06E5  
                   l1395 0261                     l1387 0249                     l1379 0237  
                   l1299 013B                     l1475 054A                     l1467 04F2  
                   l1459 04C0                     l1547 07C6                     l1539 06FD  
                   l1573 04A3                     l1397 0267                     l1389 024F  
                   l1477 0560                     l1469 0508                     l1549 07CC  
                   l1399 026D                     l1479 0580                     l1495 05D4  
                   l1487 0591                     l1497 05E0                     l1489 05D0  
                   l1499 05E8                     _PIF1 0048                     _date 0038  
                   _days 03EE                     _main 0591                     _msg1 0025  
                   _msg2 0020                     _init 0233                     _hour 003A  
                   _year 0032                     btemp 007E                     start 0000  
      ___bmul@multiplier 0072          __end_of_bcd2dec 0118                    ?_days 0075  
                  ?_main 0070          __end_of_dec2bcd 0170                    ?_init 0070  
        __end_of___awdiv 035F          __end_of___awmod 0233          __end_of___lldiv 02F8  
        ___awdiv@divisor 0070              i2c_read@val 0072          ___awdiv@counter 0074  
        __end_of_lcd_cmd 0093                    _dataC 0042                    _dataD 0040  
                  _delay 0060                    _mode1 002E                    _mode2 002A  
                  _hour1 005F                    _month 0036                    _setup 035F  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07EA             __end_of_days 04BB             __end_of_main 07EA  
           __end_of_init 0292         __end_of_i2c_init 01DA         __end_of_i2c_read 0140  
       __end_of_i2c_wait 0060         __end_of_i2c_stop 0053                   ??_days 0077  
                 ??_main 005C                   ??_init 0075                   ?_delay 0070  
       ___awdiv@dividend 0072             i2c_init@baud 0054                   ?_setup 0070  
       __end_of_lcd_data 0082                ??_bcd2dec 0078                   ___bmul 00B9  
              ??_dec2bcd 007A                   ___wmul 00CE                ??___awdiv 0074  
              ??___awmod 0074                ??___lldiv 0078         ___awdiv@quotient 0076  
        ___awmod@divisor 0070          ___awmod@counter 0074                   _update 04BB  
              ??_lcd_cmd 0074  __end_of__initialization 07FC      ___bmul@multiplicand 0070  
         __pcstackCOMMON 0070             __pidataBANK0 0170            __end_of_delay 0071  
          __end_of_setup 03EE        __end_of_i2c_start 004A        __end_of_i2c_write 00A6  
                ??_delay 0073                  ??_setup 007C               __pbssBANK0 005F  
              ?_i2c_init 0054                ?_i2c_read 0070                ?_i2c_wait 0070  
              ?_i2c_stop 0070               __pmaintext 0591                  ?___bmul 0070  
                ?___wmul 0070                  ?_update 0070                ?_lcd_data 0070  
                _SSP_ADD 004A                  _SSP_BUF 004E               ??_i2c_init 0058  
             ??_i2c_read 0070               ??_i2c_wait 0070               ??_i2c_stop 0070  
                _bcd2dec 00F3                  _dec2bcd 0140                  ___awdiv 02F8  
                ___awmod 01DA                  ___lldiv 0292                  __ptext1 04BB  
                __ptext2 0118                  __ptext3 00F3                  __ptext4 00CE  
                __ptext5 035F                  __ptext6 0093                  __ptext7 004A  
                __ptext8 0041                  __ptext9 0053                  _lcd_cmd 0082  
       ___awmod@dividend 0072                  days@day 0075               ??_lcd_data 0074  
   end_of_initialization 07FC          ___lldiv@divisor 0070          ___lldiv@counter 007D  
            bcd2dec@temp 0076            i2c_write@data 0070           __end_of___bmul 00CE  
         __end_of___wmul 00F3              dec2bcd@temp 0078           __end_of_update 0591  
    start_initialization 07EA                _i2c_start 0041                _i2c_write 0093  
               ??___bmul 0071                 ??___wmul 0074               init_fetch0 00A6  
            __pdataBANK0 0020                 ??_update 007A                ___latbits 0002  
          __pcstackBANK0 0054               ?_i2c_start 0070               ?_i2c_write 0070  
               ?_bcd2dec 0076                 ?_dec2bcd 0078                 ?___awdiv 0070  
               ?___awmod 0070                 ?___lldiv 0070                 ?_lcd_cmd 0070  
         ___wmul@product 0074                 _SSPCON_1 0050                 _SSPCON_2 0052  
              lcd_data@i 0074        ___wmul@multiplier 0070                 _SSP_STAT 004C  
            ??_i2c_start 0070              ??_i2c_write 0070                 _i2c_init 01A4  
               _i2c_read 0118                 _i2c_wait 0053                 _i2c_stop 004A  
               __ptext10 0140                 __ptext11 01DA                 __ptext20 00B9  
               __ptext12 02F8                 __ptext13 0233                 __ptext14 0082  
               __ptext15 01A4                 __ptext16 0292                 __ptext17 03EE  
               __ptext18 0071                 __ptext19 0060                 _lcd_data 0071  
               delay@del 0073                 lcd_cmd@i 0074                 init_ram0 00AA  
       ___lldiv@dividend 0074         ___lldiv@quotient 0079  
