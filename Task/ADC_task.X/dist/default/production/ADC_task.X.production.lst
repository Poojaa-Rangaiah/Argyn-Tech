

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue May 28 08:20:55 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Generated 22/03/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F877A Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000D                     	;# 
    74     000E                     	;# 
    75     000E                     	;# 
    76     000F                     	;# 
    77     0010                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001D                     	;# 
    93     001E                     	;# 
    94     001F                     	;# 
    95     0081                     	;# 
    96     0085                     	;# 
    97     0086                     	;# 
    98     0087                     	;# 
    99     0088                     	;# 
   100     0089                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     0091                     	;# 
   105     0092                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     010C                     	;# 
   115     010D                     	;# 
   116     010E                     	;# 
   117     010F                     	;# 
   118     018C                     	;# 
   119     018D                     	;# 
   120     0000                     	;# 
   121     0001                     	;# 
   122     0002                     	;# 
   123     0003                     	;# 
   124     0004                     	;# 
   125     0005                     	;# 
   126     0006                     	;# 
   127     0007                     	;# 
   128     0008                     	;# 
   129     0009                     	;# 
   130     000A                     	;# 
   131     000B                     	;# 
   132     000C                     	;# 
   133     000D                     	;# 
   134     000E                     	;# 
   135     000E                     	;# 
   136     000F                     	;# 
   137     0010                     	;# 
   138     0011                     	;# 
   139     0012                     	;# 
   140     0013                     	;# 
   141     0014                     	;# 
   142     0015                     	;# 
   143     0015                     	;# 
   144     0016                     	;# 
   145     0017                     	;# 
   146     0018                     	;# 
   147     0019                     	;# 
   148     001A                     	;# 
   149     001B                     	;# 
   150     001B                     	;# 
   151     001C                     	;# 
   152     001D                     	;# 
   153     001E                     	;# 
   154     001F                     	;# 
   155     0081                     	;# 
   156     0085                     	;# 
   157     0086                     	;# 
   158     0087                     	;# 
   159     0088                     	;# 
   160     0089                     	;# 
   161     008C                     	;# 
   162     008D                     	;# 
   163     008E                     	;# 
   164     0091                     	;# 
   165     0092                     	;# 
   166     0093                     	;# 
   167     0094                     	;# 
   168     0098                     	;# 
   169     0099                     	;# 
   170     009C                     	;# 
   171     009D                     	;# 
   172     009E                     	;# 
   173     009F                     	;# 
   174     010C                     	;# 
   175     010D                     	;# 
   176     010E                     	;# 
   177     010F                     	;# 
   178     018C                     	;# 
   179     018D                     	;# 
   180                           
   181                           	psect	idataBANK0
   182     0451                     __pidataBANK0:
   183                           
   184                           ;initializer for _cal
   185     0451  3443               	retlw	67
   186     0452  3441               	retlw	65
   187     0453  344C               	retlw	76
   188     0454  3420               	retlw	32
   189     0455  3444               	retlw	68
   190     0456  3441               	retlw	65
   191     0457  3454               	retlw	84
   192     0458  3441               	retlw	65
   193     0459  343A               	retlw	58
   194     045A  3420               	retlw	32
   195                           
   196                           ;initializer for _raw
   197     045B  3452               	retlw	82
   198     045C  3441               	retlw	65
   199     045D  3457               	retlw	87
   200     045E  3420               	retlw	32
   201     045F  3444               	retlw	68
   202     0460  3441               	retlw	65
   203     0461  3454               	retlw	84
   204     0462  3441               	retlw	65
   205     0463  343A               	retlw	58
   206     0464  3420               	retlw	32
   207     0019                     _TXREG	set	25
   208     0018                     _RCSTA	set	24
   209     0006                     _PORTB	set	6
   210     001E                     _ADRESH	set	30
   211     001F                     _ADCON0	set	31
   212     0099                     _SPBRG	set	153
   213     0098                     _TXSTA	set	152
   214     0081                     _OPTION_REG	set	129
   215     0086                     _TRISB	set	134
   216     009F                     _ADCON1	set	159
   217     0088                     _TRISD	set	136
   218     0087                     _TRISC	set	135
   219     0085                     _TRISA	set	133
   220     009E                     _ADRESL	set	158
   221                           
   222                           	psect	cinit
   223     07E6                     start_initialization:	
   224                           ; #config settings
   225                           
   226     07E6                     __initialization:
   227                           
   228                           ; Initialize objects allocated to BANK0
   229     07E6  1383               	bcf	3,7	;select IRP bank0
   230     07E7  304B               	movlw	low (__pdataBANK0+20)
   231     07E8  00FD               	movwf	btemp+-1
   232     07E9  3004               	movlw	high __pidataBANK0
   233     07EA  00FE               	movwf	btemp
   234     07EB  3051               	movlw	low __pidataBANK0
   235     07EC  00FF               	movwf	btemp+1
   236     07ED  3037               	movlw	low __pdataBANK0
   237     07EE  0084               	movwf	4
   238     07EF  120A  118A  2442  120A  118A  	fcall	init_ram0
   239                           
   240                           ; Clear objects allocated to BANK0
   241     07F4  3020               	movlw	low __pbssBANK0
   242     07F5  0084               	movwf	4
   243     07F6  3037               	movlw	low (__pbssBANK0+23)
   244     07F7  120A  118A  240B  120A  118A  	fcall	clear_ram0
   245     07FC                     end_of_initialization:	
   246                           ;End of C runtime variable initialization code
   247                           
   248     07FC                     __end_of__initialization:
   249     07FC  0183               	clrf	3
   250     07FD  120A  118A  2D96   	ljmp	_main	;jump to C main() function
   251                           
   252                           	psect	bssBANK0
   253     0020                     __pbssBANK0:
   254     0020                     _value:
   255     0020                     	ds	4
   256     0024                     _voltage:
   257     0024                     	ds	4
   258     0028                     _loval:
   259     0028                     	ds	2
   260     002A                     _hival:
   261     002A                     	ds	2
   262     002C                     _d3:
   263     002C                     	ds	2
   264     002E                     _d2:
   265     002E                     	ds	2
   266     0030                     _d1:
   267     0030                     	ds	2
   268     0032                     _d0:
   269     0032                     	ds	2
   270     0034                     _m:
   271     0034                     	ds	2
   272     0036                     _x:
   273     0036                     	ds	1
   274                           
   275                           	psect	dataBANK0
   276     0037                     __pdataBANK0:
   277     0037                     _cal:
   278     0037                     	ds	10
   279     0041                     _raw:
   280     0041                     	ds	10
   281                           
   282                           	psect	inittext
   283     043E                     init_fetch0:	
   284                           ;	Called with low address in FSR and high address in W
   285                           
   286     043E  087E               	movf	btemp,w
   287     043F  008A               	movwf	10
   288     0440  087F               	movf	btemp+1,w
   289     0441  0082               	movwf	2
   290     0442                     init_ram0:	
   291                           ;Called with:
   292                           ;	high address of idata address in btemp 
   293                           ;	low address of idata address in btemp+1 
   294                           ;	low address of data in FSR
   295                           ;	high address + 1 of data in btemp-1
   296                           
   297     0442  120A  118A  243E  120A  118A  	fcall	init_fetch0
   298     0447  0080               	movwf	0
   299     0448  0A84               	incf	4,f
   300     0449  0804               	movf	4,w
   301     044A  067D               	xorwf	btemp+-1,w
   302     044B  1903               	btfsc	3,2
   303     044C  3400               	retlw	0
   304     044D  0AFF               	incf	btemp+1,f
   305     044E  1903               	btfsc	3,2
   306     044F  0AFE               	incf	btemp,f
   307     0450  2C42               	goto	init_ram0
   308                           
   309                           	psect	clrtext
   310     040B                     clear_ram0:	
   311                           ;	Called with FSR containing the base address, and
   312                           ;	W with the last address+1
   313                           
   314     040B  0064               	clrwdt	;clear the watchdog before getting into this loop
   315     040C                     clrloop0:
   316     040C  0180               	clrf	0	;clear RAM location pointed to by FSR
   317     040D  0A84               	incf	4,f	;increment pointer
   318     040E  0604               	xorwf	4,w	;XOR with final address
   319     040F  1903               	btfsc	3,2	;have we reached the end yet?
   320     0410  3400               	retlw	0	;all done for this memory range, return
   321     0411  0604               	xorwf	4,w	;XOR again to restore value
   322     0412  2C0C               	goto	clrloop0	;do the next byte
   323                           
   324                           	psect	cstackCOMMON
   325     0070                     __pcstackCOMMON:
   326     0070                     ?_init:
   327     0070                     ??_init:	
   328                           ; 1 bytes @ 0x0
   329                           
   330     0070                     ?_UART_init:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     0070                     ??_UART_init:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     0070                     ?_UART_send:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0070                     ??_UART_send:	
   340                           ; 1 bytes @ 0x0
   341                           
   342     0070                     ?_UART_newline:	
   343                           ; 1 bytes @ 0x0
   344                           
   345     0070                     ??_UART_newline:	
   346                           ; 1 bytes @ 0x0
   347                           
   348     0070                     ?_delay:	
   349                           ; 1 bytes @ 0x0
   350                           
   351     0070                     ?_main:	
   352                           ; 1 bytes @ 0x0
   353                           
   354     0070                     ?___wmul:	
   355                           ; 1 bytes @ 0x0
   356                           
   357     0070                     ?___lmul:	
   358                           ; 2 bytes @ 0x0
   359                           
   360     0070                     delay@k:	
   361                           ; 4 bytes @ 0x0
   362                           
   363     0070                     ___wmul@multiplier:	
   364                           ; 2 bytes @ 0x0
   365                           
   366     0070                     ___lmul@multiplier:	
   367                           ; 2 bytes @ 0x0
   368                           
   369                           
   370                           ; 4 bytes @ 0x0
   371     0070                     	ds	2
   372     0072                     ??_delay:
   373     0072                     UART_send@data:	
   374                           ; 1 bytes @ 0x2
   375                           
   376     0072                     ___wmul@multiplicand:	
   377                           ; 1 bytes @ 0x2
   378                           
   379                           
   380                           ; 2 bytes @ 0x2
   381     0072                     	ds	2
   382     0074                     ??___wmul:
   383     0074                     ___wmul@product:	
   384                           ; 1 bytes @ 0x4
   385                           
   386     0074                     ___lmul@multiplicand:	
   387                           ; 2 bytes @ 0x4
   388                           
   389                           
   390                           ; 4 bytes @ 0x4
   391     0074                     	ds	2
   392     0076                     ?___lwdiv:
   393     0076                     ___lwdiv@divisor:	
   394                           ; 2 bytes @ 0x6
   395                           
   396                           
   397                           ; 2 bytes @ 0x6
   398     0076                     	ds	2
   399     0078                     ??___lmul:
   400     0078                     ___lwdiv@dividend:	
   401                           ; 1 bytes @ 0x8
   402                           
   403                           
   404                           ; 2 bytes @ 0x8
   405     0078                     	ds	1
   406     0079                     ___lmul@product:
   407                           
   408                           ; 4 bytes @ 0x9
   409     0079                     	ds	1
   410     007A                     ??___lwdiv:
   411     007A                     ___lwdiv@quotient:	
   412                           ; 1 bytes @ 0xA
   413                           
   414                           
   415                           ; 2 bytes @ 0xA
   416     007A                     	ds	2
   417     007C                     ___lwdiv@counter:
   418                           
   419                           ; 1 bytes @ 0xC
   420     007C                     	ds	1
   421     007D                     ??___lldiv:
   422                           
   423                           ; 1 bytes @ 0xD
   424     007D                     	ds	1
   425                           
   426                           	psect	cstackBANK0
   427     004B                     __pcstackBANK0:
   428     004B                     ?_output:
   429     004B                     ?___lldiv:	
   430                           ; 1 bytes @ 0x0
   431                           
   432     004B                     output@n:	
   433                           ; 4 bytes @ 0x0
   434                           
   435     004B                     ___lldiv@divisor:	
   436                           ; 2 bytes @ 0x0
   437                           
   438                           
   439                           ; 4 bytes @ 0x0
   440     004B                     	ds	2
   441     004D                     ??_output:
   442                           
   443                           ; 1 bytes @ 0x2
   444     004D                     	ds	2
   445     004F                     ___lldiv@dividend:
   446                           
   447                           ; 4 bytes @ 0x4
   448     004F                     	ds	4
   449     0053                     ___lldiv@quotient:
   450                           
   451                           ; 4 bytes @ 0x8
   452     0053                     	ds	4
   453     0057                     ___lldiv@counter:
   454                           
   455                           ; 1 bytes @ 0xC
   456     0057                     	ds	1
   457     0058                     ??_main:
   458                           
   459                           ; 1 bytes @ 0xD
   460     0058                     	ds	4
   461                           
   462                           	psect	maintext
   463     0596                     __pmaintext:	
   464 ;;
   465 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   466 ;;
   467 ;; *************** function _main *****************
   468 ;; Defined at:
   469 ;;		line 23 in file "adc_task.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;		None
   472 ;; Auto vars:     Size  Location     Type
   473 ;;		None
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   478 ;; Tracked objects:
   479 ;;		On entry : B00/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   483 ;;      Params:         0       0       0       0       0
   484 ;;      Locals:         0       0       0       0       0
   485 ;;      Temps:          0       4       0       0       0
   486 ;;      Totals:         0       4       0       0       0
   487 ;;Total ram usage:        4 bytes
   488 ;; Hardware stack levels required when called: 2
   489 ;; This function calls:
   490 ;;		_UART_init
   491 ;;		_UART_newline
   492 ;;		_UART_send
   493 ;;		___lldiv
   494 ;;		___lmul
   495 ;;		_delay
   496 ;;		_init
   497 ;;		_output
   498 ;; This function is called by:
   499 ;;		Startup code after reset
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503     0596                     _main:	
   504                           ;psect for function _main
   505                           
   506     0596                     l962:	
   507                           ;incstack = 0
   508                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   509                           
   510                           
   511                           ;adc_task.c: 24:     init();
   512     0596  120A  118A  2420  120A  118A  	fcall	_init
   513     059B                     l964:
   514                           
   515                           ;adc_task.c: 25:     UART_init();
   516     059B  120A  118A  2465  120A  118A  	fcall	_UART_init
   517     05A0                     l966:
   518                           
   519                           ;adc_task.c: 27:         ADCON0 |= 0x04;
   520     05A0  1283               	bcf	3,5	;RP0=0, select bank0
   521     05A1  1303               	bcf	3,6	;RP1=0, select bank0
   522     05A2  151F               	bsf	31,2	;volatile
   523     05A3                     l72:	
   524                           ;adc_task.c: 28:         while(ADCON0&0x04);
   525                           
   526     05A3  191F               	btfsc	31,2	;volatile
   527     05A4  2DA6               	goto	u611
   528     05A5  2DA7               	goto	u610
   529     05A6                     u611:
   530     05A6  2DA3               	goto	l72
   531     05A7                     u610:
   532     05A7                     l968:
   533                           
   534                           ;adc_task.c: 29:         hival = ADRESH;
   535     05A7  081E               	movf	30,w	;volatile
   536     05A8  00D8               	movwf	??_main
   537     05A9  01D9               	clrf	??_main+1
   538     05AA  0858               	movf	??_main,w
   539     05AB  00AA               	movwf	_hival
   540     05AC  0859               	movf	??_main+1,w
   541     05AD  00AB               	movwf	_hival+1
   542                           
   543                           ;adc_task.c: 30:         loval = ADRESL;
   544     05AE  1683               	bsf	3,5	;RP0=1, select bank1
   545     05AF  1303               	bcf	3,6	;RP1=0, select bank1
   546     05B0  081E               	movf	30,w	;volatile
   547     05B1  1283               	bcf	3,5	;RP0=0, select bank0
   548     05B2  1303               	bcf	3,6	;RP1=0, select bank0
   549     05B3  00D8               	movwf	??_main
   550     05B4  01D9               	clrf	??_main+1
   551     05B5  0858               	movf	??_main,w
   552     05B6  00A8               	movwf	_loval
   553     05B7  0859               	movf	??_main+1,w
   554     05B8  00A9               	movwf	_loval+1
   555     05B9                     l970:
   556                           
   557                           ;adc_task.c: 31:         value = (hival<<2)+(loval>>6);
   558     05B9  0829               	movf	_loval+1,w
   559     05BA  00D9               	movwf	??_main+1
   560     05BB  0828               	movf	_loval,w
   561     05BC  00D8               	movwf	??_main
   562     05BD  3006               	movlw	6
   563     05BE                     u625:
   564     05BE  1003               	clrc
   565     05BF  0CD9               	rrf	??_main+1,f
   566     05C0  0CD8               	rrf	??_main,f
   567     05C1  3EFF               	addlw	-1
   568     05C2  1D03               	skipz
   569     05C3  2DBE               	goto	u625
   570     05C4  082B               	movf	_hival+1,w
   571     05C5  00DB               	movwf	??_main+3
   572     05C6  082A               	movf	_hival,w
   573     05C7  00DA               	movwf	??_main+2
   574     05C8  1003               	clrc
   575     05C9  0DDA               	rlf	??_main+2,f
   576     05CA  0DDB               	rlf	??_main+3,f
   577     05CB  1003               	clrc
   578     05CC  0DDA               	rlf	??_main+2,f
   579     05CD  0DDB               	rlf	??_main+3,f
   580     05CE  0858               	movf	??_main,w
   581     05CF  075A               	addwf	??_main+2,w
   582     05D0  00A0               	movwf	_value
   583     05D1  0859               	movf	??_main+1,w
   584     05D2  1803               	skipnc
   585     05D3  0A59               	incf	??_main+1,w
   586     05D4  075B               	addwf	??_main+3,w
   587     05D5  00A1               	movwf	_value+1
   588     05D6  01A2               	clrf	_value+2
   589     05D7  01A3               	clrf	_value+3
   590     05D8                     l972:
   591                           
   592                           ;adc_task.c: 32:         voltage = (value*100)/1023;
   593     05D8  3000               	movlw	0
   594     05D9  00CE               	movwf	___lldiv@divisor+3
   595     05DA  3000               	movlw	0
   596     05DB  00CD               	movwf	___lldiv@divisor+2
   597     05DC  3003               	movlw	3
   598     05DD  00CC               	movwf	___lldiv@divisor+1
   599     05DE  30FF               	movlw	255
   600     05DF  00CB               	movwf	___lldiv@divisor
   601     05E0  0823               	movf	_value+3,w
   602     05E1  00F3               	movwf	___lmul@multiplier+3
   603     05E2  0822               	movf	_value+2,w
   604     05E3  00F2               	movwf	___lmul@multiplier+2
   605     05E4  0821               	movf	_value+1,w
   606     05E5  00F1               	movwf	___lmul@multiplier+1
   607     05E6  0820               	movf	_value,w
   608     05E7  00F0               	movwf	___lmul@multiplier
   609     05E8  3000               	movlw	0
   610     05E9  00F7               	movwf	___lmul@multiplicand+3
   611     05EA  3000               	movlw	0
   612     05EB  00F6               	movwf	___lmul@multiplicand+2
   613     05EC  3000               	movlw	0
   614     05ED  00F5               	movwf	___lmul@multiplicand+1
   615     05EE  3064               	movlw	100
   616     05EF  00F4               	movwf	___lmul@multiplicand
   617     05F0  120A  118A  24E8  120A  118A  	fcall	___lmul
   618     05F5  0873               	movf	?___lmul+3,w
   619     05F6  1283               	bcf	3,5	;RP0=0, select bank0
   620     05F7  1303               	bcf	3,6	;RP1=0, select bank0
   621     05F8  00D2               	movwf	___lldiv@dividend+3
   622     05F9  0872               	movf	?___lmul+2,w
   623     05FA  00D1               	movwf	___lldiv@dividend+2
   624     05FB  0871               	movf	?___lmul+1,w
   625     05FC  00D0               	movwf	___lldiv@dividend+1
   626     05FD  0870               	movf	?___lmul,w
   627     05FE  00CF               	movwf	___lldiv@dividend
   628     05FF  120A  118A  252E  120A  118A  	fcall	___lldiv
   629     0604  1283               	bcf	3,5	;RP0=0, select bank0
   630     0605  1303               	bcf	3,6	;RP1=0, select bank0
   631     0606  084E               	movf	?___lldiv+3,w
   632     0607  00A7               	movwf	_voltage+3
   633     0608  084D               	movf	?___lldiv+2,w
   634     0609  00A6               	movwf	_voltage+2
   635     060A  084C               	movf	?___lldiv+1,w
   636     060B  00A5               	movwf	_voltage+1
   637     060C  084B               	movf	?___lldiv,w
   638     060D  00A4               	movwf	_voltage
   639     060E                     l974:
   640                           
   641                           ;adc_task.c: 34:         for(x=0;x<10;x++) {
   642     060E  01B6               	clrf	_x
   643     060F                     l980:
   644                           
   645                           ;adc_task.c: 35:             UART_send(raw[x]);
   646     060F  0836               	movf	_x,w
   647     0610  3E41               	addlw	(low (_raw| 0))& (0+255)
   648     0611  0084               	movwf	4
   649     0612  1383               	bcf	3,7	;select IRP bank0
   650     0613  0800               	movf	0,w
   651     0614  120A  118A  242F  120A  118A  	fcall	_UART_send
   652     0619                     l982:
   653                           
   654                           ;adc_task.c: 36:         } output(value);
   655     0619  3001               	movlw	1
   656     061A  00FF               	movwf	btemp+1
   657     061B  087F               	movf	btemp+1,w
   658     061C  1283               	bcf	3,5	;RP0=0, select bank0
   659     061D  1303               	bcf	3,6	;RP1=0, select bank0
   660     061E  07B6               	addwf	_x,f
   661     061F                     l984:
   662     061F  300A               	movlw	10
   663     0620  0236               	subwf	_x,w
   664     0621  1C03               	skipc
   665     0622  2E24               	goto	u631
   666     0623  2E25               	goto	u630
   667     0624                     u631:
   668     0624  2E0F               	goto	l980
   669     0625                     u630:
   670     0625                     l986:
   671     0625  0821               	movf	_value+1,w
   672     0626  00CC               	movwf	output@n+1
   673     0627  0820               	movf	_value,w
   674     0628  00CB               	movwf	output@n
   675     0629  120A  118A  266D  120A  118A  	fcall	_output
   676     062E                     l988:
   677                           
   678                           ;adc_task.c: 37:         UART_newline();
   679     062E  120A  118A  2404  120A  118A  	fcall	_UART_newline
   680     0633                     l990:
   681                           
   682                           ;adc_task.c: 39:         for(x=0;x<10;x++) {
   683     0633  1283               	bcf	3,5	;RP0=0, select bank0
   684     0634  1303               	bcf	3,6	;RP1=0, select bank0
   685     0635  01B6               	clrf	_x
   686     0636                     l996:
   687                           
   688                           ;adc_task.c: 40:             UART_send(cal[x]);
   689     0636  0836               	movf	_x,w
   690     0637  3E37               	addlw	(low (_cal| 0))& (0+255)
   691     0638  0084               	movwf	4
   692     0639  1383               	bcf	3,7	;select IRP bank0
   693     063A  0800               	movf	0,w
   694     063B  120A  118A  242F  120A  118A  	fcall	_UART_send
   695     0640                     l998:
   696                           
   697                           ;adc_task.c: 41:         } output(voltage);
   698     0640  3001               	movlw	1
   699     0641  00FF               	movwf	btemp+1
   700     0642  087F               	movf	btemp+1,w
   701     0643  1283               	bcf	3,5	;RP0=0, select bank0
   702     0644  1303               	bcf	3,6	;RP1=0, select bank0
   703     0645  07B6               	addwf	_x,f
   704     0646                     l1000:
   705     0646  300A               	movlw	10
   706     0647  0236               	subwf	_x,w
   707     0648  1C03               	skipc
   708     0649  2E4B               	goto	u641
   709     064A  2E4C               	goto	u640
   710     064B                     u641:
   711     064B  2E36               	goto	l996
   712     064C                     u640:
   713     064C                     l1002:
   714     064C  0825               	movf	_voltage+1,w
   715     064D  00CC               	movwf	output@n+1
   716     064E  0824               	movf	_voltage,w
   717     064F  00CB               	movwf	output@n
   718     0650  120A  118A  266D  120A  118A  	fcall	_output
   719     0655                     l1004:
   720                           
   721                           ;adc_task.c: 42:         UART_send('V');
   722     0655  3056               	movlw	86
   723     0656  120A  118A  242F  120A  118A  	fcall	_UART_send
   724     065B                     l1006:
   725                           
   726                           ;adc_task.c: 43:         UART_newline();
   727     065B  120A  118A  2404  120A  118A  	fcall	_UART_newline
   728     0660                     l1008:
   729                           
   730                           ;adc_task.c: 44:         delay(1000000);
   731     0660  3040               	movlw	64
   732     0661  00F0               	movwf	delay@k
   733     0662  3042               	movlw	66
   734     0663  00F1               	movwf	delay@k+1
   735     0664  120A  118A  2413  120A  118A  	fcall	_delay
   736     0669  2DA0               	goto	l966
   737     066A  120A  118A  2800   	ljmp	start
   738     066D                     __end_of_main:
   739                           
   740                           	psect	text1
   741     066D                     __ptext1:	
   742 ;; *************** function _output *****************
   743 ;; Defined at:
   744 ;;		line 68 in file "adc_task.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  n               2    0[BANK0 ] unsigned int 
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         0       2       0       0       0
   759 ;;      Locals:         0       0       0       0       0
   760 ;;      Temps:          0       6       0       0       0
   761 ;;      Totals:         0       8       0       0       0
   762 ;;Total ram usage:        8 bytes
   763 ;; Hardware stack levels used: 1
   764 ;; Hardware stack levels required when called: 1
   765 ;; This function calls:
   766 ;;		_UART_send
   767 ;;		___lwdiv
   768 ;;		___wmul
   769 ;; This function is called by:
   770 ;;		_main
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774     066D                     _output:	
   775                           ;psect for function _output
   776                           
   777     066D                     l894:	
   778                           ;incstack = 0
   779                           ; Regs used in _output: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   780                           
   781                           
   782                           ;adc_task.c: 69:     d3 = (unsigned int)(n/1000);
   783     066D  30E8               	movlw	232
   784     066E  00F6               	movwf	___lwdiv@divisor
   785     066F  3003               	movlw	3
   786     0670  00F7               	movwf	___lwdiv@divisor+1
   787     0671  1283               	bcf	3,5	;RP0=0, select bank0
   788     0672  1303               	bcf	3,6	;RP1=0, select bank0
   789     0673  084C               	movf	output@n+1,w
   790     0674  00F9               	movwf	___lwdiv@dividend+1
   791     0675  084B               	movf	output@n,w
   792     0676  00F8               	movwf	___lwdiv@dividend
   793     0677  120A  118A  24A4  120A  118A  	fcall	___lwdiv
   794     067C  0877               	movf	?___lwdiv+1,w
   795     067D  1283               	bcf	3,5	;RP0=0, select bank0
   796     067E  1303               	bcf	3,6	;RP1=0, select bank0
   797     067F  00AD               	movwf	_d3+1
   798     0680  0876               	movf	?___lwdiv,w
   799     0681  00AC               	movwf	_d3
   800                           
   801                           ;adc_task.c: 70:     d2 = (unsigned int)(n-(d3*1000))/100;
   802     0682  3064               	movlw	100
   803     0683  00F6               	movwf	___lwdiv@divisor
   804     0684  3000               	movlw	0
   805     0685  00F7               	movwf	___lwdiv@divisor+1
   806     0686  082D               	movf	_d3+1,w
   807     0687  00F1               	movwf	___wmul@multiplier+1
   808     0688  082C               	movf	_d3,w
   809     0689  00F0               	movwf	___wmul@multiplier
   810     068A  3018               	movlw	24
   811     068B  00F2               	movwf	___wmul@multiplicand
   812     068C  30FC               	movlw	252
   813     068D  00F3               	movwf	___wmul@multiplicand+1
   814     068E  120A  118A  247F  120A  118A  	fcall	___wmul
   815     0693  1283               	bcf	3,5	;RP0=0, select bank0
   816     0694  1303               	bcf	3,6	;RP1=0, select bank0
   817     0695  084B               	movf	output@n,w
   818     0696  0770               	addwf	?___wmul,w
   819     0697  00F8               	movwf	___lwdiv@dividend
   820     0698  084C               	movf	output@n+1,w
   821     0699  1803               	skipnc
   822     069A  0A4C               	incf	output@n+1,w
   823     069B  0771               	addwf	?___wmul+1,w
   824     069C  00F9               	movwf	___lwdiv@dividend+1
   825     069D  120A  118A  24A4  120A  118A  	fcall	___lwdiv
   826     06A2  0877               	movf	?___lwdiv+1,w
   827     06A3  1283               	bcf	3,5	;RP0=0, select bank0
   828     06A4  1303               	bcf	3,6	;RP1=0, select bank0
   829     06A5  00AF               	movwf	_d2+1
   830     06A6  0876               	movf	?___lwdiv,w
   831     06A7  00AE               	movwf	_d2
   832                           
   833                           ;adc_task.c: 71:     d1 = (unsigned int)(n-(d3*1000)-(d2*100))/10;
   834     06A8  300A               	movlw	10
   835     06A9  00F6               	movwf	___lwdiv@divisor
   836     06AA  3000               	movlw	0
   837     06AB  00F7               	movwf	___lwdiv@divisor+1
   838     06AC  082D               	movf	_d3+1,w
   839     06AD  00F1               	movwf	___wmul@multiplier+1
   840     06AE  082C               	movf	_d3,w
   841     06AF  00F0               	movwf	___wmul@multiplier
   842     06B0  3018               	movlw	24
   843     06B1  00F2               	movwf	___wmul@multiplicand
   844     06B2  30FC               	movlw	252
   845     06B3  00F3               	movwf	___wmul@multiplicand+1
   846     06B4  120A  118A  247F  120A  118A  	fcall	___wmul
   847     06B9  0870               	movf	?___wmul,w
   848     06BA  1283               	bcf	3,5	;RP0=0, select bank0
   849     06BB  1303               	bcf	3,6	;RP1=0, select bank0
   850     06BC  00CD               	movwf	??_output
   851     06BD  0871               	movf	?___wmul+1,w
   852     06BE  00CE               	movwf	??_output+1
   853     06BF  082F               	movf	_d2+1,w
   854     06C0  00F1               	movwf	___wmul@multiplier+1
   855     06C1  082E               	movf	_d2,w
   856     06C2  00F0               	movwf	___wmul@multiplier
   857     06C3  309C               	movlw	156
   858     06C4  00F2               	movwf	___wmul@multiplicand
   859     06C5  30FF               	movlw	255
   860     06C6  00F3               	movwf	___wmul@multiplicand+1
   861     06C7  120A  118A  247F  120A  118A  	fcall	___wmul
   862     06CC  0870               	movf	?___wmul,w
   863     06CD  1283               	bcf	3,5	;RP0=0, select bank0
   864     06CE  1303               	bcf	3,6	;RP1=0, select bank0
   865     06CF  074D               	addwf	??_output,w
   866     06D0  00CF               	movwf	??_output+2
   867     06D1  0871               	movf	?___wmul+1,w
   868     06D2  1803               	skipnc
   869     06D3  0A71               	incf	?___wmul+1,w
   870     06D4  074E               	addwf	??_output+1,w
   871     06D5  00D0               	movwf	??_output+3
   872     06D6  084B               	movf	output@n,w
   873     06D7  074F               	addwf	??_output+2,w
   874     06D8  00F8               	movwf	___lwdiv@dividend
   875     06D9  084C               	movf	output@n+1,w
   876     06DA  1803               	skipnc
   877     06DB  0A4C               	incf	output@n+1,w
   878     06DC  0750               	addwf	??_output+3,w
   879     06DD  00F9               	movwf	___lwdiv@dividend+1
   880     06DE  120A  118A  24A4  120A  118A  	fcall	___lwdiv
   881     06E3  0877               	movf	?___lwdiv+1,w
   882     06E4  1283               	bcf	3,5	;RP0=0, select bank0
   883     06E5  1303               	bcf	3,6	;RP1=0, select bank0
   884     06E6  00B1               	movwf	_d1+1
   885     06E7  0876               	movf	?___lwdiv,w
   886     06E8  00B0               	movwf	_d1
   887     06E9                     l896:
   888                           
   889                           ;adc_task.c: 72:     d0 = (unsigned int)(n-(d3*1000)-(d2*100)-(d1*10));
   890     06E9  082D               	movf	_d3+1,w
   891     06EA  00F1               	movwf	___wmul@multiplier+1
   892     06EB  082C               	movf	_d3,w
   893     06EC  00F0               	movwf	___wmul@multiplier
   894     06ED  3018               	movlw	24
   895     06EE  00F2               	movwf	___wmul@multiplicand
   896     06EF  30FC               	movlw	252
   897     06F0  00F3               	movwf	___wmul@multiplicand+1
   898     06F1  120A  118A  247F  120A  118A  	fcall	___wmul
   899     06F6  0870               	movf	?___wmul,w
   900     06F7  1283               	bcf	3,5	;RP0=0, select bank0
   901     06F8  1303               	bcf	3,6	;RP1=0, select bank0
   902     06F9  00CD               	movwf	??_output
   903     06FA  0871               	movf	?___wmul+1,w
   904     06FB  00CE               	movwf	??_output+1
   905     06FC  082F               	movf	_d2+1,w
   906     06FD  00F1               	movwf	___wmul@multiplier+1
   907     06FE  082E               	movf	_d2,w
   908     06FF  00F0               	movwf	___wmul@multiplier
   909     0700  309C               	movlw	156
   910     0701  00F2               	movwf	___wmul@multiplicand
   911     0702  30FF               	movlw	255
   912     0703  00F3               	movwf	___wmul@multiplicand+1
   913     0704  120A  118A  247F  120A  118A  	fcall	___wmul
   914     0709  0870               	movf	?___wmul,w
   915     070A  1283               	bcf	3,5	;RP0=0, select bank0
   916     070B  1303               	bcf	3,6	;RP1=0, select bank0
   917     070C  074D               	addwf	??_output,w
   918     070D  00CF               	movwf	??_output+2
   919     070E  0871               	movf	?___wmul+1,w
   920     070F  1803               	skipnc
   921     0710  0A71               	incf	?___wmul+1,w
   922     0711  074E               	addwf	??_output+1,w
   923     0712  00D0               	movwf	??_output+3
   924     0713  0831               	movf	_d1+1,w
   925     0714  00F1               	movwf	___wmul@multiplier+1
   926     0715  0830               	movf	_d1,w
   927     0716  00F0               	movwf	___wmul@multiplier
   928     0717  30F6               	movlw	246
   929     0718  00F2               	movwf	___wmul@multiplicand
   930     0719  30FF               	movlw	255
   931     071A  00F3               	movwf	___wmul@multiplicand+1
   932     071B  120A  118A  247F  120A  118A  	fcall	___wmul
   933     0720  0870               	movf	?___wmul,w
   934     0721  1283               	bcf	3,5	;RP0=0, select bank0
   935     0722  1303               	bcf	3,6	;RP1=0, select bank0
   936     0723  074F               	addwf	??_output+2,w
   937     0724  00D1               	movwf	??_output+4
   938     0725  0871               	movf	?___wmul+1,w
   939     0726  1803               	skipnc
   940     0727  0A71               	incf	?___wmul+1,w
   941     0728  0750               	addwf	??_output+3,w
   942     0729  00D2               	movwf	??_output+5
   943     072A  084B               	movf	output@n,w
   944     072B  0751               	addwf	??_output+4,w
   945     072C  00B2               	movwf	_d0
   946     072D  084C               	movf	output@n+1,w
   947     072E  1803               	skipnc
   948     072F  0A4C               	incf	output@n+1,w
   949     0730  0752               	addwf	??_output+5,w
   950     0731  00B3               	movwf	_d0+1
   951     0732                     l898:
   952                           
   953                           ;adc_task.c: 73:     if (d3>0) {
   954     0732  082C               	movf	_d3,w
   955     0733  042D               	iorwf	_d3+1,w
   956     0734  1903               	btfsc	3,2
   957     0735  2F37               	goto	u441
   958     0736  2F38               	goto	u440
   959     0737                     u441:
   960     0737  2F5B               	goto	l902
   961     0738                     u440:
   962     0738                     l900:
   963                           
   964                           ;adc_task.c: 74:         UART_send(0x30+d3);
   965     0738  082C               	movf	_d3,w
   966     0739  3E30               	addlw	48
   967     073A  120A  118A  242F  120A  118A  	fcall	_UART_send
   968                           
   969                           ;adc_task.c: 75:         UART_send(0x30+d2);
   970     073F  1283               	bcf	3,5	;RP0=0, select bank0
   971     0740  1303               	bcf	3,6	;RP1=0, select bank0
   972     0741  082E               	movf	_d2,w
   973     0742  3E30               	addlw	48
   974     0743  120A  118A  242F  120A  118A  	fcall	_UART_send
   975                           
   976                           ;adc_task.c: 76:         UART_send(0x30+d1);
   977     0748  1283               	bcf	3,5	;RP0=0, select bank0
   978     0749  1303               	bcf	3,6	;RP1=0, select bank0
   979     074A  0830               	movf	_d1,w
   980     074B  3E30               	addlw	48
   981     074C  120A  118A  242F  120A  118A  	fcall	_UART_send
   982                           
   983                           ;adc_task.c: 77:         UART_send(0x30+d0);
   984     0751  1283               	bcf	3,5	;RP0=0, select bank0
   985     0752  1303               	bcf	3,6	;RP1=0, select bank0
   986     0753  0832               	movf	_d0,w
   987     0754  3E30               	addlw	48
   988     0755  120A  118A  242F  120A  118A  	fcall	_UART_send
   989                           
   990                           ;adc_task.c: 78:     }
   991     075A  2FE5               	goto	l95
   992     075B                     l902:
   993     075B  082E               	movf	_d2,w
   994     075C  042F               	iorwf	_d2+1,w
   995     075D  1903               	btfsc	3,2
   996     075E  2F60               	goto	u451
   997     075F  2F61               	goto	u450
   998     0760                     u451:
   999     0760  2F83               	goto	l906
  1000     0761                     u450:
  1001     0761                     l904:
  1002                           
  1003                           ;adc_task.c: 80:         UART_send(' ');
  1004     0761  3020               	movlw	32
  1005     0762  120A  118A  242F  120A  118A  	fcall	_UART_send
  1006                           
  1007                           ;adc_task.c: 81:         UART_send(0x30+d2);
  1008     0767  1283               	bcf	3,5	;RP0=0, select bank0
  1009     0768  1303               	bcf	3,6	;RP1=0, select bank0
  1010     0769  082E               	movf	_d2,w
  1011     076A  3E30               	addlw	48
  1012     076B  120A  118A  242F  120A  118A  	fcall	_UART_send
  1013                           
  1014                           ;adc_task.c: 82:         UART_send(0x30+d1);
  1015     0770  1283               	bcf	3,5	;RP0=0, select bank0
  1016     0771  1303               	bcf	3,6	;RP1=0, select bank0
  1017     0772  0830               	movf	_d1,w
  1018     0773  3E30               	addlw	48
  1019     0774  120A  118A  242F  120A  118A  	fcall	_UART_send
  1020                           
  1021                           ;adc_task.c: 83:         UART_send(0x30+d0);
  1022     0779  1283               	bcf	3,5	;RP0=0, select bank0
  1023     077A  1303               	bcf	3,6	;RP1=0, select bank0
  1024     077B  0832               	movf	_d0,w
  1025     077C  3E30               	addlw	48
  1026     077D  120A  118A  242F  120A  118A  	fcall	_UART_send
  1027                           
  1028                           ;adc_task.c: 84:     }
  1029     0782  2FE5               	goto	l95
  1030     0783                     l906:
  1031     0783  0830               	movf	_d1,w
  1032     0784  0431               	iorwf	_d1+1,w
  1033     0785  1903               	btfsc	3,2
  1034     0786  2F88               	goto	u461
  1035     0787  2F89               	goto	u460
  1036     0788                     u461:
  1037     0788  2FA8               	goto	l910
  1038     0789                     u460:
  1039     0789                     l908:
  1040                           
  1041                           ;adc_task.c: 86:         UART_send(' ');
  1042     0789  3020               	movlw	32
  1043     078A  120A  118A  242F  120A  118A  	fcall	_UART_send
  1044                           
  1045                           ;adc_task.c: 87:         UART_send(' ');
  1046     078F  3020               	movlw	32
  1047     0790  120A  118A  242F  120A  118A  	fcall	_UART_send
  1048                           
  1049                           ;adc_task.c: 88:         UART_send(0x30+d1);
  1050     0795  1283               	bcf	3,5	;RP0=0, select bank0
  1051     0796  1303               	bcf	3,6	;RP1=0, select bank0
  1052     0797  0830               	movf	_d1,w
  1053     0798  3E30               	addlw	48
  1054     0799  120A  118A  242F  120A  118A  	fcall	_UART_send
  1055                           
  1056                           ;adc_task.c: 89:         UART_send(0x30+d0);
  1057     079E  1283               	bcf	3,5	;RP0=0, select bank0
  1058     079F  1303               	bcf	3,6	;RP1=0, select bank0
  1059     07A0  0832               	movf	_d0,w
  1060     07A1  3E30               	addlw	48
  1061     07A2  120A  118A  242F  120A  118A  	fcall	_UART_send
  1062                           
  1063                           ;adc_task.c: 90:     }
  1064     07A7  2FE5               	goto	l95
  1065     07A8                     l910:
  1066     07A8  0832               	movf	_d0,w
  1067     07A9  0433               	iorwf	_d0+1,w
  1068     07AA  1903               	btfsc	3,2
  1069     07AB  2FAD               	goto	u471
  1070     07AC  2FAE               	goto	u470
  1071     07AD                     u471:
  1072     07AD  2FCA               	goto	l914
  1073     07AE                     u470:
  1074     07AE                     l912:
  1075                           
  1076                           ;adc_task.c: 92:         UART_send(' ');
  1077     07AE  3020               	movlw	32
  1078     07AF  120A  118A  242F  120A  118A  	fcall	_UART_send
  1079                           
  1080                           ;adc_task.c: 93:         UART_send(' ');
  1081     07B4  3020               	movlw	32
  1082     07B5  120A  118A  242F  120A  118A  	fcall	_UART_send
  1083                           
  1084                           ;adc_task.c: 94:         UART_send(' ');
  1085     07BA  3020               	movlw	32
  1086     07BB  120A  118A  242F  120A  118A  	fcall	_UART_send
  1087                           
  1088                           ;adc_task.c: 95:         UART_send(0x30+d0);
  1089     07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1090     07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1091     07C2  0832               	movf	_d0,w
  1092     07C3  3E30               	addlw	48
  1093     07C4  120A  118A  242F  120A  118A  	fcall	_UART_send
  1094                           
  1095                           ;adc_task.c: 96:     }
  1096     07C9  2FE5               	goto	l95
  1097     07CA                     l914:
  1098                           
  1099                           ;adc_task.c: 98:         UART_send(' ');
  1100     07CA  3020               	movlw	32
  1101     07CB  120A  118A  242F  120A  118A  	fcall	_UART_send
  1102                           
  1103                           ;adc_task.c: 99:         UART_send(' ');
  1104     07D0  3020               	movlw	32
  1105     07D1  120A  118A  242F  120A  118A  	fcall	_UART_send
  1106                           
  1107                           ;adc_task.c: 100:         UART_send(' ');
  1108     07D6  3020               	movlw	32
  1109     07D7  120A  118A  242F  120A  118A  	fcall	_UART_send
  1110                           
  1111                           ;adc_task.c: 101:         UART_send(0x30+d0);
  1112     07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1113     07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1114     07DE  0832               	movf	_d0,w
  1115     07DF  3E30               	addlw	48
  1116     07E0  120A  118A  242F  120A  118A  	fcall	_UART_send
  1117     07E5                     l95:
  1118     07E5  0008               	return
  1119     07E6                     __end_of_output:
  1120                           
  1121                           	psect	text2
  1122     047F                     __ptext2:	
  1123 ;; *************** function ___wmul *****************
  1124 ;; Defined at:
  1125 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  multiplier      2    0[COMMON] unsigned int 
  1128 ;;  multiplicand    2    2[COMMON] unsigned int 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  product         2    4[COMMON] unsigned int 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  2    0[COMMON] unsigned int 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1140 ;;      Params:         4       0       0       0       0
  1141 ;;      Locals:         2       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0
  1143 ;;      Totals:         6       0       0       0       0
  1144 ;;Total ram usage:        6 bytes
  1145 ;; Hardware stack levels used: 1
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_output
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153     047F                     ___wmul:	
  1154                           ;psect for function ___wmul
  1155                           
  1156     047F                     l834:	
  1157                           ;incstack = 0
  1158                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1159                           
  1160     047F  01F4               	clrf	___wmul@product
  1161     0480  01F5               	clrf	___wmul@product+1
  1162     0481                     l836:
  1163     0481  1C70               	btfss	___wmul@multiplier,0
  1164     0482  2C84               	goto	u331
  1165     0483  2C85               	goto	u330
  1166     0484                     u331:
  1167     0484  2C8B               	goto	l196
  1168     0485                     u330:
  1169     0485                     l838:
  1170     0485  0872               	movf	___wmul@multiplicand,w
  1171     0486  07F4               	addwf	___wmul@product,f
  1172     0487  1803               	skipnc
  1173     0488  0AF5               	incf	___wmul@product+1,f
  1174     0489  0873               	movf	___wmul@multiplicand+1,w
  1175     048A  07F5               	addwf	___wmul@product+1,f
  1176     048B                     l196:
  1177     048B  3001               	movlw	1
  1178     048C                     u345:
  1179     048C  1003               	clrc
  1180     048D  0DF2               	rlf	___wmul@multiplicand,f
  1181     048E  0DF3               	rlf	___wmul@multiplicand+1,f
  1182     048F  3EFF               	addlw	-1
  1183     0490  1D03               	skipz
  1184     0491  2C8C               	goto	u345
  1185     0492                     l840:
  1186     0492  3001               	movlw	1
  1187     0493                     u355:
  1188     0493  1003               	clrc
  1189     0494  0CF1               	rrf	___wmul@multiplier+1,f
  1190     0495  0CF0               	rrf	___wmul@multiplier,f
  1191     0496  3EFF               	addlw	-1
  1192     0497  1D03               	skipz
  1193     0498  2C93               	goto	u355
  1194     0499                     l842:
  1195     0499  0870               	movf	___wmul@multiplier,w
  1196     049A  0471               	iorwf	___wmul@multiplier+1,w
  1197     049B  1D03               	btfss	3,2
  1198     049C  2C9E               	goto	u361
  1199     049D  2C9F               	goto	u360
  1200     049E                     u361:
  1201     049E  2C81               	goto	l836
  1202     049F                     u360:
  1203     049F                     l844:
  1204     049F  0875               	movf	___wmul@product+1,w
  1205     04A0  00F1               	movwf	?___wmul+1
  1206     04A1  0874               	movf	___wmul@product,w
  1207     04A2  00F0               	movwf	?___wmul
  1208     04A3                     l198:
  1209     04A3  0008               	return
  1210     04A4                     __end_of___wmul:
  1211                           
  1212                           	psect	text3
  1213     04A4                     __ptext3:	
  1214 ;; *************** function ___lwdiv *****************
  1215 ;; Defined at:
  1216 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  divisor         2    6[COMMON] unsigned int 
  1219 ;;  dividend        2    8[COMMON] unsigned int 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  quotient        2   10[COMMON] unsigned int 
  1222 ;;  counter         1   12[COMMON] unsigned char 
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  2    6[COMMON] unsigned int 
  1225 ;; Registers used:
  1226 ;;		wreg, status,2, status,0, btemp+1
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1232 ;;      Params:         4       0       0       0       0
  1233 ;;      Locals:         3       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0
  1235 ;;      Totals:         7       0       0       0       0
  1236 ;;Total ram usage:        7 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; This function calls:
  1239 ;;		Nothing
  1240 ;; This function is called by:
  1241 ;;		_output
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245     04A4                     ___lwdiv:	
  1246                           ;psect for function ___lwdiv
  1247                           
  1248     04A4                     l848:	
  1249                           ;incstack = 0
  1250                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1251                           
  1252     04A4  01FA               	clrf	___lwdiv@quotient
  1253     04A5  01FB               	clrf	___lwdiv@quotient+1
  1254     04A6                     l850:
  1255     04A6  0876               	movf	___lwdiv@divisor,w
  1256     04A7  0477               	iorwf	___lwdiv@divisor+1,w
  1257     04A8  1903               	btfsc	3,2
  1258     04A9  2CAB               	goto	u371
  1259     04AA  2CAC               	goto	u370
  1260     04AB                     u371:
  1261     04AB  2CE3               	goto	l870
  1262     04AC                     u370:
  1263     04AC                     l852:
  1264     04AC  01FC               	clrf	___lwdiv@counter
  1265     04AD  0AFC               	incf	___lwdiv@counter,f
  1266     04AE  2CBA               	goto	l858
  1267     04AF                     l854:
  1268     04AF  3001               	movlw	1
  1269     04B0                     u385:
  1270     04B0  1003               	clrc
  1271     04B1  0DF6               	rlf	___lwdiv@divisor,f
  1272     04B2  0DF7               	rlf	___lwdiv@divisor+1,f
  1273     04B3  3EFF               	addlw	-1
  1274     04B4  1D03               	skipz
  1275     04B5  2CB0               	goto	u385
  1276     04B6                     l856:
  1277     04B6  3001               	movlw	1
  1278     04B7  00FF               	movwf	btemp+1
  1279     04B8  087F               	movf	btemp+1,w
  1280     04B9  07FC               	addwf	___lwdiv@counter,f
  1281     04BA                     l858:
  1282     04BA  1FF7               	btfss	___lwdiv@divisor+1,7
  1283     04BB  2CBD               	goto	u391
  1284     04BC  2CBE               	goto	u390
  1285     04BD                     u391:
  1286     04BD  2CAF               	goto	l854
  1287     04BE                     u390:
  1288     04BE                     l860:
  1289     04BE  3001               	movlw	1
  1290     04BF                     u405:
  1291     04BF  1003               	clrc
  1292     04C0  0DFA               	rlf	___lwdiv@quotient,f
  1293     04C1  0DFB               	rlf	___lwdiv@quotient+1,f
  1294     04C2  3EFF               	addlw	-1
  1295     04C3  1D03               	skipz
  1296     04C4  2CBF               	goto	u405
  1297     04C5  0877               	movf	___lwdiv@divisor+1,w
  1298     04C6  0279               	subwf	___lwdiv@dividend+1,w
  1299     04C7  1D03               	skipz
  1300     04C8  2CCB               	goto	u415
  1301     04C9  0876               	movf	___lwdiv@divisor,w
  1302     04CA  0278               	subwf	___lwdiv@dividend,w
  1303     04CB                     u415:
  1304     04CB  1C03               	skipc
  1305     04CC  2CCE               	goto	u411
  1306     04CD  2CCF               	goto	u410
  1307     04CE                     u411:
  1308     04CE  2CD6               	goto	l866
  1309     04CF                     u410:
  1310     04CF                     l862:
  1311     04CF  0876               	movf	___lwdiv@divisor,w
  1312     04D0  02F8               	subwf	___lwdiv@dividend,f
  1313     04D1  0877               	movf	___lwdiv@divisor+1,w
  1314     04D2  1C03               	skipc
  1315     04D3  03F9               	decf	___lwdiv@dividend+1,f
  1316     04D4  02F9               	subwf	___lwdiv@dividend+1,f
  1317     04D5                     l864:
  1318     04D5  147A               	bsf	___lwdiv@quotient,0
  1319     04D6                     l866:
  1320     04D6  3001               	movlw	1
  1321     04D7                     u425:
  1322     04D7  1003               	clrc
  1323     04D8  0CF7               	rrf	___lwdiv@divisor+1,f
  1324     04D9  0CF6               	rrf	___lwdiv@divisor,f
  1325     04DA  3EFF               	addlw	-1
  1326     04DB  1D03               	skipz
  1327     04DC  2CD7               	goto	u425
  1328     04DD                     l868:
  1329     04DD  3001               	movlw	1
  1330     04DE  02FC               	subwf	___lwdiv@counter,f
  1331     04DF  1D03               	btfss	3,2
  1332     04E0  2CE2               	goto	u431
  1333     04E1  2CE3               	goto	u430
  1334     04E2                     u431:
  1335     04E2  2CBE               	goto	l860
  1336     04E3                     u430:
  1337     04E3                     l870:
  1338     04E3  087B               	movf	___lwdiv@quotient+1,w
  1339     04E4  00F7               	movwf	?___lwdiv+1
  1340     04E5  087A               	movf	___lwdiv@quotient,w
  1341     04E6  00F6               	movwf	?___lwdiv
  1342     04E7                     l476:
  1343     04E7  0008               	return
  1344     04E8                     __end_of___lwdiv:
  1345                           
  1346                           	psect	text4
  1347     042F                     __ptext4:	
  1348 ;; *************** function _UART_send *****************
  1349 ;; Defined at:
  1350 ;;		line 130 in file "adc_task.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;  data            1    wreg     unsigned char 
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;  data            1    2[COMMON] unsigned char 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		wreg
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1364 ;;      Params:         0       0       0       0       0
  1365 ;;      Locals:         1       0       0       0       0
  1366 ;;      Temps:          2       0       0       0       0
  1367 ;;      Totals:         3       0       0       0       0
  1368 ;;Total ram usage:        3 bytes
  1369 ;; Hardware stack levels used: 1
  1370 ;; This function calls:
  1371 ;;		Nothing
  1372 ;; This function is called by:
  1373 ;;		_main
  1374 ;;		_output
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378     042F                     _UART_send:	
  1379                           ;psect for function _UART_send
  1380                           
  1381                           
  1382                           ;incstack = 0
  1383                           ; Regs used in _UART_send: [wreg]
  1384                           ;UART_send@data stored from wreg
  1385     042F  00F2               	movwf	UART_send@data
  1386     0430                     l832:
  1387                           
  1388                           ;adc_task.c: 131:     TXREG = data;
  1389     0430  0872               	movf	UART_send@data,w
  1390     0431  1283               	bcf	3,5	;RP0=0, select bank0
  1391     0432  1303               	bcf	3,6	;RP1=0, select bank0
  1392     0433  0099               	movwf	25	;volatile
  1393                           
  1394                           ;adc_task.c: 132:     _delay((unsigned long)((3)*(20000000/4000.0)));
  1395     0434  3014               	movlw	20
  1396     0435  00F1               	movwf	??_UART_send+1
  1397     0436  3079               	movlw	121
  1398     0437  00F0               	movwf	??_UART_send
  1399     0438                     u657:
  1400     0438  0BF0               	decfsz	??_UART_send,f
  1401     0439  2C38               	goto	u657
  1402     043A  0BF1               	decfsz	??_UART_send+1,f
  1403     043B  2C38               	goto	u657
  1404     043C  2C3D               	nop2
  1405     043D                     l107:
  1406     043D  0008               	return
  1407     043E                     __end_of_UART_send:
  1408                           
  1409                           	psect	text5
  1410     0420                     __ptext5:	
  1411 ;; *************** function _init *****************
  1412 ;; Defined at:
  1413 ;;		line 47 in file "adc_task.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;		None
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;		None
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, status,2
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1427 ;;      Params:         0       0       0       0       0
  1428 ;;      Locals:         0       0       0       0       0
  1429 ;;      Temps:          0       0       0       0       0
  1430 ;;      Totals:         0       0       0       0       0
  1431 ;;Total ram usage:        0 bytes
  1432 ;; Hardware stack levels used: 1
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440     0420                     _init:	
  1441                           ;psect for function _init
  1442                           
  1443     0420                     l874:	
  1444                           ;incstack = 0
  1445                           ; Regs used in _init: [wreg+status,2]
  1446                           
  1447                           
  1448                           ;adc_task.c: 48:     TRISA = 0x04;
  1449     0420  3004               	movlw	4
  1450     0421  1683               	bsf	3,5	;RP0=1, select bank1
  1451     0422  1303               	bcf	3,6	;RP1=0, select bank1
  1452     0423  0085               	movwf	5	;volatile
  1453     0424                     l876:
  1454                           
  1455                           ;adc_task.c: 49:     TRISC = 0x00;
  1456     0424  0187               	clrf	7	;volatile
  1457     0425                     l878:
  1458                           
  1459                           ;adc_task.c: 50:     TRISD = 0x00;
  1460     0425  0188               	clrf	8	;volatile
  1461                           
  1462                           ;adc_task.c: 51:     ADCON0 = 0x91;
  1463     0426  3091               	movlw	145
  1464     0427  1283               	bcf	3,5	;RP0=0, select bank0
  1465     0428  1303               	bcf	3,6	;RP1=0, select bank0
  1466     0429  009F               	movwf	31	;volatile
  1467                           
  1468                           ;adc_task.c: 52:     ADCON1 = 0x02;
  1469     042A  3002               	movlw	2
  1470     042B  1683               	bsf	3,5	;RP0=1, select bank1
  1471     042C  1303               	bcf	3,6	;RP1=0, select bank1
  1472     042D  009F               	movwf	31	;volatile
  1473     042E                     l84:
  1474     042E  0008               	return
  1475     042F                     __end_of_init:
  1476                           
  1477                           	psect	text6
  1478     0413                     __ptext6:	
  1479 ;; *************** function _delay *****************
  1480 ;; Defined at:
  1481 ;;		line 118 in file "adc_task.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  k               2    0[COMMON] unsigned int 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1495 ;;      Params:         2       0       0       0       0
  1496 ;;      Locals:         0       0       0       0       0
  1497 ;;      Temps:          0       0       0       0       0
  1498 ;;      Totals:         2       0       0       0       0
  1499 ;;Total ram usage:        2 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; This function calls:
  1502 ;;		Nothing
  1503 ;; This function is called by:
  1504 ;;		_main
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508     0413                     _delay:	
  1509                           ;psect for function _delay
  1510                           
  1511     0413                     l918:	
  1512                           ;incstack = 0
  1513                           ; Regs used in _delay: [wreg+status,2+status,0]
  1514                           
  1515     0413                     l920:	
  1516                           ;adc_task.c: 119:     while(--k);
  1517                           
  1518     0413  3001               	movlw	1
  1519     0414  02F0               	subwf	delay@k,f
  1520     0415  3000               	movlw	0
  1521     0416  1C03               	skipc
  1522     0417  03F1               	decf	delay@k+1,f
  1523     0418  02F1               	subwf	delay@k+1,f
  1524     0419  0870               	movf	delay@k,w
  1525     041A  0471               	iorwf	delay@k+1,w
  1526     041B  1D03               	btfss	3,2
  1527     041C  2C1E               	goto	u481
  1528     041D  2C1F               	goto	u480
  1529     041E                     u481:
  1530     041E  2C13               	goto	l920
  1531     041F                     u480:
  1532     041F                     l101:
  1533     041F  0008               	return
  1534     0420                     __end_of_delay:
  1535                           
  1536                           	psect	text7
  1537     04E8                     __ptext7:	
  1538 ;; *************** function ___lmul *****************
  1539 ;; Defined at:
  1540 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  multiplier      4    0[COMMON] unsigned long 
  1543 ;;  multiplicand    4    4[COMMON] unsigned long 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  product         4    9[COMMON] unsigned long 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  4    0[COMMON] unsigned long 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2, status,0
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1555 ;;      Params:         8       0       0       0       0
  1556 ;;      Locals:         4       0       0       0       0
  1557 ;;      Temps:          1       0       0       0       0
  1558 ;;      Totals:        13       0       0       0       0
  1559 ;;Total ram usage:       13 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_main
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568     04E8                     ___lmul:	
  1569                           ;psect for function ___lmul
  1570                           
  1571     04E8                     l922:	
  1572                           ;incstack = 0
  1573                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1574                           
  1575     04E8  3000               	movlw	0
  1576     04E9  00FC               	movwf	___lmul@product+3
  1577     04EA  3000               	movlw	0
  1578     04EB  00FB               	movwf	___lmul@product+2
  1579     04EC  3000               	movlw	0
  1580     04ED  00FA               	movwf	___lmul@product+1
  1581     04EE  3000               	movlw	0
  1582     04EF  00F9               	movwf	___lmul@product
  1583     04F0                     l924:
  1584     04F0  1C70               	btfss	___lmul@multiplier,0
  1585     04F1  2CF3               	goto	u491
  1586     04F2  2CF4               	goto	u490
  1587     04F3                     u491:
  1588     04F3  2D0B               	goto	l928
  1589     04F4                     u490:
  1590     04F4                     l926:
  1591     04F4  0874               	movf	___lmul@multiplicand,w
  1592     04F5  07F9               	addwf	___lmul@product,f
  1593     04F6  0875               	movf	___lmul@multiplicand+1,w
  1594     04F7  1103               	clrz
  1595     04F8  1803               	skipnc
  1596     04F9  3E01               	addlw	1
  1597     04FA  1903               	skipnz
  1598     04FB  2CFD               	goto	u501
  1599     04FC  07FA               	addwf	___lmul@product+1,f
  1600     04FD                     u501:
  1601     04FD  0876               	movf	___lmul@multiplicand+2,w
  1602     04FE  1103               	clrz
  1603     04FF  1803               	skipnc
  1604     0500  3E01               	addlw	1
  1605     0501  1903               	skipnz
  1606     0502  2D04               	goto	u502
  1607     0503  07FB               	addwf	___lmul@product+2,f
  1608     0504                     u502:
  1609     0504  0877               	movf	___lmul@multiplicand+3,w
  1610     0505  1103               	clrz
  1611     0506  1803               	skipnc
  1612     0507  3E01               	addlw	1
  1613     0508  1903               	skipnz
  1614     0509  2D0B               	goto	u503
  1615     050A  07FC               	addwf	___lmul@product+3,f
  1616     050B                     u503:
  1617     050B                     l928:
  1618     050B  3001               	movlw	1
  1619     050C  00F8               	movwf	??___lmul
  1620     050D                     u515:
  1621     050D  1003               	clrc
  1622     050E  0DF4               	rlf	___lmul@multiplicand,f
  1623     050F  0DF5               	rlf	___lmul@multiplicand+1,f
  1624     0510  0DF6               	rlf	___lmul@multiplicand+2,f
  1625     0511  0DF7               	rlf	___lmul@multiplicand+3,f
  1626     0512  0BF8               	decfsz	??___lmul,f
  1627     0513  2D0D               	goto	u515
  1628     0514                     l930:
  1629     0514  3001               	movlw	1
  1630     0515                     u525:
  1631     0515  1003               	clrc
  1632     0516  0CF3               	rrf	___lmul@multiplier+3,f
  1633     0517  0CF2               	rrf	___lmul@multiplier+2,f
  1634     0518  0CF1               	rrf	___lmul@multiplier+1,f
  1635     0519  0CF0               	rrf	___lmul@multiplier,f
  1636     051A  3EFF               	addlw	-1
  1637     051B  1D03               	skipz
  1638     051C  2D15               	goto	u525
  1639     051D  0873               	movf	___lmul@multiplier+3,w
  1640     051E  0472               	iorwf	___lmul@multiplier+2,w
  1641     051F  0471               	iorwf	___lmul@multiplier+1,w
  1642     0520  0470               	iorwf	___lmul@multiplier,w
  1643     0521  1D03               	skipz
  1644     0522  2D24               	goto	u531
  1645     0523  2D25               	goto	u530
  1646     0524                     u531:
  1647     0524  2CF0               	goto	l924
  1648     0525                     u530:
  1649     0525                     l932:
  1650     0525  087C               	movf	___lmul@product+3,w
  1651     0526  00F3               	movwf	?___lmul+3
  1652     0527  087B               	movf	___lmul@product+2,w
  1653     0528  00F2               	movwf	?___lmul+2
  1654     0529  087A               	movf	___lmul@product+1,w
  1655     052A  00F1               	movwf	?___lmul+1
  1656     052B  0879               	movf	___lmul@product,w
  1657     052C  00F0               	movwf	?___lmul
  1658     052D                     l210:
  1659     052D  0008               	return
  1660     052E                     __end_of___lmul:
  1661                           
  1662                           	psect	text8
  1663     052E                     __ptext8:	
  1664 ;; *************** function ___lldiv *****************
  1665 ;; Defined at:
  1666 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  divisor         4    0[BANK0 ] unsigned long 
  1669 ;;  dividend        4    4[BANK0 ] unsigned long 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  quotient        4    8[BANK0 ] unsigned long 
  1672 ;;  counter         1   12[BANK0 ] unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  4    0[BANK0 ] unsigned long 
  1675 ;; Registers used:
  1676 ;;		wreg, status,2, status,0, btemp+1
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1682 ;;      Params:         0       8       0       0       0
  1683 ;;      Locals:         0       5       0       0       0
  1684 ;;      Temps:          1       0       0       0       0
  1685 ;;      Totals:         1      13       0       0       0
  1686 ;;Total ram usage:       14 bytes
  1687 ;; Hardware stack levels used: 1
  1688 ;; This function calls:
  1689 ;;		Nothing
  1690 ;; This function is called by:
  1691 ;;		_main
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695     052E                     ___lldiv:	
  1696                           ;psect for function ___lldiv
  1697                           
  1698     052E                     l936:	
  1699                           ;incstack = 0
  1700                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1701                           
  1702     052E  3000               	movlw	0
  1703     052F  1283               	bcf	3,5	;RP0=0, select bank0
  1704     0530  1303               	bcf	3,6	;RP1=0, select bank0
  1705     0531  00D6               	movwf	___lldiv@quotient+3
  1706     0532  3000               	movlw	0
  1707     0533  00D5               	movwf	___lldiv@quotient+2
  1708     0534  3000               	movlw	0
  1709     0535  00D4               	movwf	___lldiv@quotient+1
  1710     0536  3000               	movlw	0
  1711     0537  00D3               	movwf	___lldiv@quotient
  1712     0538  084E               	movf	___lldiv@divisor+3,w
  1713     0539  044D               	iorwf	___lldiv@divisor+2,w
  1714     053A  044C               	iorwf	___lldiv@divisor+1,w
  1715     053B  044B               	iorwf	___lldiv@divisor,w
  1716     053C  1903               	skipnz
  1717     053D  2D3F               	goto	u541
  1718     053E  2D40               	goto	u540
  1719     053F                     u541:
  1720     053F  2D8D               	goto	l958
  1721     0540                     u540:
  1722     0540                     l938:
  1723     0540  01D7               	clrf	___lldiv@counter
  1724     0541  0AD7               	incf	___lldiv@counter,f
  1725     0542  2D50               	goto	l944
  1726     0543                     l940:
  1727     0543  3001               	movlw	1
  1728     0544  00FD               	movwf	??___lldiv
  1729     0545                     u555:
  1730     0545  1003               	clrc
  1731     0546  0DCB               	rlf	___lldiv@divisor,f
  1732     0547  0DCC               	rlf	___lldiv@divisor+1,f
  1733     0548  0DCD               	rlf	___lldiv@divisor+2,f
  1734     0549  0DCE               	rlf	___lldiv@divisor+3,f
  1735     054A  0BFD               	decfsz	??___lldiv,f
  1736     054B  2D45               	goto	u555
  1737     054C                     l942:
  1738     054C  3001               	movlw	1
  1739     054D  00FF               	movwf	btemp+1
  1740     054E  087F               	movf	btemp+1,w
  1741     054F  07D7               	addwf	___lldiv@counter,f
  1742     0550                     l944:
  1743     0550  1FCE               	btfss	___lldiv@divisor+3,7
  1744     0551  2D53               	goto	u561
  1745     0552  2D54               	goto	u560
  1746     0553                     u561:
  1747     0553  2D43               	goto	l940
  1748     0554                     u560:
  1749     0554                     l946:
  1750     0554  3001               	movlw	1
  1751     0555  00FD               	movwf	??___lldiv
  1752     0556                     u575:
  1753     0556  1003               	clrc
  1754     0557  0DD3               	rlf	___lldiv@quotient,f
  1755     0558  0DD4               	rlf	___lldiv@quotient+1,f
  1756     0559  0DD5               	rlf	___lldiv@quotient+2,f
  1757     055A  0DD6               	rlf	___lldiv@quotient+3,f
  1758     055B  0BFD               	decfsz	??___lldiv,f
  1759     055C  2D56               	goto	u575
  1760     055D                     l948:
  1761     055D  084E               	movf	___lldiv@divisor+3,w
  1762     055E  0252               	subwf	___lldiv@dividend+3,w
  1763     055F  1D03               	skipz
  1764     0560  2D6B               	goto	u585
  1765     0561  084D               	movf	___lldiv@divisor+2,w
  1766     0562  0251               	subwf	___lldiv@dividend+2,w
  1767     0563  1D03               	skipz
  1768     0564  2D6B               	goto	u585
  1769     0565  084C               	movf	___lldiv@divisor+1,w
  1770     0566  0250               	subwf	___lldiv@dividend+1,w
  1771     0567  1D03               	skipz
  1772     0568  2D6B               	goto	u585
  1773     0569  084B               	movf	___lldiv@divisor,w
  1774     056A  024F               	subwf	___lldiv@dividend,w
  1775     056B                     u585:
  1776     056B  1C03               	skipc
  1777     056C  2D6E               	goto	u581
  1778     056D  2D6F               	goto	u580
  1779     056E                     u581:
  1780     056E  2D7E               	goto	l954
  1781     056F                     u580:
  1782     056F                     l950:
  1783     056F  084B               	movf	___lldiv@divisor,w
  1784     0570  02CF               	subwf	___lldiv@dividend,f
  1785     0571  084C               	movf	___lldiv@divisor+1,w
  1786     0572  1C03               	skipc
  1787     0573  0F4C               	incfsz	___lldiv@divisor+1,w
  1788     0574  02D0               	subwf	___lldiv@dividend+1,f
  1789     0575  084D               	movf	___lldiv@divisor+2,w
  1790     0576  1C03               	skipc
  1791     0577  0F4D               	incfsz	___lldiv@divisor+2,w
  1792     0578  02D1               	subwf	___lldiv@dividend+2,f
  1793     0579  084E               	movf	___lldiv@divisor+3,w
  1794     057A  1C03               	skipc
  1795     057B  0F4E               	incfsz	___lldiv@divisor+3,w
  1796     057C  02D2               	subwf	___lldiv@dividend+3,f
  1797     057D                     l952:
  1798     057D  1453               	bsf	___lldiv@quotient,0
  1799     057E                     l954:
  1800     057E  3001               	movlw	1
  1801     057F                     u595:
  1802     057F  1003               	clrc
  1803     0580  0CCE               	rrf	___lldiv@divisor+3,f
  1804     0581  0CCD               	rrf	___lldiv@divisor+2,f
  1805     0582  0CCC               	rrf	___lldiv@divisor+1,f
  1806     0583  0CCB               	rrf	___lldiv@divisor,f
  1807     0584  3EFF               	addlw	-1
  1808     0585  1D03               	skipz
  1809     0586  2D7F               	goto	u595
  1810     0587                     l956:
  1811     0587  3001               	movlw	1
  1812     0588  02D7               	subwf	___lldiv@counter,f
  1813     0589  1D03               	btfss	3,2
  1814     058A  2D8C               	goto	u601
  1815     058B  2D8D               	goto	u600
  1816     058C                     u601:
  1817     058C  2D54               	goto	l946
  1818     058D                     u600:
  1819     058D                     l958:
  1820     058D  0856               	movf	___lldiv@quotient+3,w
  1821     058E  00CE               	movwf	?___lldiv+3
  1822     058F  0855               	movf	___lldiv@quotient+2,w
  1823     0590  00CD               	movwf	?___lldiv+2
  1824     0591  0854               	movf	___lldiv@quotient+1,w
  1825     0592  00CC               	movwf	?___lldiv+1
  1826     0593  0853               	movf	___lldiv@quotient,w
  1827     0594  00CB               	movwf	?___lldiv
  1828     0595                     l232:
  1829     0595  0008               	return
  1830     0596                     __end_of___lldiv:
  1831                           
  1832                           	psect	text9
  1833     0404                     __ptext9:	
  1834 ;; *************** function _UART_newline *****************
  1835 ;; Defined at:
  1836 ;;		line 134 in file "adc_task.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		wreg
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1850 ;;      Params:         0       0       0       0       0
  1851 ;;      Locals:         0       0       0       0       0
  1852 ;;      Temps:          0       0       0       0       0
  1853 ;;      Totals:         0       0       0       0       0
  1854 ;;Total ram usage:        0 bytes
  1855 ;; Hardware stack levels used: 1
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_main
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863     0404                     _UART_newline:	
  1864                           ;psect for function _UART_newline
  1865                           
  1866     0404                     l916:	
  1867                           ;incstack = 0
  1868                           ; Regs used in _UART_newline: [wreg]
  1869                           
  1870                           
  1871                           ;adc_task.c: 135:     TXREG = 0x0A;
  1872     0404  300A               	movlw	10
  1873     0405  1283               	bcf	3,5	;RP0=0, select bank0
  1874     0406  1303               	bcf	3,6	;RP1=0, select bank0
  1875     0407  0099               	movwf	25	;volatile
  1876                           
  1877                           ;adc_task.c: 136:     TXREG = 0x0D;
  1878     0408  300D               	movlw	13
  1879     0409  0099               	movwf	25	;volatile
  1880     040A                     l110:
  1881     040A  0008               	return
  1882     040B                     __end_of_UART_newline:
  1883                           
  1884                           	psect	text10
  1885     0465                     __ptext10:	
  1886 ;; *************** function _UART_init *****************
  1887 ;; Defined at:
  1888 ;;		line 121 in file "adc_task.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		wreg, status,2, status,0, btemp+1
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1902 ;;      Params:         0       0       0       0       0
  1903 ;;      Locals:         0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0
  1905 ;;      Totals:         0       0       0       0       0
  1906 ;;Total ram usage:        0 bytes
  1907 ;; Hardware stack levels used: 1
  1908 ;; This function calls:
  1909 ;;		Nothing
  1910 ;; This function is called by:
  1911 ;;		_main
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915     0465                     _UART_init:	
  1916                           ;psect for function _UART_init
  1917                           
  1918     0465                     l880:	
  1919                           ;incstack = 0
  1920                           ; Regs used in _UART_init: [wreg+status,2+status,0+btemp+1]
  1921                           
  1922                           
  1923                           ;adc_task.c: 122:     TRISB = 0xF0;
  1924     0465  30F0               	movlw	240
  1925     0466  1683               	bsf	3,5	;RP0=1, select bank1
  1926     0467  1303               	bcf	3,6	;RP1=0, select bank1
  1927     0468  0086               	movwf	6	;volatile
  1928     0469                     l882:
  1929                           
  1930                           ;adc_task.c: 123:     PORTB = 0x00;
  1931     0469  1283               	bcf	3,5	;RP0=0, select bank0
  1932     046A  1303               	bcf	3,6	;RP1=0, select bank0
  1933     046B  0186               	clrf	6	;volatile
  1934     046C                     l884:
  1935                           
  1936                           ;adc_task.c: 124:     OPTION_REG &= 0x7F;
  1937     046C  307F               	movlw	127
  1938     046D  00FF               	movwf	btemp+1
  1939     046E  087F               	movf	btemp+1,w
  1940     046F  1683               	bsf	3,5	;RP0=1, select bank1
  1941     0470  1303               	bcf	3,6	;RP1=0, select bank1
  1942     0471  0581               	andwf	1,f	;volatile
  1943     0472                     l886:
  1944                           
  1945                           ;adc_task.c: 125:     TRISC = 0xC0;
  1946     0472  30C0               	movlw	192
  1947     0473  0087               	movwf	7	;volatile
  1948     0474                     l888:
  1949                           
  1950                           ;adc_task.c: 126:     TXSTA = 0x20;
  1951     0474  3020               	movlw	32
  1952     0475  0098               	movwf	24	;volatile
  1953     0476                     l890:
  1954                           
  1955                           ;adc_task.c: 127:     RCSTA = 0x90;
  1956     0476  3090               	movlw	144
  1957     0477  1283               	bcf	3,5	;RP0=0, select bank0
  1958     0478  1303               	bcf	3,6	;RP1=0, select bank0
  1959     0479  0098               	movwf	24	;volatile
  1960     047A                     l892:
  1961                           
  1962                           ;adc_task.c: 128:     SPBRG = 0x20;
  1963     047A  3020               	movlw	32
  1964     047B  1683               	bsf	3,5	;RP0=1, select bank1
  1965     047C  1303               	bcf	3,6	;RP1=0, select bank1
  1966     047D  0099               	movwf	25	;volatile
  1967     047E                     l104:
  1968     047E  0008               	return
  1969     047F                     __end_of_UART_init:
  1970     007E                     btemp	set	126	;btemp
  1971     007E                     wtemp0	set	126
  1972                           
  1973                           	psect	config
  1974                           
  1975                           ;Config register CONFIG @ 0x2007
  1976                           ;	Oscillator Selection bits
  1977                           ;	FOSC = HS, HS oscillator
  1978                           ;	Watchdog Timer Enable bit
  1979                           ;	WDTE = OFF, WDT disabled
  1980                           ;	Power-up Timer Enable bit
  1981                           ;	PWRTE = OFF, PWRT disabled
  1982                           ;	Brown-out Reset Enable bit
  1983                           ;	BOREN = OFF, BOR disabled
  1984                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1985                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1986                           ;	Data EEPROM Memory Code Protection bit
  1987                           ;	CPD = OFF, Data EEPROM code protection off
  1988                           ;	Flash Program Memory Write Enable bits
  1989                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1990                           ;	In-Circuit Debugger Mode bit
  1991                           ;	DEBUG = 0x1, unprogrammed default
  1992                           ;	Flash Program Memory Code Protection bit
  1993                           ;	CP = OFF, Code protection off
  1994     2007                     	org	8199
  1995     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     17      60
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lldiv
    _output->___lwdiv
    ___lwdiv->___wmul
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    _main->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2562
                                             13 BANK0      4     4      0
                          _UART_init
                       _UART_newline
                          _UART_send
                            ___lldiv
                             ___lmul
                              _delay
                               _init
                             _output
 ---------------------------------------------------------------------------------
 (1) _output                                               8     6      2    1884
                                              0 BANK0      8     6      2
                          _UART_send
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1004
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              6 COMMON     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART_send                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay                                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     314
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_newline                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
   _UART_newline
   _UART_send
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _delay
   _init
   _output
     _UART_send
     ___lwdiv
       ___wmul (ARG)
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     11      3C       5       75.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4A      12        0.0%
ABS                  0      0      4A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue May 28 08:20:55 2024

                      _m 0034                        _x 0036                        pc 0002  
                     l72 05A3                       l84 042E                       l95 07E5  
                     _d0 0032                       _d1 0030                       _d2 002E  
                     _d3 002C                       fsr 0004      ___wmul@multiplicand 0072  
                    l101 041F                      l110 040A                      l104 047E  
                    l210 052D                      l107 043D                      l232 0595  
                    l196 048B                      l198 04A3                      l476 04E7  
                    l900 0738                      l910 07A8                      l902 075B  
                    l920 0413                      l832 0430                      l840 0492  
                    l912 07AE                      l904 0761                      l930 0514  
                    l922 04E8                      l850 04A6                      l842 0499  
                    l834 047F                      l914 07CA                      l906 0783  
                    l916 0404                      l940 0543                      l932 0525  
                    l924 04F0                      l860 04BE                      l852 04AC  
                    l844 049F                      l836 0481                      l908 0789  
                    l950 056F                      l942 054C                      l926 04F4  
                    l918 0413                      l862 04CF                      l854 04AF  
                    l870 04E3                      l838 0485                      l880 0465  
                    l952 057D                      l944 0550                      l936 052E  
                    l928 050B                      l864 04D5                      l856 04B6  
                    l848 04A4                      l890 0476                      l882 0469  
                    l954 057E                      l946 0554                      l938 0540  
                    l874 0420                      l866 04D6                      l858 04BA  
                    l970 05B9                      l962 0596                      l892 047A  
                    l884 046C                      l956 0587                      l948 055D  
                    l876 0424                      l868 04DD                      l980 060F  
                    l972 05D8                      l964 059B                      l886 0472  
                    l958 058D                      l878 0425                      l894 066D  
                    l990 0633                      l982 0619                      l974 060E  
                    l966 05A0                      l888 0474                      l896 06E9  
                    l984 061F                      l968 05A7                      l898 0732  
                    l986 0625                      l996 0636                      l988 062E  
                    l998 0640                      u410 04CF                      u330 0485  
                    u411 04CE                      u331 0484                      u501 04FD  
                    u405 04BF                      u502 0504                      u430 04E3  
                    u503 050B                      u431 04E2                      u415 04CB  
                    u600 058D                      u360 049F                      u440 0738  
                    u601 058C                      u425 04D7                      u361 049E  
                    u345 048C                      u441 0737                      u530 0525  
                    u370 04AC                      u450 0761                      u610 05A7  
                    u531 0524                      u515 050D                      u371 04AB  
                    u355 0493                      u451 0760                      u611 05A6  
                    u540 0540                      u460 0789                      u541 053F  
                    u525 0515                      u461 0788                      u390 04BE  
                    u470 07AE                      u630 0625                      u391 04BD  
                    u471 07AD                      u631 0624                      u560 0554  
                    u480 041F                      u640 064C                      u561 0553  
                    u481 041E                      u385 04B0                      u641 064B  
                    u625 05BE                      u490 04F4                      u555 0545  
                    u491 04F3                      u580 056F                      u581 056E  
                    u575 0556                      u585 056B                      u657 0438  
                    u595 057F                      _cal 0037                      _raw 0041  
                    fsr0 0004                      indf 0000                     l1000 0646  
                   l1002 064C                     l1004 0655                     l1006 065B  
                   l1008 0660                     _main 0596                     _init 0420  
                   btemp 007E                     start 0000                    ?_main 0070  
                  ?_init 0070          __end_of___lldiv 0596          __end_of___lwdiv 04E8  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TXREG 0019                    _TXSTA 0098  
    ___lmul@multiplicand 0074                    _delay 0413                    _hival 002A  
                  _loval 0028                    _value 0020                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07E6  
           __end_of_main 066D             __end_of_init 042F                   ??_main 0058  
                 ??_init 0070                   ?_delay 0070                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 ___lmul 04E8                   ___wmul 047F        __end_of_UART_init 047F  
      __end_of_UART_send 043E                ??___lldiv 007D                ??___lwdiv 007A  
                 delay@k 0070                   _output 066D  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 0451            __end_of_delay 0420  
                ??_delay 0072               __pbssBANK0 0020               __pmaintext 0596  
                ?___lmul 0070                  ?___wmul 0070           ___lmul@product 0079  
                ?_output 004B                  ___lldiv 052E                  ___lwdiv 04A4  
                __ptext1 066D                  __ptext2 047F                  __ptext3 04A4  
                __ptext4 042F                  __ptext5 0420                  __ptext6 0413  
                __ptext7 04E8                  __ptext8 052E                  __ptext9 0404  
          ?_UART_newline 0070                  clrloop0 040C                  _voltage 0024  
   end_of_initialization 07FC          ___lldiv@divisor 004B          ___lldiv@counter 0057  
                output@n 004B           ??_UART_newline 0070                _UART_init 0465  
              _UART_send 042F           __end_of___lmul 052E           __end_of___wmul 04A4  
             ?_UART_init 0070               ?_UART_send 0070           __end_of_output 07E6  
    start_initialization 07E6                 ??___lmul 0078                 ??___wmul 0074  
             init_fetch0 043E              __pdataBANK0 0037                 ??_output 004D  
              ___latbits 0002            __pcstackBANK0 004B     __end_of_UART_newline 040B  
       ___lwdiv@dividend 0078                 ?___lldiv 004B                 ?___lwdiv 0076  
            ??_UART_init 0070              ??_UART_send 0070         ___lwdiv@quotient 007A  
         ___wmul@product 0074                clear_ram0 040B        ___wmul@multiplier 0070  
      ___lmul@multiplier 0070            UART_send@data 0072          ___lwdiv@divisor 0076  
        ___lwdiv@counter 007C                 __ptext10 0465             _UART_newline 0404  
               init_ram0 0442         ___lldiv@dividend 004F               _OPTION_REG 0081  
       ___lldiv@quotient 0053  
