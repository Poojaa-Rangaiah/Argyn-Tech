

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue May 28 13:45:03 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26     0000                     
    27                           ; Generated 22/03/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F877A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61     0000                     	;# 
    62     0001                     	;# 
    63     0002                     	;# 
    64     0003                     	;# 
    65     0004                     	;# 
    66     0005                     	;# 
    67     0006                     	;# 
    68     0007                     	;# 
    69     0008                     	;# 
    70     0009                     	;# 
    71     000A                     	;# 
    72     000B                     	;# 
    73     000C                     	;# 
    74     000D                     	;# 
    75     000E                     	;# 
    76     000E                     	;# 
    77     000F                     	;# 
    78     0010                     	;# 
    79     0011                     	;# 
    80     0012                     	;# 
    81     0013                     	;# 
    82     0014                     	;# 
    83     0015                     	;# 
    84     0015                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001B                     	;# 
    92     001C                     	;# 
    93     001D                     	;# 
    94     001E                     	;# 
    95     001F                     	;# 
    96     0081                     	;# 
    97     0085                     	;# 
    98     0086                     	;# 
    99     0087                     	;# 
   100     0088                     	;# 
   101     0089                     	;# 
   102     008C                     	;# 
   103     008D                     	;# 
   104     008E                     	;# 
   105     0091                     	;# 
   106     0092                     	;# 
   107     0093                     	;# 
   108     0094                     	;# 
   109     0098                     	;# 
   110     0099                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     010C                     	;# 
   116     010D                     	;# 
   117     010E                     	;# 
   118     010F                     	;# 
   119     018C                     	;# 
   120     018D                     	;# 
   121     0000                     	;# 
   122     0001                     	;# 
   123     0002                     	;# 
   124     0003                     	;# 
   125     0004                     	;# 
   126     0005                     	;# 
   127     0006                     	;# 
   128     0007                     	;# 
   129     0008                     	;# 
   130     0009                     	;# 
   131     000A                     	;# 
   132     000B                     	;# 
   133     000C                     	;# 
   134     000D                     	;# 
   135     000E                     	;# 
   136     000E                     	;# 
   137     000F                     	;# 
   138     0010                     	;# 
   139     0011                     	;# 
   140     0012                     	;# 
   141     0013                     	;# 
   142     0014                     	;# 
   143     0015                     	;# 
   144     0015                     	;# 
   145     0016                     	;# 
   146     0017                     	;# 
   147     0018                     	;# 
   148     0019                     	;# 
   149     001A                     	;# 
   150     001B                     	;# 
   151     001B                     	;# 
   152     001C                     	;# 
   153     001D                     	;# 
   154     001E                     	;# 
   155     001F                     	;# 
   156     0081                     	;# 
   157     0085                     	;# 
   158     0086                     	;# 
   159     0087                     	;# 
   160     0088                     	;# 
   161     0089                     	;# 
   162     008C                     	;# 
   163     008D                     	;# 
   164     008E                     	;# 
   165     0091                     	;# 
   166     0092                     	;# 
   167     0093                     	;# 
   168     0094                     	;# 
   169     0098                     	;# 
   170     0099                     	;# 
   171     009C                     	;# 
   172     009D                     	;# 
   173     009E                     	;# 
   174     009F                     	;# 
   175     010C                     	;# 
   176     010D                     	;# 
   177     010E                     	;# 
   178     010F                     	;# 
   179     018C                     	;# 
   180     018D                     	;# 
   181                           
   182                           	psect	idataBANK0
   183     02EC                     __pidataBANK0:
   184                           
   185                           ;initializer for _ch1
   186     02EC  3443               	retlw	67
   187     02ED  3448               	retlw	72
   188     02EE  3431               	retlw	49
   189     02EF  3420               	retlw	32
   190     02F0  343A               	retlw	58
   191     02F1  3420               	retlw	32
   192     02F2  3400               	retlw	0
   193                           
   194                           ;initializer for _ch0
   195     02F3  3443               	retlw	67
   196     02F4  3448               	retlw	72
   197     02F5  3430               	retlw	48
   198     02F6  3420               	retlw	32
   199     02F7  343A               	retlw	58
   200     02F8  3420               	retlw	32
   201     02F9  3400               	retlw	0
   202     0019                     _TXREG	set	25
   203     0018                     _RCSTA	set	24
   204     0008                     _PORTD	set	8
   205     0007                     _PORTC	set	7
   206     0012                     _T2CON	set	18
   207     0017                     _CCP1CON	set	23
   208     0015                     _CCPR1L	set	21
   209     001E                     _ADRESH	set	30
   210     001F                     _ADCON0	set	31
   211     0099                     _SPBRG	set	153
   212     0098                     _TXSTA	set	152
   213     0092                     _PR2	set	146
   214     0085                     _TRISA	set	133
   215     0088                     _TRISD	set	136
   216     0087                     _TRISC	set	135
   217     009F                     _ADCON1	set	159
   218     009E                     _ADRESL	set	158
   219                           
   220                           	psect	cinit
   221     07E6                     start_initialization:	
   222                           ; #config settings
   223                           
   224     07E6                     __initialization:
   225                           
   226                           ; Initialize objects allocated to BANK0
   227     07E6  1383               	bcf	3,7	;select IRP bank0
   228     07E7  305C               	movlw	low (__pdataBANK0+14)
   229     07E8  00FD               	movwf	btemp+-1
   230     07E9  3002               	movlw	high __pidataBANK0
   231     07EA  00FE               	movwf	btemp
   232     07EB  30EC               	movlw	low __pidataBANK0
   233     07EC  00FF               	movwf	btemp+1
   234     07ED  304E               	movlw	low __pdataBANK0
   235     07EE  0084               	movwf	4
   236     07EF  120A  118A  230D  120A  118A  	fcall	init_ram0
   237                           
   238                           ; Clear objects allocated to BANK0
   239     07F4  3020               	movlw	low __pbssBANK0
   240     07F5  0084               	movwf	4
   241     07F6  3039               	movlw	low (__pbssBANK0+25)
   242     07F7  120A  118A  22D7  120A  118A  	fcall	clear_ram0
   243     07FC                     end_of_initialization:	
   244                           ;End of C runtime variable initialization code
   245                           
   246     07FC                     __end_of__initialization:
   247     07FC  0183               	clrf	3
   248     07FD  120A  118A  2E5D   	ljmp	_main	;jump to C main() function
   249                           
   250                           	psect	bssBANK0
   251     0020                     __pbssBANK0:
   252     0020                     _val:
   253     0020                     	ds	4
   254     0024                     _volt:
   255     0024                     	ds	4
   256     0028                     _hival:
   257     0028                     	ds	4
   258     002C                     _loval:
   259     002C                     	ds	4
   260     0030                     _d0:
   261     0030                     	ds	2
   262     0032                     _d1:
   263     0032                     	ds	2
   264     0034                     _d2:
   265     0034                     	ds	2
   266     0036                     _d3:
   267     0036                     	ds	2
   268     0038                     _n:
   269     0038                     	ds	1
   270                           
   271                           	psect	dataBANK0
   272     004E                     __pdataBANK0:
   273     004E                     _ch1:
   274     004E                     	ds	7
   275     0055                     _ch0:
   276     0055                     	ds	7
   277                           
   278                           	psect	inittext
   279     0309                     init_fetch0:	
   280                           ;	Called with low address in FSR and high address in W
   281                           
   282     0309  087E               	movf	btemp,w
   283     030A  008A               	movwf	10
   284     030B  087F               	movf	btemp+1,w
   285     030C  0082               	movwf	2
   286     030D                     init_ram0:	
   287                           ;Called with:
   288                           ;	high address of idata address in btemp 
   289                           ;	low address of idata address in btemp+1 
   290                           ;	low address of data in FSR
   291                           ;	high address + 1 of data in btemp-1
   292                           
   293     030D  120A  118A  2309  120A  118A  	fcall	init_fetch0
   294     0312  0080               	movwf	0
   295     0313  0A84               	incf	4,f
   296     0314  0804               	movf	4,w
   297     0315  067D               	xorwf	btemp+-1,w
   298     0316  1903               	btfsc	3,2
   299     0317  3400               	retlw	0
   300     0318  0AFF               	incf	btemp+1,f
   301     0319  1903               	btfsc	3,2
   302     031A  0AFE               	incf	btemp,f
   303     031B  2B0D               	goto	init_ram0
   304                           
   305                           	psect	clrtext
   306     02D7                     clear_ram0:	
   307                           ;	Called with FSR containing the base address, and
   308                           ;	W with the last address+1
   309                           
   310     02D7  0064               	clrwdt	;clear the watchdog before getting into this loop
   311     02D8                     clrloop0:
   312     02D8  0180               	clrf	0	;clear RAM location pointed to by FSR
   313     02D9  0A84               	incf	4,f	;increment pointer
   314     02DA  0604               	xorwf	4,w	;XOR with final address
   315     02DB  1903               	btfsc	3,2	;have we reached the end yet?
   316     02DC  3400               	retlw	0	;all done for this memory range, return
   317     02DD  0604               	xorwf	4,w	;XOR again to restore value
   318     02DE  2AD8               	goto	clrloop0	;do the next byte
   319                           
   320                           	psect	cstackCOMMON
   321     0070                     __pcstackCOMMON:
   322     0070                     ?_init:
   323     0070                     ?_UART_init:	
   324                           ; 1 bytes @ 0x0
   325                           
   326     0070                     ??_UART_init:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     0070                     ?_cmd:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0070                     ?_data:	
   333                           ; 1 bytes @ 0x0
   334                           
   335     0070                     ?_UART_newline:	
   336                           ; 1 bytes @ 0x0
   337                           
   338     0070                     ??_UART_newline:	
   339                           ; 1 bytes @ 0x0
   340                           
   341     0070                     ?_delay:	
   342                           ; 1 bytes @ 0x0
   343                           
   344     0070                     ?_main:	
   345                           ; 1 bytes @ 0x0
   346                           
   347     0070                     ?___wmul:	
   348                           ; 1 bytes @ 0x0
   349                           
   350     0070                     ?___lmul:	
   351                           ; 2 bytes @ 0x0
   352                           
   353     0070                     delay@x:	
   354                           ; 4 bytes @ 0x0
   355                           
   356     0070                     ___wmul@multiplier:	
   357                           ; 2 bytes @ 0x0
   358                           
   359     0070                     ___lmul@multiplier:	
   360                           ; 2 bytes @ 0x0
   361                           
   362                           
   363                           ; 4 bytes @ 0x0
   364     0070                     	ds	2
   365     0072                     ??_cmd:
   366     0072                     ??_data:	
   367                           ; 1 bytes @ 0x2
   368                           
   369     0072                     ??_delay:	
   370                           ; 1 bytes @ 0x2
   371                           
   372     0072                     cmd@i:	
   373                           ; 1 bytes @ 0x2
   374                           
   375     0072                     data@i:	
   376                           ; 1 bytes @ 0x2
   377                           
   378     0072                     ___wmul@multiplicand:	
   379                           ; 1 bytes @ 0x2
   380                           
   381                           
   382                           ; 2 bytes @ 0x2
   383     0072                     	ds	1
   384     0073                     ??_init:
   385                           
   386                           ; 1 bytes @ 0x3
   387     0073                     	ds	1
   388     0074                     ??___wmul:
   389     0074                     ___wmul@product:	
   390                           ; 1 bytes @ 0x4
   391                           
   392     0074                     ___lmul@multiplicand:	
   393                           ; 2 bytes @ 0x4
   394                           
   395                           
   396                           ; 4 bytes @ 0x4
   397     0074                     	ds	2
   398     0076                     ?___lwdiv:
   399     0076                     ___lwdiv@divisor:	
   400                           ; 2 bytes @ 0x6
   401                           
   402                           
   403                           ; 2 bytes @ 0x6
   404     0076                     	ds	2
   405     0078                     ??___lmul:
   406     0078                     ___lwdiv@dividend:	
   407                           ; 1 bytes @ 0x8
   408                           
   409                           
   410                           ; 2 bytes @ 0x8
   411     0078                     	ds	1
   412     0079                     ___lmul@product:
   413                           
   414                           ; 4 bytes @ 0x9
   415     0079                     	ds	1
   416     007A                     ??___lwdiv:
   417     007A                     ___lwdiv@quotient:	
   418                           ; 1 bytes @ 0xA
   419                           
   420                           
   421                           ; 2 bytes @ 0xA
   422     007A                     	ds	2
   423     007C                     ___lwdiv@counter:
   424                           
   425                           ; 1 bytes @ 0xC
   426     007C                     	ds	1
   427     007D                     ??___lldiv:
   428                           
   429                           ; 1 bytes @ 0xD
   430     007D                     	ds	1
   431                           
   432                           	psect	cstackBANK0
   433     0039                     __pcstackBANK0:
   434     0039                     ?_output:
   435     0039                     ?___lldiv:	
   436                           ; 1 bytes @ 0x0
   437                           
   438     0039                     output@n:	
   439                           ; 4 bytes @ 0x0
   440                           
   441     0039                     ___lldiv@divisor:	
   442                           ; 2 bytes @ 0x0
   443                           
   444                           
   445                           ; 4 bytes @ 0x0
   446     0039                     	ds	2
   447     003B                     ??_output:
   448                           
   449                           ; 1 bytes @ 0x2
   450     003B                     	ds	2
   451     003D                     ___lldiv@dividend:
   452                           
   453                           ; 4 bytes @ 0x4
   454     003D                     	ds	4
   455     0041                     ___lldiv@quotient:
   456                           
   457                           ; 4 bytes @ 0x8
   458     0041                     	ds	4
   459     0045                     ___lldiv@counter:
   460                           
   461                           ; 1 bytes @ 0xC
   462     0045                     	ds	1
   463     0046                     ??_main:
   464                           
   465                           ; 1 bytes @ 0xD
   466     0046                     	ds	8
   467                           
   468                           	psect	maintext
   469     065D                     __pmaintext:	
   470 ;;
   471 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   472 ;;
   473 ;; *************** function _main *****************
   474 ;; Defined at:
   475 ;;		line 22 in file "ADC_PWM_task.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;		None
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : B00/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   489 ;;      Params:         0       0       0       0       0
   490 ;;      Locals:         0       0       0       0       0
   491 ;;      Temps:          0       8       0       0       0
   492 ;;      Totals:         0       8       0       0       0
   493 ;;Total ram usage:        8 bytes
   494 ;; Hardware stack levels required when called: 3
   495 ;; This function calls:
   496 ;;		_UART_init
   497 ;;		_UART_newline
   498 ;;		___lldiv
   499 ;;		___lmul
   500 ;;		_cmd
   501 ;;		_data
   502 ;;		_init
   503 ;;		_output
   504 ;; This function is called by:
   505 ;;		Startup code after reset
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509     065D                     _main:	
   510                           ;psect for function _main
   511                           
   512     065D                     l1085:	
   513                           ;incstack = 0
   514                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   515                           
   516                           
   517                           ;ADC_PWM_task.c: 23:     init();
   518     065D  120A  118A  2460  120A  118A  	fcall	_init
   519     0662                     l1087:
   520                           
   521                           ;ADC_PWM_task.c: 24:     UART_init();
   522     0662  120A  118A  22FA  120A  118A  	fcall	_UART_init
   523     0667                     l1089:
   524                           
   525                           ;ADC_PWM_task.c: 26:         ADCON0 = 0x81;
   526     0667  3081               	movlw	129
   527     0668  1283               	bcf	3,5	;RP0=0, select bank0
   528     0669  1303               	bcf	3,6	;RP1=0, select bank0
   529     066A  009F               	movwf	31	;volatile
   530     066B                     l1091:
   531                           
   532                           ;ADC_PWM_task.c: 27:         ADCON0 |= 0x04;
   533     066B  151F               	bsf	31,2	;volatile
   534     066C                     l78:	
   535                           ;ADC_PWM_task.c: 28:         while(ADCON0&0x04);
   536                           
   537     066C  191F               	btfsc	31,2	;volatile
   538     066D  2E6F               	goto	u671
   539     066E  2E70               	goto	u670
   540     066F                     u671:
   541     066F  2E6C               	goto	l78
   542     0670                     u670:
   543     0670                     l1093:
   544                           
   545                           ;ADC_PWM_task.c: 29:         loval = ADRESL;
   546     0670  1683               	bsf	3,5	;RP0=1, select bank1
   547     0671  1303               	bcf	3,6	;RP1=0, select bank1
   548     0672  081E               	movf	30,w	;volatile
   549     0673  1283               	bcf	3,5	;RP0=0, select bank0
   550     0674  1303               	bcf	3,6	;RP1=0, select bank0
   551     0675  00C6               	movwf	??_main
   552     0676  01C7               	clrf	??_main+1
   553     0677  01C8               	clrf	??_main+2
   554     0678  01C9               	clrf	??_main+3
   555     0679  0849               	movf	??_main+3,w
   556     067A  00AF               	movwf	_loval+3
   557     067B  0848               	movf	??_main+2,w
   558     067C  00AE               	movwf	_loval+2
   559     067D  0847               	movf	??_main+1,w
   560     067E  00AD               	movwf	_loval+1
   561     067F  0846               	movf	??_main,w
   562     0680  00AC               	movwf	_loval
   563                           
   564                           ;ADC_PWM_task.c: 30:         hival = ADRESH;
   565     0681  081E               	movf	30,w	;volatile
   566     0682  00C6               	movwf	??_main
   567     0683  01C7               	clrf	??_main+1
   568     0684  01C8               	clrf	??_main+2
   569     0685  01C9               	clrf	??_main+3
   570     0686  0849               	movf	??_main+3,w
   571     0687  00AB               	movwf	_hival+3
   572     0688  0848               	movf	??_main+2,w
   573     0689  00AA               	movwf	_hival+2
   574     068A  0847               	movf	??_main+1,w
   575     068B  00A9               	movwf	_hival+1
   576     068C  0846               	movf	??_main,w
   577     068D  00A8               	movwf	_hival
   578     068E                     l1095:
   579                           
   580                           ;ADC_PWM_task.c: 31:         val = (hival<<8) + loval;
   581     068E  082C               	movf	_loval,w
   582     068F  00C6               	movwf	??_main
   583     0690  082D               	movf	_loval+1,w
   584     0691  00C7               	movwf	??_main+1
   585     0692  082E               	movf	_loval+2,w
   586     0693  00C8               	movwf	??_main+2
   587     0694  082F               	movf	_loval+3,w
   588     0695  00C9               	movwf	??_main+3
   589     0696  0828               	movf	_hival,w
   590     0697  00CA               	movwf	??_main+4
   591     0698  0829               	movf	_hival+1,w
   592     0699  00CB               	movwf	??_main+5
   593     069A  082A               	movf	_hival+2,w
   594     069B  00CC               	movwf	??_main+6
   595     069C  082B               	movf	_hival+3,w
   596     069D  00CD               	movwf	??_main+7
   597     069E  3008               	movlw	8
   598     069F                     u685:
   599     069F  1003               	clrc
   600     06A0  0DCA               	rlf	??_main+4,f
   601     06A1  0DCB               	rlf	??_main+5,f
   602     06A2  0DCC               	rlf	??_main+6,f
   603     06A3  0DCD               	rlf	??_main+7,f
   604     06A4                     u680:
   605     06A4  3EFF               	addlw	-1
   606     06A5  1D03               	skipz
   607     06A6  2E9F               	goto	u685
   608     06A7  084A               	movf	??_main+4,w
   609     06A8  07C6               	addwf	??_main,f
   610     06A9  084B               	movf	??_main+5,w
   611     06AA  1803               	skipnc
   612     06AB  0F4B               	incfsz	??_main+5,w
   613     06AC  2EAE               	goto	u690
   614     06AD  2EAF               	goto	u691
   615     06AE                     u690:
   616     06AE  07C7               	addwf	??_main+1,f
   617     06AF                     u691:
   618     06AF  084C               	movf	??_main+6,w
   619     06B0  1803               	skipnc
   620     06B1  0F4C               	incfsz	??_main+6,w
   621     06B2  2EB4               	goto	u692
   622     06B3  2EB5               	goto	u693
   623     06B4                     u692:
   624     06B4  07C8               	addwf	??_main+2,f
   625     06B5                     u693:
   626     06B5  084D               	movf	??_main+7,w
   627     06B6  1803               	skipnc
   628     06B7  0A4D               	incf	??_main+7,w
   629     06B8  07C9               	addwf	??_main+3,f
   630     06B9  0849               	movf	??_main+3,w
   631     06BA  00A3               	movwf	_val+3
   632     06BB  0848               	movf	??_main+2,w
   633     06BC  00A2               	movwf	_val+2
   634     06BD  0847               	movf	??_main+1,w
   635     06BE  00A1               	movwf	_val+1
   636     06BF  0846               	movf	??_main,w
   637     06C0  00A0               	movwf	_val
   638     06C1                     l1097:
   639                           
   640                           ;ADC_PWM_task.c: 32:         cmd(0x80);
   641     06C1  3080               	movlw	128
   642     06C2  120A  118A  2331  120A  118A  	fcall	_cmd
   643     06C7                     l1099:
   644                           
   645                           ;ADC_PWM_task.c: 33:         for(n=0; n<6; n++) {
   646     06C7  1283               	bcf	3,5	;RP0=0, select bank0
   647     06C8  1303               	bcf	3,6	;RP1=0, select bank0
   648     06C9  01B8               	clrf	_n
   649     06CA                     l1105:
   650                           
   651                           ;ADC_PWM_task.c: 35:             data(ch0[n]);
   652     06CA  0838               	movf	_n,w
   653     06CB  3E55               	addlw	(low (_ch0| 0))& (0+255)
   654     06CC  0084               	movwf	4
   655     06CD  1383               	bcf	3,7	;select IRP bank0
   656     06CE  0800               	movf	0,w
   657     06CF  120A  118A  231C  120A  118A  	fcall	_data
   658     06D4                     l1107:
   659                           
   660                           ;ADC_PWM_task.c: 36:         } output(val);
   661     06D4  3001               	movlw	1
   662     06D5  00FF               	movwf	btemp+1
   663     06D6  087F               	movf	btemp+1,w
   664     06D7  1283               	bcf	3,5	;RP0=0, select bank0
   665     06D8  1303               	bcf	3,6	;RP1=0, select bank0
   666     06D9  07B8               	addwf	_n,f
   667     06DA                     l1109:
   668     06DA  3006               	movlw	6
   669     06DB  0238               	subwf	_n,w
   670     06DC  1C03               	skipc
   671     06DD  2EDF               	goto	u701
   672     06DE  2EE0               	goto	u700
   673     06DF                     u701:
   674     06DF  2ECA               	goto	l1105
   675     06E0                     u700:
   676     06E0                     l1111:
   677     06E0  0821               	movf	_val+1,w
   678     06E1  00BA               	movwf	output@n+1
   679     06E2  0820               	movf	_val,w
   680     06E3  00B9               	movwf	output@n
   681     06E4  120A  118A  24E4  120A  118A  	fcall	_output
   682     06E9                     l1113:
   683                           
   684                           ;ADC_PWM_task.c: 37:         UART_newline();
   685     06E9  120A  118A  22D0  120A  118A  	fcall	_UART_newline
   686     06EE                     l1115:
   687                           
   688                           ;ADC_PWM_task.c: 38:         ADCON0 = 0x91;
   689     06EE  3091               	movlw	145
   690     06EF  1283               	bcf	3,5	;RP0=0, select bank0
   691     06F0  1303               	bcf	3,6	;RP1=0, select bank0
   692     06F1  009F               	movwf	31	;volatile
   693     06F2                     l1117:
   694                           
   695                           ;ADC_PWM_task.c: 39:         ADCON1 = 0x82;
   696     06F2  3082               	movlw	130
   697     06F3  1683               	bsf	3,5	;RP0=1, select bank1
   698     06F4  1303               	bcf	3,6	;RP1=0, select bank1
   699     06F5  009F               	movwf	31	;volatile
   700     06F6                     l1119:
   701                           
   702                           ;ADC_PWM_task.c: 40:         ADCON0 |= 0x04;
   703     06F6  1283               	bcf	3,5	;RP0=0, select bank0
   704     06F7  1303               	bcf	3,6	;RP1=0, select bank0
   705     06F8  151F               	bsf	31,2	;volatile
   706     06F9                     l83:	
   707                           ;ADC_PWM_task.c: 41:         while(ADCON0&0x04);
   708                           
   709     06F9  191F               	btfsc	31,2	;volatile
   710     06FA  2EFC               	goto	u711
   711     06FB  2EFD               	goto	u710
   712     06FC                     u711:
   713     06FC  2EF9               	goto	l83
   714     06FD                     u710:
   715     06FD                     l1121:
   716                           
   717                           ;ADC_PWM_task.c: 42:         loval = ADRESL;
   718     06FD  1683               	bsf	3,5	;RP0=1, select bank1
   719     06FE  1303               	bcf	3,6	;RP1=0, select bank1
   720     06FF  081E               	movf	30,w	;volatile
   721     0700  1283               	bcf	3,5	;RP0=0, select bank0
   722     0701  1303               	bcf	3,6	;RP1=0, select bank0
   723     0702  00C6               	movwf	??_main
   724     0703  01C7               	clrf	??_main+1
   725     0704  01C8               	clrf	??_main+2
   726     0705  01C9               	clrf	??_main+3
   727     0706  0849               	movf	??_main+3,w
   728     0707  00AF               	movwf	_loval+3
   729     0708  0848               	movf	??_main+2,w
   730     0709  00AE               	movwf	_loval+2
   731     070A  0847               	movf	??_main+1,w
   732     070B  00AD               	movwf	_loval+1
   733     070C  0846               	movf	??_main,w
   734     070D  00AC               	movwf	_loval
   735                           
   736                           ;ADC_PWM_task.c: 43:         hival = ADRESH;
   737     070E  081E               	movf	30,w	;volatile
   738     070F  00C6               	movwf	??_main
   739     0710  01C7               	clrf	??_main+1
   740     0711  01C8               	clrf	??_main+2
   741     0712  01C9               	clrf	??_main+3
   742     0713  0849               	movf	??_main+3,w
   743     0714  00AB               	movwf	_hival+3
   744     0715  0848               	movf	??_main+2,w
   745     0716  00AA               	movwf	_hival+2
   746     0717  0847               	movf	??_main+1,w
   747     0718  00A9               	movwf	_hival+1
   748     0719  0846               	movf	??_main,w
   749     071A  00A8               	movwf	_hival
   750     071B                     l1123:
   751                           
   752                           ;ADC_PWM_task.c: 44:         val = (hival<<8) + loval;
   753     071B  082C               	movf	_loval,w
   754     071C  00C6               	movwf	??_main
   755     071D  082D               	movf	_loval+1,w
   756     071E  00C7               	movwf	??_main+1
   757     071F  082E               	movf	_loval+2,w
   758     0720  00C8               	movwf	??_main+2
   759     0721  082F               	movf	_loval+3,w
   760     0722  00C9               	movwf	??_main+3
   761     0723  0828               	movf	_hival,w
   762     0724  00CA               	movwf	??_main+4
   763     0725  0829               	movf	_hival+1,w
   764     0726  00CB               	movwf	??_main+5
   765     0727  082A               	movf	_hival+2,w
   766     0728  00CC               	movwf	??_main+6
   767     0729  082B               	movf	_hival+3,w
   768     072A  00CD               	movwf	??_main+7
   769     072B  3008               	movlw	8
   770     072C                     u725:
   771     072C  1003               	clrc
   772     072D  0DCA               	rlf	??_main+4,f
   773     072E  0DCB               	rlf	??_main+5,f
   774     072F  0DCC               	rlf	??_main+6,f
   775     0730  0DCD               	rlf	??_main+7,f
   776     0731                     u720:
   777     0731  3EFF               	addlw	-1
   778     0732  1D03               	skipz
   779     0733  2F2C               	goto	u725
   780     0734  084A               	movf	??_main+4,w
   781     0735  07C6               	addwf	??_main,f
   782     0736  084B               	movf	??_main+5,w
   783     0737  1803               	skipnc
   784     0738  0F4B               	incfsz	??_main+5,w
   785     0739  2F3B               	goto	u730
   786     073A  2F3C               	goto	u731
   787     073B                     u730:
   788     073B  07C7               	addwf	??_main+1,f
   789     073C                     u731:
   790     073C  084C               	movf	??_main+6,w
   791     073D  1803               	skipnc
   792     073E  0F4C               	incfsz	??_main+6,w
   793     073F  2F41               	goto	u732
   794     0740  2F42               	goto	u733
   795     0741                     u732:
   796     0741  07C8               	addwf	??_main+2,f
   797     0742                     u733:
   798     0742  084D               	movf	??_main+7,w
   799     0743  1803               	skipnc
   800     0744  0A4D               	incf	??_main+7,w
   801     0745  07C9               	addwf	??_main+3,f
   802     0746  0849               	movf	??_main+3,w
   803     0747  00A3               	movwf	_val+3
   804     0748  0848               	movf	??_main+2,w
   805     0749  00A2               	movwf	_val+2
   806     074A  0847               	movf	??_main+1,w
   807     074B  00A1               	movwf	_val+1
   808     074C  0846               	movf	??_main,w
   809     074D  00A0               	movwf	_val
   810     074E                     l1125:
   811                           
   812                           ;ADC_PWM_task.c: 45:         volt = (val*624)/1023;
   813     074E  3000               	movlw	0
   814     074F  00BC               	movwf	___lldiv@divisor+3
   815     0750  3000               	movlw	0
   816     0751  00BB               	movwf	___lldiv@divisor+2
   817     0752  3003               	movlw	3
   818     0753  00BA               	movwf	___lldiv@divisor+1
   819     0754  30FF               	movlw	255
   820     0755  00B9               	movwf	___lldiv@divisor
   821     0756  0823               	movf	_val+3,w
   822     0757  00F3               	movwf	___lmul@multiplier+3
   823     0758  0822               	movf	_val+2,w
   824     0759  00F2               	movwf	___lmul@multiplier+2
   825     075A  0821               	movf	_val+1,w
   826     075B  00F1               	movwf	___lmul@multiplier+1
   827     075C  0820               	movf	_val,w
   828     075D  00F0               	movwf	___lmul@multiplier
   829     075E  3000               	movlw	0
   830     075F  00F7               	movwf	___lmul@multiplicand+3
   831     0760  3000               	movlw	0
   832     0761  00F6               	movwf	___lmul@multiplicand+2
   833     0762  3002               	movlw	2
   834     0763  00F5               	movwf	___lmul@multiplicand+1
   835     0764  3070               	movlw	112
   836     0765  00F4               	movwf	___lmul@multiplicand
   837     0766  120A  118A  23B2  120A  118A  	fcall	___lmul
   838     076B  0873               	movf	?___lmul+3,w
   839     076C  1283               	bcf	3,5	;RP0=0, select bank0
   840     076D  1303               	bcf	3,6	;RP1=0, select bank0
   841     076E  00C0               	movwf	___lldiv@dividend+3
   842     076F  0872               	movf	?___lmul+2,w
   843     0770  00BF               	movwf	___lldiv@dividend+2
   844     0771  0871               	movf	?___lmul+1,w
   845     0772  00BE               	movwf	___lldiv@dividend+1
   846     0773  0870               	movf	?___lmul,w
   847     0774  00BD               	movwf	___lldiv@dividend
   848     0775  120A  118A  23F8  120A  118A  	fcall	___lldiv
   849     077A  1283               	bcf	3,5	;RP0=0, select bank0
   850     077B  1303               	bcf	3,6	;RP1=0, select bank0
   851     077C  083C               	movf	?___lldiv+3,w
   852     077D  00A7               	movwf	_volt+3
   853     077E  083B               	movf	?___lldiv+2,w
   854     077F  00A6               	movwf	_volt+2
   855     0780  083A               	movf	?___lldiv+1,w
   856     0781  00A5               	movwf	_volt+1
   857     0782  0839               	movf	?___lldiv,w
   858     0783  00A4               	movwf	_volt
   859     0784                     l1127:
   860                           
   861                           ;ADC_PWM_task.c: 46:         cmd(0xC0);
   862     0784  30C0               	movlw	192
   863     0785  120A  118A  2331  120A  118A  	fcall	_cmd
   864     078A                     l1129:
   865                           
   866                           ;ADC_PWM_task.c: 47:         for(n=0; n<6; n++) {
   867     078A  1283               	bcf	3,5	;RP0=0, select bank0
   868     078B  1303               	bcf	3,6	;RP1=0, select bank0
   869     078C  01B8               	clrf	_n
   870     078D                     l1135:
   871                           
   872                           ;ADC_PWM_task.c: 49:             data(ch1[n]);
   873     078D  0838               	movf	_n,w
   874     078E  3E4E               	addlw	(low (_ch1| 0))& (0+255)
   875     078F  0084               	movwf	4
   876     0790  1383               	bcf	3,7	;select IRP bank0
   877     0791  0800               	movf	0,w
   878     0792  120A  118A  231C  120A  118A  	fcall	_data
   879     0797                     l1137:
   880                           
   881                           ;ADC_PWM_task.c: 50:         } output(volt);
   882     0797  3001               	movlw	1
   883     0798  00FF               	movwf	btemp+1
   884     0799  087F               	movf	btemp+1,w
   885     079A  1283               	bcf	3,5	;RP0=0, select bank0
   886     079B  1303               	bcf	3,6	;RP1=0, select bank0
   887     079C  07B8               	addwf	_n,f
   888     079D                     l1139:
   889     079D  3006               	movlw	6
   890     079E  0238               	subwf	_n,w
   891     079F  1C03               	skipc
   892     07A0  2FA2               	goto	u741
   893     07A1  2FA3               	goto	u740
   894     07A2                     u741:
   895     07A2  2F8D               	goto	l1135
   896     07A3                     u740:
   897     07A3                     l1141:
   898     07A3  0825               	movf	_volt+1,w
   899     07A4  00BA               	movwf	output@n+1
   900     07A5  0824               	movf	_volt,w
   901     07A6  00B9               	movwf	output@n
   902     07A7  120A  118A  24E4  120A  118A  	fcall	_output
   903     07AC                     l1143:
   904                           
   905                           ;ADC_PWM_task.c: 51:         UART_newline();
   906     07AC  120A  118A  22D0  120A  118A  	fcall	_UART_newline
   907     07B1                     l1145:
   908                           
   909                           ;ADC_PWM_task.c: 52:         CCPR1L = (volt>>2);
   910     07B1  1283               	bcf	3,5	;RP0=0, select bank0
   911     07B2  1303               	bcf	3,6	;RP1=0, select bank0
   912     07B3  0824               	movf	_volt,w
   913     07B4  00C6               	movwf	??_main
   914     07B5  0825               	movf	_volt+1,w
   915     07B6  00C7               	movwf	??_main+1
   916     07B7  0826               	movf	_volt+2,w
   917     07B8  00C8               	movwf	??_main+2
   918     07B9  0827               	movf	_volt+3,w
   919     07BA  00C9               	movwf	??_main+3
   920     07BB  3002               	movlw	2
   921     07BC                     u755:
   922     07BC  1003               	clrc
   923     07BD  0CC9               	rrf	??_main+3,f
   924     07BE  0CC8               	rrf	??_main+2,f
   925     07BF  0CC7               	rrf	??_main+1,f
   926     07C0  0CC6               	rrf	??_main,f
   927     07C1                     u750:
   928     07C1  3EFF               	addlw	-1
   929     07C2  1D03               	skipz
   930     07C3  2FBC               	goto	u755
   931     07C4  0846               	movf	??_main,w
   932     07C5  0095               	movwf	21	;volatile
   933     07C6                     l1147:
   934                           
   935                           ;ADC_PWM_task.c: 53:         CCP1CON = (CCP1CON&0xCF)+((val&0x03)<<4);
   936     07C6  0820               	movf	_val,w
   937     07C7  3903               	andlw	3
   938     07C8  00C6               	movwf	??_main
   939     07C9  3004               	movlw	4
   940     07CA                     u765:
   941     07CA  1003               	clrc
   942     07CB  0DC6               	rlf	??_main,f
   943     07CC  3EFF               	addlw	-1
   944     07CD  1D03               	skipz
   945     07CE  2FCA               	goto	u765
   946     07CF  0817               	movf	23,w	;volatile
   947     07D0  39CF               	andlw	207
   948     07D1  0746               	addwf	??_main,w
   949     07D2  0097               	movwf	23	;volatile
   950     07D3                     l1149:
   951                           
   952                           ;ADC_PWM_task.c: 54:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   953     07D3  301A               	movlw	26
   954     07D4  1283               	bcf	3,5	;RP0=0, select bank0
   955     07D5  1303               	bcf	3,6	;RP1=0, select bank0
   956     07D6  00C8               	movwf	??_main+2
   957     07D7  305E               	movlw	94
   958     07D8  00C7               	movwf	??_main+1
   959     07D9  306D               	movlw	109
   960     07DA  00C6               	movwf	??_main
   961     07DB                     u777:
   962     07DB  0BC6               	decfsz	??_main,f
   963     07DC  2FDB               	goto	u777
   964     07DD  0BC7               	decfsz	??_main+1,f
   965     07DE  2FDB               	goto	u777
   966     07DF  0BC8               	decfsz	??_main+2,f
   967     07E0  2FDB               	goto	u777
   968     07E1  2FE2               	nop2
   969     07E2  2E67               	goto	l1089
   970     07E3  120A  118A  2800   	ljmp	start
   971     07E6                     __end_of_main:
   972                           
   973                           	psect	text1
   974     04E4                     __ptext1:	
   975 ;; *************** function _output *****************
   976 ;; Defined at:
   977 ;;		line 83 in file "ADC_PWM_task.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  n               2    0[BANK0 ] unsigned int 
   980 ;; Auto vars:     Size  Location     Type
   981 ;;		None
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      void 
   984 ;; Registers used:
   985 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   991 ;;      Params:         0       2       0       0       0
   992 ;;      Locals:         0       0       0       0       0
   993 ;;      Temps:          0       6       0       0       0
   994 ;;      Totals:         0       8       0       0       0
   995 ;;Total ram usage:        8 bytes
   996 ;; Hardware stack levels used: 1
   997 ;; Hardware stack levels required when called: 2
   998 ;; This function calls:
   999 ;;		___lwdiv
  1000 ;;		___wmul
  1001 ;;		_data
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007     04E4                     _output:	
  1008                           ;psect for function _output
  1009                           
  1010     04E4                     l1021:	
  1011                           ;incstack = 0
  1012                           ; Regs used in _output: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1013                           
  1014                           
  1015                           ;ADC_PWM_task.c: 84:     d3 = (unsigned int)(n/1000);
  1016     04E4  30E8               	movlw	232
  1017     04E5  00F6               	movwf	___lwdiv@divisor
  1018     04E6  3003               	movlw	3
  1019     04E7  00F7               	movwf	___lwdiv@divisor+1
  1020     04E8  1283               	bcf	3,5	;RP0=0, select bank0
  1021     04E9  1303               	bcf	3,6	;RP1=0, select bank0
  1022     04EA  083A               	movf	output@n+1,w
  1023     04EB  00F9               	movwf	___lwdiv@dividend+1
  1024     04EC  0839               	movf	output@n,w
  1025     04ED  00F8               	movwf	___lwdiv@dividend
  1026     04EE  120A  118A  236E  120A  118A  	fcall	___lwdiv
  1027     04F3  0877               	movf	?___lwdiv+1,w
  1028     04F4  1283               	bcf	3,5	;RP0=0, select bank0
  1029     04F5  1303               	bcf	3,6	;RP1=0, select bank0
  1030     04F6  00B7               	movwf	_d3+1
  1031     04F7  0876               	movf	?___lwdiv,w
  1032     04F8  00B6               	movwf	_d3
  1033                           
  1034                           ;ADC_PWM_task.c: 85:     d2 = (unsigned int)(n-(d3*1000))/100;
  1035     04F9  3064               	movlw	100
  1036     04FA  00F6               	movwf	___lwdiv@divisor
  1037     04FB  3000               	movlw	0
  1038     04FC  00F7               	movwf	___lwdiv@divisor+1
  1039     04FD  0837               	movf	_d3+1,w
  1040     04FE  00F1               	movwf	___wmul@multiplier+1
  1041     04FF  0836               	movf	_d3,w
  1042     0500  00F0               	movwf	___wmul@multiplier
  1043     0501  3018               	movlw	24
  1044     0502  00F2               	movwf	___wmul@multiplicand
  1045     0503  30FC               	movlw	252
  1046     0504  00F3               	movwf	___wmul@multiplicand+1
  1047     0505  120A  118A  2349  120A  118A  	fcall	___wmul
  1048     050A  1283               	bcf	3,5	;RP0=0, select bank0
  1049     050B  1303               	bcf	3,6	;RP1=0, select bank0
  1050     050C  0839               	movf	output@n,w
  1051     050D  0770               	addwf	?___wmul,w
  1052     050E  00F8               	movwf	___lwdiv@dividend
  1053     050F  083A               	movf	output@n+1,w
  1054     0510  1803               	skipnc
  1055     0511  0A3A               	incf	output@n+1,w
  1056     0512  0771               	addwf	?___wmul+1,w
  1057     0513  00F9               	movwf	___lwdiv@dividend+1
  1058     0514  120A  118A  236E  120A  118A  	fcall	___lwdiv
  1059     0519  0877               	movf	?___lwdiv+1,w
  1060     051A  1283               	bcf	3,5	;RP0=0, select bank0
  1061     051B  1303               	bcf	3,6	;RP1=0, select bank0
  1062     051C  00B5               	movwf	_d2+1
  1063     051D  0876               	movf	?___lwdiv,w
  1064     051E  00B4               	movwf	_d2
  1065                           
  1066                           ;ADC_PWM_task.c: 86:     d1 = (unsigned int)(n-(d3*1000)-(d2*100))/10;
  1067     051F  300A               	movlw	10
  1068     0520  00F6               	movwf	___lwdiv@divisor
  1069     0521  3000               	movlw	0
  1070     0522  00F7               	movwf	___lwdiv@divisor+1
  1071     0523  0837               	movf	_d3+1,w
  1072     0524  00F1               	movwf	___wmul@multiplier+1
  1073     0525  0836               	movf	_d3,w
  1074     0526  00F0               	movwf	___wmul@multiplier
  1075     0527  3018               	movlw	24
  1076     0528  00F2               	movwf	___wmul@multiplicand
  1077     0529  30FC               	movlw	252
  1078     052A  00F3               	movwf	___wmul@multiplicand+1
  1079     052B  120A  118A  2349  120A  118A  	fcall	___wmul
  1080     0530  0870               	movf	?___wmul,w
  1081     0531  1283               	bcf	3,5	;RP0=0, select bank0
  1082     0532  1303               	bcf	3,6	;RP1=0, select bank0
  1083     0533  00BB               	movwf	??_output
  1084     0534  0871               	movf	?___wmul+1,w
  1085     0535  00BC               	movwf	??_output+1
  1086     0536  0835               	movf	_d2+1,w
  1087     0537  00F1               	movwf	___wmul@multiplier+1
  1088     0538  0834               	movf	_d2,w
  1089     0539  00F0               	movwf	___wmul@multiplier
  1090     053A  309C               	movlw	156
  1091     053B  00F2               	movwf	___wmul@multiplicand
  1092     053C  30FF               	movlw	255
  1093     053D  00F3               	movwf	___wmul@multiplicand+1
  1094     053E  120A  118A  2349  120A  118A  	fcall	___wmul
  1095     0543  0870               	movf	?___wmul,w
  1096     0544  1283               	bcf	3,5	;RP0=0, select bank0
  1097     0545  1303               	bcf	3,6	;RP1=0, select bank0
  1098     0546  073B               	addwf	??_output,w
  1099     0547  00BD               	movwf	??_output+2
  1100     0548  0871               	movf	?___wmul+1,w
  1101     0549  1803               	skipnc
  1102     054A  0A71               	incf	?___wmul+1,w
  1103     054B  073C               	addwf	??_output+1,w
  1104     054C  00BE               	movwf	??_output+3
  1105     054D  0839               	movf	output@n,w
  1106     054E  073D               	addwf	??_output+2,w
  1107     054F  00F8               	movwf	___lwdiv@dividend
  1108     0550  083A               	movf	output@n+1,w
  1109     0551  1803               	skipnc
  1110     0552  0A3A               	incf	output@n+1,w
  1111     0553  073E               	addwf	??_output+3,w
  1112     0554  00F9               	movwf	___lwdiv@dividend+1
  1113     0555  120A  118A  236E  120A  118A  	fcall	___lwdiv
  1114     055A  0877               	movf	?___lwdiv+1,w
  1115     055B  1283               	bcf	3,5	;RP0=0, select bank0
  1116     055C  1303               	bcf	3,6	;RP1=0, select bank0
  1117     055D  00B3               	movwf	_d1+1
  1118     055E  0876               	movf	?___lwdiv,w
  1119     055F  00B2               	movwf	_d1
  1120     0560                     l1023:
  1121                           
  1122                           ;ADC_PWM_task.c: 87:     d0 = (unsigned int)(n-(d3*1000)-(d2*100)-(d1*10));
  1123     0560  0837               	movf	_d3+1,w
  1124     0561  00F1               	movwf	___wmul@multiplier+1
  1125     0562  0836               	movf	_d3,w
  1126     0563  00F0               	movwf	___wmul@multiplier
  1127     0564  3018               	movlw	24
  1128     0565  00F2               	movwf	___wmul@multiplicand
  1129     0566  30FC               	movlw	252
  1130     0567  00F3               	movwf	___wmul@multiplicand+1
  1131     0568  120A  118A  2349  120A  118A  	fcall	___wmul
  1132     056D  0870               	movf	?___wmul,w
  1133     056E  1283               	bcf	3,5	;RP0=0, select bank0
  1134     056F  1303               	bcf	3,6	;RP1=0, select bank0
  1135     0570  00BB               	movwf	??_output
  1136     0571  0871               	movf	?___wmul+1,w
  1137     0572  00BC               	movwf	??_output+1
  1138     0573  0835               	movf	_d2+1,w
  1139     0574  00F1               	movwf	___wmul@multiplier+1
  1140     0575  0834               	movf	_d2,w
  1141     0576  00F0               	movwf	___wmul@multiplier
  1142     0577  309C               	movlw	156
  1143     0578  00F2               	movwf	___wmul@multiplicand
  1144     0579  30FF               	movlw	255
  1145     057A  00F3               	movwf	___wmul@multiplicand+1
  1146     057B  120A  118A  2349  120A  118A  	fcall	___wmul
  1147     0580  0870               	movf	?___wmul,w
  1148     0581  1283               	bcf	3,5	;RP0=0, select bank0
  1149     0582  1303               	bcf	3,6	;RP1=0, select bank0
  1150     0583  073B               	addwf	??_output,w
  1151     0584  00BD               	movwf	??_output+2
  1152     0585  0871               	movf	?___wmul+1,w
  1153     0586  1803               	skipnc
  1154     0587  0A71               	incf	?___wmul+1,w
  1155     0588  073C               	addwf	??_output+1,w
  1156     0589  00BE               	movwf	??_output+3
  1157     058A  0833               	movf	_d1+1,w
  1158     058B  00F1               	movwf	___wmul@multiplier+1
  1159     058C  0832               	movf	_d1,w
  1160     058D  00F0               	movwf	___wmul@multiplier
  1161     058E  30F6               	movlw	246
  1162     058F  00F2               	movwf	___wmul@multiplicand
  1163     0590  30FF               	movlw	255
  1164     0591  00F3               	movwf	___wmul@multiplicand+1
  1165     0592  120A  118A  2349  120A  118A  	fcall	___wmul
  1166     0597  0870               	movf	?___wmul,w
  1167     0598  1283               	bcf	3,5	;RP0=0, select bank0
  1168     0599  1303               	bcf	3,6	;RP1=0, select bank0
  1169     059A  073D               	addwf	??_output+2,w
  1170     059B  00BF               	movwf	??_output+4
  1171     059C  0871               	movf	?___wmul+1,w
  1172     059D  1803               	skipnc
  1173     059E  0A71               	incf	?___wmul+1,w
  1174     059F  073E               	addwf	??_output+3,w
  1175     05A0  00C0               	movwf	??_output+5
  1176     05A1  0839               	movf	output@n,w
  1177     05A2  073F               	addwf	??_output+4,w
  1178     05A3  00B0               	movwf	_d0
  1179     05A4  083A               	movf	output@n+1,w
  1180     05A5  1803               	skipnc
  1181     05A6  0A3A               	incf	output@n+1,w
  1182     05A7  0740               	addwf	??_output+5,w
  1183     05A8  00B1               	movwf	_d0+1
  1184     05A9                     l1025:
  1185                           
  1186                           ;ADC_PWM_task.c: 88:     if (d3>0) {
  1187     05A9  0836               	movf	_d3,w
  1188     05AA  0437               	iorwf	_d3+1,w
  1189     05AB  1903               	btfsc	3,2
  1190     05AC  2DAE               	goto	u511
  1191     05AD  2DAF               	goto	u510
  1192     05AE                     u511:
  1193     05AE  2DD2               	goto	l1029
  1194     05AF                     u510:
  1195     05AF                     l1027:
  1196                           
  1197                           ;ADC_PWM_task.c: 89:         data(0x30+d3); data(0x30+d2);
  1198     05AF  0836               	movf	_d3,w
  1199     05B0  3E30               	addlw	48
  1200     05B1  120A  118A  231C  120A  118A  	fcall	_data
  1201     05B6  1283               	bcf	3,5	;RP0=0, select bank0
  1202     05B7  1303               	bcf	3,6	;RP1=0, select bank0
  1203     05B8  0834               	movf	_d2,w
  1204     05B9  3E30               	addlw	48
  1205     05BA  120A  118A  231C  120A  118A  	fcall	_data
  1206                           
  1207                           ;ADC_PWM_task.c: 90:         data(0x30+d1); data(0x30+d0);
  1208     05BF  1283               	bcf	3,5	;RP0=0, select bank0
  1209     05C0  1303               	bcf	3,6	;RP1=0, select bank0
  1210     05C1  0832               	movf	_d1,w
  1211     05C2  3E30               	addlw	48
  1212     05C3  120A  118A  231C  120A  118A  	fcall	_data
  1213     05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1214     05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1215     05CA  0830               	movf	_d0,w
  1216     05CB  3E30               	addlw	48
  1217     05CC  120A  118A  231C  120A  118A  	fcall	_data
  1218                           
  1219                           ;ADC_PWM_task.c: 91:     }
  1220     05D1  2E5C               	goto	l104
  1221     05D2                     l1029:
  1222     05D2  0834               	movf	_d2,w
  1223     05D3  0435               	iorwf	_d2+1,w
  1224     05D4  1903               	btfsc	3,2
  1225     05D5  2DD7               	goto	u521
  1226     05D6  2DD8               	goto	u520
  1227     05D7                     u521:
  1228     05D7  2DFA               	goto	l1033
  1229     05D8                     u520:
  1230     05D8                     l1031:
  1231                           
  1232                           ;ADC_PWM_task.c: 93:         data(' '); data(0x30+d2);
  1233     05D8  3020               	movlw	32
  1234     05D9  120A  118A  231C  120A  118A  	fcall	_data
  1235     05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1236     05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1237     05E0  0834               	movf	_d2,w
  1238     05E1  3E30               	addlw	48
  1239     05E2  120A  118A  231C  120A  118A  	fcall	_data
  1240                           
  1241                           ;ADC_PWM_task.c: 94:         data(0x30+d1); data(0x30+d0);
  1242     05E7  1283               	bcf	3,5	;RP0=0, select bank0
  1243     05E8  1303               	bcf	3,6	;RP1=0, select bank0
  1244     05E9  0832               	movf	_d1,w
  1245     05EA  3E30               	addlw	48
  1246     05EB  120A  118A  231C  120A  118A  	fcall	_data
  1247     05F0  1283               	bcf	3,5	;RP0=0, select bank0
  1248     05F1  1303               	bcf	3,6	;RP1=0, select bank0
  1249     05F2  0830               	movf	_d0,w
  1250     05F3  3E30               	addlw	48
  1251     05F4  120A  118A  231C  120A  118A  	fcall	_data
  1252                           
  1253                           ;ADC_PWM_task.c: 95:     }
  1254     05F9  2E5C               	goto	l104
  1255     05FA                     l1033:
  1256     05FA  0832               	movf	_d1,w
  1257     05FB  0433               	iorwf	_d1+1,w
  1258     05FC  1903               	btfsc	3,2
  1259     05FD  2DFF               	goto	u531
  1260     05FE  2E00               	goto	u530
  1261     05FF                     u531:
  1262     05FF  2E1F               	goto	l1037
  1263     0600                     u530:
  1264     0600                     l1035:
  1265                           
  1266                           ;ADC_PWM_task.c: 97:         data(' '); data(' ');
  1267     0600  3020               	movlw	32
  1268     0601  120A  118A  231C  120A  118A  	fcall	_data
  1269     0606  3020               	movlw	32
  1270     0607  120A  118A  231C  120A  118A  	fcall	_data
  1271                           
  1272                           ;ADC_PWM_task.c: 98:         data(0x30+d1); data(0x30+d0);
  1273     060C  1283               	bcf	3,5	;RP0=0, select bank0
  1274     060D  1303               	bcf	3,6	;RP1=0, select bank0
  1275     060E  0832               	movf	_d1,w
  1276     060F  3E30               	addlw	48
  1277     0610  120A  118A  231C  120A  118A  	fcall	_data
  1278     0615  1283               	bcf	3,5	;RP0=0, select bank0
  1279     0616  1303               	bcf	3,6	;RP1=0, select bank0
  1280     0617  0830               	movf	_d0,w
  1281     0618  3E30               	addlw	48
  1282     0619  120A  118A  231C  120A  118A  	fcall	_data
  1283                           
  1284                           ;ADC_PWM_task.c: 99:     }
  1285     061E  2E5C               	goto	l104
  1286     061F                     l1037:
  1287     061F  0830               	movf	_d0,w
  1288     0620  0431               	iorwf	_d0+1,w
  1289     0621  1903               	btfsc	3,2
  1290     0622  2E24               	goto	u541
  1291     0623  2E25               	goto	u540
  1292     0624                     u541:
  1293     0624  2E41               	goto	l1041
  1294     0625                     u540:
  1295     0625                     l1039:
  1296                           
  1297                           ;ADC_PWM_task.c: 101:         data(' '); data(' ');
  1298     0625  3020               	movlw	32
  1299     0626  120A  118A  231C  120A  118A  	fcall	_data
  1300     062B  3020               	movlw	32
  1301     062C  120A  118A  231C  120A  118A  	fcall	_data
  1302                           
  1303                           ;ADC_PWM_task.c: 102:         data(' '); data(0x30+d0);
  1304     0631  3020               	movlw	32
  1305     0632  120A  118A  231C  120A  118A  	fcall	_data
  1306     0637  1283               	bcf	3,5	;RP0=0, select bank0
  1307     0638  1303               	bcf	3,6	;RP1=0, select bank0
  1308     0639  0830               	movf	_d0,w
  1309     063A  3E30               	addlw	48
  1310     063B  120A  118A  231C  120A  118A  	fcall	_data
  1311                           
  1312                           ;ADC_PWM_task.c: 103:     }
  1313     0640  2E5C               	goto	l104
  1314     0641                     l1041:
  1315                           
  1316                           ;ADC_PWM_task.c: 105:         data(' '); data(' ');
  1317     0641  3020               	movlw	32
  1318     0642  120A  118A  231C  120A  118A  	fcall	_data
  1319     0647  3020               	movlw	32
  1320     0648  120A  118A  231C  120A  118A  	fcall	_data
  1321                           
  1322                           ;ADC_PWM_task.c: 106:         data(' '); data(0x30+d0);
  1323     064D  3020               	movlw	32
  1324     064E  120A  118A  231C  120A  118A  	fcall	_data
  1325     0653  1283               	bcf	3,5	;RP0=0, select bank0
  1326     0654  1303               	bcf	3,6	;RP1=0, select bank0
  1327     0655  0830               	movf	_d0,w
  1328     0656  3E30               	addlw	48
  1329     0657  120A  118A  231C  120A  118A  	fcall	_data
  1330     065C                     l104:
  1331     065C  0008               	return
  1332     065D                     __end_of_output:
  1333                           
  1334                           	psect	text2
  1335     031C                     __ptext2:	
  1336 ;; *************** function _data *****************
  1337 ;; Defined at:
  1338 ;;		line 146 in file "ADC_PWM_task.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  i               1    wreg     unsigned char 
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;  i               1    2[COMMON] unsigned char 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1352 ;;      Params:         0       0       0       0       0
  1353 ;;      Locals:         1       0       0       0       0
  1354 ;;      Temps:          0       0       0       0       0
  1355 ;;      Totals:         1       0       0       0       0
  1356 ;;Total ram usage:        1 bytes
  1357 ;; Hardware stack levels used: 1
  1358 ;; Hardware stack levels required when called: 1
  1359 ;; This function calls:
  1360 ;;		_delay
  1361 ;; This function is called by:
  1362 ;;		_main
  1363 ;;		_output
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367     031C                     _data:	
  1368                           ;psect for function _data
  1369                           
  1370                           
  1371                           ;incstack = 0
  1372                           ; Regs used in _data: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1373                           ;data@i stored from wreg
  1374     031C  00F2               	movwf	data@i
  1375     031D                     l925:
  1376                           
  1377                           ;ADC_PWM_task.c: 147:     PORTC |= 0x08;
  1378     031D  1283               	bcf	3,5	;RP0=0, select bank0
  1379     031E  1303               	bcf	3,6	;RP1=0, select bank0
  1380     031F  1587               	bsf	7,3	;volatile
  1381     0320                     l927:
  1382                           
  1383                           ;ADC_PWM_task.c: 148:     PORTD = i;
  1384     0320  0872               	movf	data@i,w
  1385     0321  0088               	movwf	8	;volatile
  1386     0322                     l929:
  1387                           
  1388                           ;ADC_PWM_task.c: 149:     PORTC |= 0x01;
  1389     0322  1407               	bsf	7,0	;volatile
  1390     0323                     l931:
  1391                           
  1392                           ;ADC_PWM_task.c: 150:     PORTC &= ~(0x01);
  1393     0323  30FE               	movlw	254
  1394     0324  00FF               	movwf	btemp+1
  1395     0325  087F               	movf	btemp+1,w
  1396     0326  0587               	andwf	7,f	;volatile
  1397     0327                     l933:
  1398                           
  1399                           ;ADC_PWM_task.c: 151:     delay(100);
  1400     0327  3064               	movlw	100
  1401     0328  00F0               	movwf	delay@x
  1402     0329  3000               	movlw	0
  1403     032A  00F1               	movwf	delay@x+1
  1404     032B  120A  118A  22DF  120A  118A  	fcall	_delay
  1405     0330                     l110:
  1406     0330  0008               	return
  1407     0331                     __end_of_data:
  1408                           
  1409                           	psect	text3
  1410     0349                     __ptext3:	
  1411 ;; *************** function ___wmul *****************
  1412 ;; Defined at:
  1413 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  multiplier      2    0[COMMON] unsigned int 
  1416 ;;  multiplicand    2    2[COMMON] unsigned int 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  product         2    4[COMMON] unsigned int 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  2    0[COMMON] unsigned int 
  1421 ;; Registers used:
  1422 ;;		wreg, status,2, status,0
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1428 ;;      Params:         4       0       0       0       0
  1429 ;;      Locals:         2       0       0       0       0
  1430 ;;      Temps:          0       0       0       0       0
  1431 ;;      Totals:         6       0       0       0       0
  1432 ;;Total ram usage:        6 bytes
  1433 ;; Hardware stack levels used: 1
  1434 ;; This function calls:
  1435 ;;		Nothing
  1436 ;; This function is called by:
  1437 ;;		_output
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441     0349                     ___wmul:	
  1442                           ;psect for function ___wmul
  1443                           
  1444     0349                     l935:	
  1445                           ;incstack = 0
  1446                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1447                           
  1448     0349  01F4               	clrf	___wmul@product
  1449     034A  01F5               	clrf	___wmul@product+1
  1450     034B                     l937:
  1451     034B  1C70               	btfss	___wmul@multiplier,0
  1452     034C  2B4E               	goto	u401
  1453     034D  2B4F               	goto	u400
  1454     034E                     u401:
  1455     034E  2B55               	goto	l211
  1456     034F                     u400:
  1457     034F                     l939:
  1458     034F  0872               	movf	___wmul@multiplicand,w
  1459     0350  07F4               	addwf	___wmul@product,f
  1460     0351  1803               	skipnc
  1461     0352  0AF5               	incf	___wmul@product+1,f
  1462     0353  0873               	movf	___wmul@multiplicand+1,w
  1463     0354  07F5               	addwf	___wmul@product+1,f
  1464     0355                     l211:
  1465     0355  3001               	movlw	1
  1466     0356                     u415:
  1467     0356  1003               	clrc
  1468     0357  0DF2               	rlf	___wmul@multiplicand,f
  1469     0358  0DF3               	rlf	___wmul@multiplicand+1,f
  1470     0359  3EFF               	addlw	-1
  1471     035A  1D03               	skipz
  1472     035B  2B56               	goto	u415
  1473     035C                     l941:
  1474     035C  3001               	movlw	1
  1475     035D                     u425:
  1476     035D  1003               	clrc
  1477     035E  0CF1               	rrf	___wmul@multiplier+1,f
  1478     035F  0CF0               	rrf	___wmul@multiplier,f
  1479     0360  3EFF               	addlw	-1
  1480     0361  1D03               	skipz
  1481     0362  2B5D               	goto	u425
  1482     0363                     l943:
  1483     0363  0870               	movf	___wmul@multiplier,w
  1484     0364  0471               	iorwf	___wmul@multiplier+1,w
  1485     0365  1D03               	btfss	3,2
  1486     0366  2B68               	goto	u431
  1487     0367  2B69               	goto	u430
  1488     0368                     u431:
  1489     0368  2B4B               	goto	l937
  1490     0369                     u430:
  1491     0369                     l945:
  1492     0369  0875               	movf	___wmul@product+1,w
  1493     036A  00F1               	movwf	?___wmul+1
  1494     036B  0874               	movf	___wmul@product,w
  1495     036C  00F0               	movwf	?___wmul
  1496     036D                     l213:
  1497     036D  0008               	return
  1498     036E                     __end_of___wmul:
  1499                           
  1500                           	psect	text4
  1501     036E                     __ptext4:	
  1502 ;; *************** function ___lwdiv *****************
  1503 ;; Defined at:
  1504 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  divisor         2    6[COMMON] unsigned int 
  1507 ;;  dividend        2    8[COMMON] unsigned int 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  quotient        2   10[COMMON] unsigned int 
  1510 ;;  counter         1   12[COMMON] unsigned char 
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  2    6[COMMON] unsigned int 
  1513 ;; Registers used:
  1514 ;;		wreg, status,2, status,0, btemp+1
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1520 ;;      Params:         4       0       0       0       0
  1521 ;;      Locals:         3       0       0       0       0
  1522 ;;      Temps:          0       0       0       0       0
  1523 ;;      Totals:         7       0       0       0       0
  1524 ;;Total ram usage:        7 bytes
  1525 ;; Hardware stack levels used: 1
  1526 ;; This function calls:
  1527 ;;		Nothing
  1528 ;; This function is called by:
  1529 ;;		_output
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533     036E                     ___lwdiv:	
  1534                           ;psect for function ___lwdiv
  1535                           
  1536     036E                     l949:	
  1537                           ;incstack = 0
  1538                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1539                           
  1540     036E  01FA               	clrf	___lwdiv@quotient
  1541     036F  01FB               	clrf	___lwdiv@quotient+1
  1542     0370                     l951:
  1543     0370  0876               	movf	___lwdiv@divisor,w
  1544     0371  0477               	iorwf	___lwdiv@divisor+1,w
  1545     0372  1903               	btfsc	3,2
  1546     0373  2B75               	goto	u441
  1547     0374  2B76               	goto	u440
  1548     0375                     u441:
  1549     0375  2BAD               	goto	l971
  1550     0376                     u440:
  1551     0376                     l953:
  1552     0376  01FC               	clrf	___lwdiv@counter
  1553     0377  0AFC               	incf	___lwdiv@counter,f
  1554     0378  2B84               	goto	l959
  1555     0379                     l955:
  1556     0379  3001               	movlw	1
  1557     037A                     u455:
  1558     037A  1003               	clrc
  1559     037B  0DF6               	rlf	___lwdiv@divisor,f
  1560     037C  0DF7               	rlf	___lwdiv@divisor+1,f
  1561     037D  3EFF               	addlw	-1
  1562     037E  1D03               	skipz
  1563     037F  2B7A               	goto	u455
  1564     0380                     l957:
  1565     0380  3001               	movlw	1
  1566     0381  00FF               	movwf	btemp+1
  1567     0382  087F               	movf	btemp+1,w
  1568     0383  07FC               	addwf	___lwdiv@counter,f
  1569     0384                     l959:
  1570     0384  1FF7               	btfss	___lwdiv@divisor+1,7
  1571     0385  2B87               	goto	u461
  1572     0386  2B88               	goto	u460
  1573     0387                     u461:
  1574     0387  2B79               	goto	l955
  1575     0388                     u460:
  1576     0388                     l961:
  1577     0388  3001               	movlw	1
  1578     0389                     u475:
  1579     0389  1003               	clrc
  1580     038A  0DFA               	rlf	___lwdiv@quotient,f
  1581     038B  0DFB               	rlf	___lwdiv@quotient+1,f
  1582     038C  3EFF               	addlw	-1
  1583     038D  1D03               	skipz
  1584     038E  2B89               	goto	u475
  1585     038F  0877               	movf	___lwdiv@divisor+1,w
  1586     0390  0279               	subwf	___lwdiv@dividend+1,w
  1587     0391  1D03               	skipz
  1588     0392  2B95               	goto	u485
  1589     0393  0876               	movf	___lwdiv@divisor,w
  1590     0394  0278               	subwf	___lwdiv@dividend,w
  1591     0395                     u485:
  1592     0395  1C03               	skipc
  1593     0396  2B98               	goto	u481
  1594     0397  2B99               	goto	u480
  1595     0398                     u481:
  1596     0398  2BA0               	goto	l967
  1597     0399                     u480:
  1598     0399                     l963:
  1599     0399  0876               	movf	___lwdiv@divisor,w
  1600     039A  02F8               	subwf	___lwdiv@dividend,f
  1601     039B  0877               	movf	___lwdiv@divisor+1,w
  1602     039C  1C03               	skipc
  1603     039D  03F9               	decf	___lwdiv@dividend+1,f
  1604     039E  02F9               	subwf	___lwdiv@dividend+1,f
  1605     039F                     l965:
  1606     039F  147A               	bsf	___lwdiv@quotient,0
  1607     03A0                     l967:
  1608     03A0  3001               	movlw	1
  1609     03A1                     u495:
  1610     03A1  1003               	clrc
  1611     03A2  0CF7               	rrf	___lwdiv@divisor+1,f
  1612     03A3  0CF6               	rrf	___lwdiv@divisor,f
  1613     03A4  3EFF               	addlw	-1
  1614     03A5  1D03               	skipz
  1615     03A6  2BA1               	goto	u495
  1616     03A7                     l969:
  1617     03A7  3001               	movlw	1
  1618     03A8  02FC               	subwf	___lwdiv@counter,f
  1619     03A9  1D03               	btfss	3,2
  1620     03AA  2BAC               	goto	u501
  1621     03AB  2BAD               	goto	u500
  1622     03AC                     u501:
  1623     03AC  2B88               	goto	l961
  1624     03AD                     u500:
  1625     03AD                     l971:
  1626     03AD  087B               	movf	___lwdiv@quotient+1,w
  1627     03AE  00F7               	movwf	?___lwdiv+1
  1628     03AF  087A               	movf	___lwdiv@quotient,w
  1629     03B0  00F6               	movwf	?___lwdiv
  1630     03B1                     l491:
  1631     03B1  0008               	return
  1632     03B2                     __end_of___lwdiv:
  1633                           
  1634                           	psect	text5
  1635     0460                     __ptext5:	
  1636 ;; *************** function _init *****************
  1637 ;; Defined at:
  1638 ;;		line 57 in file "ADC_PWM_task.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1652 ;;      Params:         0       0       0       0       0
  1653 ;;      Locals:         0       0       0       0       0
  1654 ;;      Temps:          0       0       0       0       0
  1655 ;;      Totals:         0       0       0       0       0
  1656 ;;Total ram usage:        0 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; Hardware stack levels required when called: 2
  1659 ;; This function calls:
  1660 ;;		_cmd
  1661 ;;		_delay
  1662 ;; This function is called by:
  1663 ;;		_main
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667     0460                     _init:	
  1668                           ;psect for function _init
  1669                           
  1670     0460                     l975:	
  1671                           ;incstack = 0
  1672                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1673                           
  1674                           
  1675                           ;ADC_PWM_task.c: 58:     TRISC = 0x00;
  1676     0460  1683               	bsf	3,5	;RP0=1, select bank1
  1677     0461  1303               	bcf	3,6	;RP1=0, select bank1
  1678     0462  0187               	clrf	7	;volatile
  1679                           
  1680                           ;ADC_PWM_task.c: 59:     TRISD = 0x00;
  1681     0463  0188               	clrf	8	;volatile
  1682     0464                     l977:
  1683                           
  1684                           ;ADC_PWM_task.c: 60:     TRISA = 0x05;
  1685     0464  3005               	movlw	5
  1686     0465  0085               	movwf	5	;volatile
  1687     0466                     l979:
  1688                           
  1689                           ;ADC_PWM_task.c: 61:     ADCON0 = 0x81;
  1690     0466  3081               	movlw	129
  1691     0467  1283               	bcf	3,5	;RP0=0, select bank0
  1692     0468  1303               	bcf	3,6	;RP1=0, select bank0
  1693     0469  009F               	movwf	31	;volatile
  1694     046A                     l981:
  1695                           
  1696                           ;ADC_PWM_task.c: 62:     ADCON1 = 0x8E;
  1697     046A  308E               	movlw	142
  1698     046B  1683               	bsf	3,5	;RP0=1, select bank1
  1699     046C  1303               	bcf	3,6	;RP1=0, select bank1
  1700     046D  009F               	movwf	31	;volatile
  1701     046E                     l983:
  1702                           
  1703                           ;ADC_PWM_task.c: 63:     CCP1CON = 0x3C;
  1704     046E  303C               	movlw	60
  1705     046F  1283               	bcf	3,5	;RP0=0, select bank0
  1706     0470  1303               	bcf	3,6	;RP1=0, select bank0
  1707     0471  0097               	movwf	23	;volatile
  1708     0472                     l985:
  1709                           
  1710                           ;ADC_PWM_task.c: 64:     CCPR1L = 0x2E;
  1711     0472  302E               	movlw	46
  1712     0473  0095               	movwf	21	;volatile
  1713     0474                     l987:
  1714                           
  1715                           ;ADC_PWM_task.c: 65:     T2CON = 0x06;
  1716     0474  3006               	movlw	6
  1717     0475  0092               	movwf	18	;volatile
  1718     0476                     l989:
  1719                           
  1720                           ;ADC_PWM_task.c: 67:     PR2 = 0x9B;
  1721     0476  309B               	movlw	155
  1722     0477  1683               	bsf	3,5	;RP0=1, select bank1
  1723     0478  1303               	bcf	3,6	;RP1=0, select bank1
  1724     0479  0092               	movwf	18	;volatile
  1725     047A                     l991:
  1726                           
  1727                           ;ADC_PWM_task.c: 68:     cmd(0x38);
  1728     047A  3038               	movlw	56
  1729     047B  120A  118A  2331  120A  118A  	fcall	_cmd
  1730     0480                     l993:
  1731                           
  1732                           ;ADC_PWM_task.c: 69:     delay(100);
  1733     0480  3064               	movlw	100
  1734     0481  00F0               	movwf	delay@x
  1735     0482  3000               	movlw	0
  1736     0483  00F1               	movwf	delay@x+1
  1737     0484  120A  118A  22DF  120A  118A  	fcall	_delay
  1738     0489                     l995:
  1739                           
  1740                           ;ADC_PWM_task.c: 70:     cmd(0x38);
  1741     0489  3038               	movlw	56
  1742     048A  120A  118A  2331  120A  118A  	fcall	_cmd
  1743     048F                     l997:
  1744                           
  1745                           ;ADC_PWM_task.c: 71:     delay(100);
  1746     048F  3064               	movlw	100
  1747     0490  00F0               	movwf	delay@x
  1748     0491  3000               	movlw	0
  1749     0492  00F1               	movwf	delay@x+1
  1750     0493  120A  118A  22DF  120A  118A  	fcall	_delay
  1751     0498                     l999:
  1752                           
  1753                           ;ADC_PWM_task.c: 72:     cmd(0x38);
  1754     0498  3038               	movlw	56
  1755     0499  120A  118A  2331  120A  118A  	fcall	_cmd
  1756     049E                     l1001:
  1757                           
  1758                           ;ADC_PWM_task.c: 73:     delay(100);
  1759     049E  3064               	movlw	100
  1760     049F  00F0               	movwf	delay@x
  1761     04A0  3000               	movlw	0
  1762     04A1  00F1               	movwf	delay@x+1
  1763     04A2  120A  118A  22DF  120A  118A  	fcall	_delay
  1764     04A7                     l1003:
  1765                           
  1766                           ;ADC_PWM_task.c: 74:     cmd(0x38);
  1767     04A7  3038               	movlw	56
  1768     04A8  120A  118A  2331  120A  118A  	fcall	_cmd
  1769     04AD                     l1005:
  1770                           
  1771                           ;ADC_PWM_task.c: 75:     delay(100);
  1772     04AD  3064               	movlw	100
  1773     04AE  00F0               	movwf	delay@x
  1774     04AF  3000               	movlw	0
  1775     04B0  00F1               	movwf	delay@x+1
  1776     04B1  120A  118A  22DF  120A  118A  	fcall	_delay
  1777     04B6                     l1007:
  1778                           
  1779                           ;ADC_PWM_task.c: 76:     cmd(0x0C);
  1780     04B6  300C               	movlw	12
  1781     04B7  120A  118A  2331  120A  118A  	fcall	_cmd
  1782     04BC                     l1009:
  1783                           
  1784                           ;ADC_PWM_task.c: 77:     delay(100);
  1785     04BC  3064               	movlw	100
  1786     04BD  00F0               	movwf	delay@x
  1787     04BE  3000               	movlw	0
  1788     04BF  00F1               	movwf	delay@x+1
  1789     04C0  120A  118A  22DF  120A  118A  	fcall	_delay
  1790     04C5                     l1011:
  1791                           
  1792                           ;ADC_PWM_task.c: 78:     cmd(0x06);
  1793     04C5  3006               	movlw	6
  1794     04C6  120A  118A  2331  120A  118A  	fcall	_cmd
  1795     04CB                     l1013:
  1796                           
  1797                           ;ADC_PWM_task.c: 79:     delay(100);
  1798     04CB  3064               	movlw	100
  1799     04CC  00F0               	movwf	delay@x
  1800     04CD  3000               	movlw	0
  1801     04CE  00F1               	movwf	delay@x+1
  1802     04CF  120A  118A  22DF  120A  118A  	fcall	_delay
  1803     04D4                     l1015:
  1804                           
  1805                           ;ADC_PWM_task.c: 80:     cmd(0x01);
  1806     04D4  3001               	movlw	1
  1807     04D5  120A  118A  2331  120A  118A  	fcall	_cmd
  1808     04DA                     l1017:
  1809                           
  1810                           ;ADC_PWM_task.c: 81:     delay(100);
  1811     04DA  3064               	movlw	100
  1812     04DB  00F0               	movwf	delay@x
  1813     04DC  3000               	movlw	0
  1814     04DD  00F1               	movwf	delay@x+1
  1815     04DE  120A  118A  22DF  120A  118A  	fcall	_delay
  1816     04E3                     l93:
  1817     04E3  0008               	return
  1818     04E4                     __end_of_init:
  1819                           
  1820                           	psect	text6
  1821     0331                     __ptext6:	
  1822 ;; *************** function _cmd *****************
  1823 ;; Defined at:
  1824 ;;		line 139 in file "ADC_PWM_task.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  i               1    wreg     unsigned char 
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;  i               1    2[COMMON] unsigned char 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      void 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1838 ;;      Params:         0       0       0       0       0
  1839 ;;      Locals:         1       0       0       0       0
  1840 ;;      Temps:          0       0       0       0       0
  1841 ;;      Totals:         1       0       0       0       0
  1842 ;;Total ram usage:        1 bytes
  1843 ;; Hardware stack levels used: 1
  1844 ;; Hardware stack levels required when called: 1
  1845 ;; This function calls:
  1846 ;;		_delay
  1847 ;; This function is called by:
  1848 ;;		_main
  1849 ;;		_init
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853     0331                     _cmd:	
  1854                           ;psect for function _cmd
  1855                           
  1856                           
  1857                           ;incstack = 0
  1858                           ; Regs used in _cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1859                           ;cmd@i stored from wreg
  1860     0331  00F2               	movwf	cmd@i
  1861     0332                     l915:
  1862                           
  1863                           ;ADC_PWM_task.c: 140:     PORTC &= 0xF7;
  1864     0332  30F7               	movlw	247
  1865     0333  00FF               	movwf	btemp+1
  1866     0334  087F               	movf	btemp+1,w
  1867     0335  1283               	bcf	3,5	;RP0=0, select bank0
  1868     0336  1303               	bcf	3,6	;RP1=0, select bank0
  1869     0337  0587               	andwf	7,f	;volatile
  1870     0338                     l917:
  1871                           
  1872                           ;ADC_PWM_task.c: 141:     PORTD = i;
  1873     0338  0872               	movf	cmd@i,w
  1874     0339  0088               	movwf	8	;volatile
  1875     033A                     l919:
  1876                           
  1877                           ;ADC_PWM_task.c: 142:     PORTC |= 0x01;
  1878     033A  1407               	bsf	7,0	;volatile
  1879     033B                     l921:
  1880                           
  1881                           ;ADC_PWM_task.c: 143:     PORTC &= ~(0x01);
  1882     033B  30FE               	movlw	254
  1883     033C  00FF               	movwf	btemp+1
  1884     033D  087F               	movf	btemp+1,w
  1885     033E  0587               	andwf	7,f	;volatile
  1886     033F                     l923:
  1887                           
  1888                           ;ADC_PWM_task.c: 144:     delay(100);
  1889     033F  3064               	movlw	100
  1890     0340  00F0               	movwf	delay@x
  1891     0341  3000               	movlw	0
  1892     0342  00F1               	movwf	delay@x+1
  1893     0343  120A  118A  22DF  120A  118A  	fcall	_delay
  1894     0348                     l107:
  1895     0348  0008               	return
  1896     0349                     __end_of_cmd:
  1897                           
  1898                           	psect	text7
  1899     02DF                     __ptext7:	
  1900 ;; *************** function _delay *****************
  1901 ;; Defined at:
  1902 ;;		line 153 in file "ADC_PWM_task.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  x               2    0[COMMON] unsigned int 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, status,2, status,0
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1916 ;;      Params:         2       0       0       0       0
  1917 ;;      Locals:         0       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0
  1919 ;;      Totals:         2       0       0       0       0
  1920 ;;Total ram usage:        2 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		_init
  1926 ;;		_cmd
  1927 ;;		_data
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931     02DF                     _delay:	
  1932                           ;psect for function _delay
  1933                           
  1934     02DF                     l911:	
  1935                           ;incstack = 0
  1936                           ; Regs used in _delay: [wreg+status,2+status,0]
  1937                           
  1938     02DF                     l913:	
  1939                           ;ADC_PWM_task.c: 154:     while(--x);
  1940                           
  1941     02DF  3001               	movlw	1
  1942     02E0  02F0               	subwf	delay@x,f
  1943     02E1  3000               	movlw	0
  1944     02E2  1C03               	skipc
  1945     02E3  03F1               	decf	delay@x+1,f
  1946     02E4  02F1               	subwf	delay@x+1,f
  1947     02E5  0870               	movf	delay@x,w
  1948     02E6  0471               	iorwf	delay@x+1,w
  1949     02E7  1D03               	btfss	3,2
  1950     02E8  2AEA               	goto	u391
  1951     02E9  2AEB               	goto	u390
  1952     02EA                     u391:
  1953     02EA  2ADF               	goto	l913
  1954     02EB                     u390:
  1955     02EB                     l116:
  1956     02EB  0008               	return
  1957     02EC                     __end_of_delay:
  1958                           
  1959                           	psect	text8
  1960     03B2                     __ptext8:	
  1961 ;; *************** function ___lmul *****************
  1962 ;; Defined at:
  1963 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  multiplier      4    0[COMMON] unsigned long 
  1966 ;;  multiplicand    4    4[COMMON] unsigned long 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  product         4    9[COMMON] unsigned long 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  4    0[COMMON] unsigned long 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1978 ;;      Params:         8       0       0       0       0
  1979 ;;      Locals:         4       0       0       0       0
  1980 ;;      Temps:          1       0       0       0       0
  1981 ;;      Totals:        13       0       0       0       0
  1982 ;;Total ram usage:       13 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_main
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991     03B2                     ___lmul:	
  1992                           ;psect for function ___lmul
  1993                           
  1994     03B2                     l1045:	
  1995                           ;incstack = 0
  1996                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1997                           
  1998     03B2  3000               	movlw	0
  1999     03B3  00FC               	movwf	___lmul@product+3
  2000     03B4  3000               	movlw	0
  2001     03B5  00FB               	movwf	___lmul@product+2
  2002     03B6  3000               	movlw	0
  2003     03B7  00FA               	movwf	___lmul@product+1
  2004     03B8  3000               	movlw	0
  2005     03B9  00F9               	movwf	___lmul@product
  2006     03BA                     l1047:
  2007     03BA  1C70               	btfss	___lmul@multiplier,0
  2008     03BB  2BBD               	goto	u551
  2009     03BC  2BBE               	goto	u550
  2010     03BD                     u551:
  2011     03BD  2BD5               	goto	l1051
  2012     03BE                     u550:
  2013     03BE                     l1049:
  2014     03BE  0874               	movf	___lmul@multiplicand,w
  2015     03BF  07F9               	addwf	___lmul@product,f
  2016     03C0  0875               	movf	___lmul@multiplicand+1,w
  2017     03C1  1103               	clrz
  2018     03C2  1803               	skipnc
  2019     03C3  3E01               	addlw	1
  2020     03C4  1903               	skipnz
  2021     03C5  2BC7               	goto	u561
  2022     03C6  07FA               	addwf	___lmul@product+1,f
  2023     03C7                     u561:
  2024     03C7  0876               	movf	___lmul@multiplicand+2,w
  2025     03C8  1103               	clrz
  2026     03C9  1803               	skipnc
  2027     03CA  3E01               	addlw	1
  2028     03CB  1903               	skipnz
  2029     03CC  2BCE               	goto	u562
  2030     03CD  07FB               	addwf	___lmul@product+2,f
  2031     03CE                     u562:
  2032     03CE  0877               	movf	___lmul@multiplicand+3,w
  2033     03CF  1103               	clrz
  2034     03D0  1803               	skipnc
  2035     03D1  3E01               	addlw	1
  2036     03D2  1903               	skipnz
  2037     03D3  2BD5               	goto	u563
  2038     03D4  07FC               	addwf	___lmul@product+3,f
  2039     03D5                     u563:
  2040     03D5                     l1051:
  2041     03D5  3001               	movlw	1
  2042     03D6  00F8               	movwf	??___lmul
  2043     03D7                     u575:
  2044     03D7  1003               	clrc
  2045     03D8  0DF4               	rlf	___lmul@multiplicand,f
  2046     03D9  0DF5               	rlf	___lmul@multiplicand+1,f
  2047     03DA  0DF6               	rlf	___lmul@multiplicand+2,f
  2048     03DB  0DF7               	rlf	___lmul@multiplicand+3,f
  2049     03DC  0BF8               	decfsz	??___lmul,f
  2050     03DD  2BD7               	goto	u575
  2051     03DE                     l1053:
  2052     03DE  3001               	movlw	1
  2053     03DF                     u585:
  2054     03DF  1003               	clrc
  2055     03E0  0CF3               	rrf	___lmul@multiplier+3,f
  2056     03E1  0CF2               	rrf	___lmul@multiplier+2,f
  2057     03E2  0CF1               	rrf	___lmul@multiplier+1,f
  2058     03E3  0CF0               	rrf	___lmul@multiplier,f
  2059     03E4  3EFF               	addlw	-1
  2060     03E5  1D03               	skipz
  2061     03E6  2BDF               	goto	u585
  2062     03E7  0873               	movf	___lmul@multiplier+3,w
  2063     03E8  0472               	iorwf	___lmul@multiplier+2,w
  2064     03E9  0471               	iorwf	___lmul@multiplier+1,w
  2065     03EA  0470               	iorwf	___lmul@multiplier,w
  2066     03EB  1D03               	skipz
  2067     03EC  2BEE               	goto	u591
  2068     03ED  2BEF               	goto	u590
  2069     03EE                     u591:
  2070     03EE  2BBA               	goto	l1047
  2071     03EF                     u590:
  2072     03EF                     l1055:
  2073     03EF  087C               	movf	___lmul@product+3,w
  2074     03F0  00F3               	movwf	?___lmul+3
  2075     03F1  087B               	movf	___lmul@product+2,w
  2076     03F2  00F2               	movwf	?___lmul+2
  2077     03F3  087A               	movf	___lmul@product+1,w
  2078     03F4  00F1               	movwf	?___lmul+1
  2079     03F5  0879               	movf	___lmul@product,w
  2080     03F6  00F0               	movwf	?___lmul
  2081     03F7                     l225:
  2082     03F7  0008               	return
  2083     03F8                     __end_of___lmul:
  2084                           
  2085                           	psect	text9
  2086     03F8                     __ptext9:	
  2087 ;; *************** function ___lldiv *****************
  2088 ;; Defined at:
  2089 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  divisor         4    0[BANK0 ] unsigned long 
  2092 ;;  dividend        4    4[BANK0 ] unsigned long 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  quotient        4    8[BANK0 ] unsigned long 
  2095 ;;  counter         1   12[BANK0 ] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  4    0[BANK0 ] unsigned long 
  2098 ;; Registers used:
  2099 ;;		wreg, status,2, status,0, btemp+1
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2105 ;;      Params:         0       8       0       0       0
  2106 ;;      Locals:         0       5       0       0       0
  2107 ;;      Temps:          1       0       0       0       0
  2108 ;;      Totals:         1      13       0       0       0
  2109 ;;Total ram usage:       14 bytes
  2110 ;; Hardware stack levels used: 1
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_main
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118     03F8                     ___lldiv:	
  2119                           ;psect for function ___lldiv
  2120                           
  2121     03F8                     l1059:	
  2122                           ;incstack = 0
  2123                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  2124                           
  2125     03F8  3000               	movlw	0
  2126     03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2127     03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2128     03FB  00C4               	movwf	___lldiv@quotient+3
  2129     03FC  3000               	movlw	0
  2130     03FD  00C3               	movwf	___lldiv@quotient+2
  2131     03FE  3000               	movlw	0
  2132     03FF  00C2               	movwf	___lldiv@quotient+1
  2133     0400  3000               	movlw	0
  2134     0401  00C1               	movwf	___lldiv@quotient
  2135     0402  083C               	movf	___lldiv@divisor+3,w
  2136     0403  043B               	iorwf	___lldiv@divisor+2,w
  2137     0404  043A               	iorwf	___lldiv@divisor+1,w
  2138     0405  0439               	iorwf	___lldiv@divisor,w
  2139     0406  1903               	skipnz
  2140     0407  2C09               	goto	u601
  2141     0408  2C0A               	goto	u600
  2142     0409                     u601:
  2143     0409  2C57               	goto	l1081
  2144     040A                     u600:
  2145     040A                     l1061:
  2146     040A  01C5               	clrf	___lldiv@counter
  2147     040B  0AC5               	incf	___lldiv@counter,f
  2148     040C  2C1A               	goto	l1067
  2149     040D                     l1063:
  2150     040D  3001               	movlw	1
  2151     040E  00FD               	movwf	??___lldiv
  2152     040F                     u615:
  2153     040F  1003               	clrc
  2154     0410  0DB9               	rlf	___lldiv@divisor,f
  2155     0411  0DBA               	rlf	___lldiv@divisor+1,f
  2156     0412  0DBB               	rlf	___lldiv@divisor+2,f
  2157     0413  0DBC               	rlf	___lldiv@divisor+3,f
  2158     0414  0BFD               	decfsz	??___lldiv,f
  2159     0415  2C0F               	goto	u615
  2160     0416                     l1065:
  2161     0416  3001               	movlw	1
  2162     0417  00FF               	movwf	btemp+1
  2163     0418  087F               	movf	btemp+1,w
  2164     0419  07C5               	addwf	___lldiv@counter,f
  2165     041A                     l1067:
  2166     041A  1FBC               	btfss	___lldiv@divisor+3,7
  2167     041B  2C1D               	goto	u621
  2168     041C  2C1E               	goto	u620
  2169     041D                     u621:
  2170     041D  2C0D               	goto	l1063
  2171     041E                     u620:
  2172     041E                     l1069:
  2173     041E  3001               	movlw	1
  2174     041F  00FD               	movwf	??___lldiv
  2175     0420                     u635:
  2176     0420  1003               	clrc
  2177     0421  0DC1               	rlf	___lldiv@quotient,f
  2178     0422  0DC2               	rlf	___lldiv@quotient+1,f
  2179     0423  0DC3               	rlf	___lldiv@quotient+2,f
  2180     0424  0DC4               	rlf	___lldiv@quotient+3,f
  2181     0425  0BFD               	decfsz	??___lldiv,f
  2182     0426  2C20               	goto	u635
  2183     0427                     l1071:
  2184     0427  083C               	movf	___lldiv@divisor+3,w
  2185     0428  0240               	subwf	___lldiv@dividend+3,w
  2186     0429  1D03               	skipz
  2187     042A  2C35               	goto	u645
  2188     042B  083B               	movf	___lldiv@divisor+2,w
  2189     042C  023F               	subwf	___lldiv@dividend+2,w
  2190     042D  1D03               	skipz
  2191     042E  2C35               	goto	u645
  2192     042F  083A               	movf	___lldiv@divisor+1,w
  2193     0430  023E               	subwf	___lldiv@dividend+1,w
  2194     0431  1D03               	skipz
  2195     0432  2C35               	goto	u645
  2196     0433  0839               	movf	___lldiv@divisor,w
  2197     0434  023D               	subwf	___lldiv@dividend,w
  2198     0435                     u645:
  2199     0435  1C03               	skipc
  2200     0436  2C38               	goto	u641
  2201     0437  2C39               	goto	u640
  2202     0438                     u641:
  2203     0438  2C48               	goto	l1077
  2204     0439                     u640:
  2205     0439                     l1073:
  2206     0439  0839               	movf	___lldiv@divisor,w
  2207     043A  02BD               	subwf	___lldiv@dividend,f
  2208     043B  083A               	movf	___lldiv@divisor+1,w
  2209     043C  1C03               	skipc
  2210     043D  0F3A               	incfsz	___lldiv@divisor+1,w
  2211     043E  02BE               	subwf	___lldiv@dividend+1,f
  2212     043F  083B               	movf	___lldiv@divisor+2,w
  2213     0440  1C03               	skipc
  2214     0441  0F3B               	incfsz	___lldiv@divisor+2,w
  2215     0442  02BF               	subwf	___lldiv@dividend+2,f
  2216     0443  083C               	movf	___lldiv@divisor+3,w
  2217     0444  1C03               	skipc
  2218     0445  0F3C               	incfsz	___lldiv@divisor+3,w
  2219     0446  02C0               	subwf	___lldiv@dividend+3,f
  2220     0447                     l1075:
  2221     0447  1441               	bsf	___lldiv@quotient,0
  2222     0448                     l1077:
  2223     0448  3001               	movlw	1
  2224     0449                     u655:
  2225     0449  1003               	clrc
  2226     044A  0CBC               	rrf	___lldiv@divisor+3,f
  2227     044B  0CBB               	rrf	___lldiv@divisor+2,f
  2228     044C  0CBA               	rrf	___lldiv@divisor+1,f
  2229     044D  0CB9               	rrf	___lldiv@divisor,f
  2230     044E  3EFF               	addlw	-1
  2231     044F  1D03               	skipz
  2232     0450  2C49               	goto	u655
  2233     0451                     l1079:
  2234     0451  3001               	movlw	1
  2235     0452  02C5               	subwf	___lldiv@counter,f
  2236     0453  1D03               	btfss	3,2
  2237     0454  2C56               	goto	u661
  2238     0455  2C57               	goto	u660
  2239     0456                     u661:
  2240     0456  2C1E               	goto	l1069
  2241     0457                     u660:
  2242     0457                     l1081:
  2243     0457  0844               	movf	___lldiv@quotient+3,w
  2244     0458  00BC               	movwf	?___lldiv+3
  2245     0459  0843               	movf	___lldiv@quotient+2,w
  2246     045A  00BB               	movwf	?___lldiv+2
  2247     045B  0842               	movf	___lldiv@quotient+1,w
  2248     045C  00BA               	movwf	?___lldiv+1
  2249     045D  0841               	movf	___lldiv@quotient,w
  2250     045E  00B9               	movwf	?___lldiv
  2251     045F                     l247:
  2252     045F  0008               	return
  2253     0460                     __end_of___lldiv:
  2254                           
  2255                           	psect	text10
  2256     02D0                     __ptext10:	
  2257 ;; *************** function _UART_newline *****************
  2258 ;; Defined at:
  2259 ;;		line 169 in file "ADC_PWM_task.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2273 ;;      Params:         0       0       0       0       0
  2274 ;;      Locals:         0       0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0
  2276 ;;      Totals:         0       0       0       0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_main
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286     02D0                     _UART_newline:	
  2287                           ;psect for function _UART_newline
  2288                           
  2289     02D0                     l1043:	
  2290                           ;incstack = 0
  2291                           ; Regs used in _UART_newline: [wreg]
  2292                           
  2293                           
  2294                           ;ADC_PWM_task.c: 170:     TXREG = 0x0A;
  2295     02D0  300A               	movlw	10
  2296     02D1  1283               	bcf	3,5	;RP0=0, select bank0
  2297     02D2  1303               	bcf	3,6	;RP1=0, select bank0
  2298     02D3  0099               	movwf	25	;volatile
  2299                           
  2300                           ;ADC_PWM_task.c: 171:     TXREG = 0x0D;
  2301     02D4  300D               	movlw	13
  2302     02D5  0099               	movwf	25	;volatile
  2303     02D6                     l125:
  2304     02D6  0008               	return
  2305     02D7                     __end_of_UART_newline:
  2306                           
  2307                           	psect	text11
  2308     02FA                     __ptext11:	
  2309 ;; *************** function _UART_init *****************
  2310 ;; Defined at:
  2311 ;;		line 156 in file "ADC_PWM_task.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;		None
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;		None
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      void 
  2318 ;; Registers used:
  2319 ;;		wreg
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2325 ;;      Params:         0       0       0       0       0
  2326 ;;      Locals:         0       0       0       0       0
  2327 ;;      Temps:          0       0       0       0       0
  2328 ;;      Totals:         0       0       0       0       0
  2329 ;;Total ram usage:        0 bytes
  2330 ;; Hardware stack levels used: 1
  2331 ;; This function calls:
  2332 ;;		Nothing
  2333 ;; This function is called by:
  2334 ;;		_main
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338     02FA                     _UART_init:	
  2339                           ;psect for function _UART_init
  2340                           
  2341     02FA                     l1019:	
  2342                           ;incstack = 0
  2343                           ; Regs used in _UART_init: [wreg]
  2344                           
  2345                           
  2346                           ;ADC_PWM_task.c: 160:     TRISC = 0xC0;
  2347     02FA  30C0               	movlw	192
  2348     02FB  1683               	bsf	3,5	;RP0=1, select bank1
  2349     02FC  1303               	bcf	3,6	;RP1=0, select bank1
  2350     02FD  0087               	movwf	7	;volatile
  2351                           
  2352                           ;ADC_PWM_task.c: 161:     TXSTA = 0x20;
  2353     02FE  3020               	movlw	32
  2354     02FF  0098               	movwf	24	;volatile
  2355                           
  2356                           ;ADC_PWM_task.c: 162:     RCSTA = 0x90;
  2357     0300  3090               	movlw	144
  2358     0301  1283               	bcf	3,5	;RP0=0, select bank0
  2359     0302  1303               	bcf	3,6	;RP1=0, select bank0
  2360     0303  0098               	movwf	24	;volatile
  2361                           
  2362                           ;ADC_PWM_task.c: 163:     SPBRG = 0x20;
  2363     0304  3020               	movlw	32
  2364     0305  1683               	bsf	3,5	;RP0=1, select bank1
  2365     0306  1303               	bcf	3,6	;RP1=0, select bank1
  2366     0307  0099               	movwf	25	;volatile
  2367     0308                     l119:
  2368     0308  0008               	return
  2369     0309                     __end_of_UART_init:
  2370     007E                     btemp	set	126	;btemp
  2371     007E                     wtemp0	set	126
  2372                           
  2373                           	psect	config
  2374                           
  2375                           ;Config register CONFIG @ 0x2007
  2376                           ;	Oscillator Selection bits
  2377                           ;	FOSC = HS, HS oscillator
  2378                           ;	Watchdog Timer Enable bit
  2379                           ;	WDTE = OFF, WDT disabled
  2380                           ;	Power-up Timer Enable bit
  2381                           ;	PWRTE = OFF, PWRT disabled
  2382                           ;	Brown-out Reset Enable bit
  2383                           ;	BOREN = OFF, BOR disabled
  2384                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2385                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2386                           ;	Data EEPROM Memory Code Protection bit
  2387                           ;	CPD = OFF, Data EEPROM code protection off
  2388                           ;	Flash Program Memory Write Enable bits
  2389                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2390                           ;	In-Circuit Debugger Mode bit
  2391                           ;	DEBUG = 0x1, unprogrammed default
  2392                           ;	Flash Program Memory Code Protection bit
  2393                           ;	CP = OFF, Code protection off
  2394     2007                     	org	8199
  2395     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     21      60
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lldiv
    _output->___lwdiv
    _data->_delay
    ___lwdiv->___wmul
    _init->_cmd
    _cmd->_delay
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    _main->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    6038
                                             13 BANK0      8     8      0
                          _UART_init
                       _UART_newline
                            ___lldiv
                             ___lmul
                                _cmd
                               _data
                               _init
                             _output
 ---------------------------------------------------------------------------------
 (1) _output                                               8     6      2    2590
                                              0 BANK0      8     6      2
                            ___lwdiv
                             ___wmul
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 1     1      0     728
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1004
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              6 COMMON     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    1434
                                _cmd
                              _delay
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  1     1      0     728
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     0      2     706
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     314
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_newline                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
   _UART_newline
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _cmd
     _delay
   _data
     _delay
   _init
     _cmd
     _delay
   _output
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      3C       5       75.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4A      12        0.0%
ABS                  0      0      4A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue May 28 13:45:03 2024

                      _n 0038                        pc 0002                       l83 06F9  
                     l93 04E3                       l78 066C                       _d0 0030  
                     _d1 0032                       _d2 0034                       _d3 0036  
                     fsr 0004      ___wmul@multiplicand 0072                      l110 0330  
                    l104 065C                      l107 0348                      l211 0355  
                    l116 02EB                      l125 02D6                      l213 036D  
                    l119 0308                      l225 03F7                      l247 045F  
                    l491 03B1                      l911 02DF                      l913 02DF  
                    l921 033B                      l923 033F                      l915 0332  
                    l931 0323                      l917 0338                      l941 035C  
                    l933 0327                      l925 031D                      l919 033A  
                    l951 0370                      l943 0363                      l935 0349  
                    l927 0320                      l961 0388                      l953 0376  
                    l945 0369                      l937 034B                      l929 0322  
                    l963 0399                      l955 0379                      l971 03AD  
                    l939 034F                      l981 046A                      l965 039F  
                    l957 0380                      l949 036E                      l991 047A  
                    l983 046E                      l975 0460                      l967 03A0  
                    l959 0384                      l993 0480                      l985 0472  
                    l977 0464                      l969 03A7                      l995 0489  
                    l987 0474                      l979 0466                      l997 048F  
                    l989 0476                      l999 0498                      u400 034F  
                    u401 034E                      u500 03AD                      u501 03AC  
                    u430 0369                      u510 05AF                      _PR2 0092  
                    u431 0368                      u415 0356                      u511 05AE  
                    u600 040A                      u440 0376                      u520 05D8  
                    u601 0409                      u441 0375                      u425 035D  
                    u521 05D7                      u530 0600                      u531 05FF  
                    u620 041E                      u460 0388                      u540 0625  
                    u700 06E0                      u621 041D                      u461 0387  
                    u541 0624                      u701 06DF                      u550 03BE  
                    u390 02EB                      u710 06FD                      u615 040F  
                    u551 03BD                      u391 02EA                      u455 037A  
                    u711 06FC                      u640 0439                      u480 0399  
                    u720 0731                      u641 0438                      u561 03C7  
                    u481 0398                      u562 03CE                      u730 073B  
                    u635 0420                      u563 03D5                      u475 0389  
                    u731 073C                      u660 0457                      u740 07A3  
                    u732 0741                      u661 0456                      u645 0435  
                    u485 0395                      u741 07A2                      u733 0742  
                    u725 072C                      u590 03EF                      u750 07C1  
                    u670 0670                      u655 0449                      u591 03EE  
                    u575 03D7                      u495 03A1                      u671 066F  
                    u680 06A4                      u585 03DF                      u690 06AE  
                    u755 07BC                      u691 06AF                      u692 06B4  
                    u765 07CA                      u693 06B5                      u685 069F  
                    u777 07DB                      _ch0 0055                      _ch1 004E  
                    _cmd 0331                      _val 0020                      fsr0 0004  
                    indf 0000                     l1001 049E                     l1011 04C5  
                   l1003 04A7                     l1013 04CB                     l1005 04AD  
                   l1021 04E4                     l1015 04D4                     l1007 04B6  
                   l1031 05D8                     l1023 0560                     l1111 06E0  
                   l1017 04DA                     l1009 04BC                     l1041 0641  
                   l1033 05FA                     l1025 05A9                     l1121 06FD  
                   l1113 06E9                     l1105 06CA                     l1019 02FA  
                   l1043 02D0                     l1051 03D5                     l1035 0600  
                   l1027 05AF                     l1123 071B                     l1115 06EE  
                   l1107 06D4                     l1061 040A                     l1053 03DE  
                   l1045 03B2                     l1037 061F                     l1029 05D2  
                   l1141 07A3                     l1125 074E                     l1117 06F2  
                   l1109 06DA                     l1071 0427                     l1063 040D  
                   l1055 03EF                     l1047 03BA                     l1039 0625  
                   l1143 07AC                     l1135 078D                     l1127 0784  
                   l1119 06F6                     l1073 0439                     l1065 0416  
                   l1081 0457                     l1049 03BE                     l1145 07B1  
                   l1137 0797                     l1129 078A                     l1075 0447  
                   l1067 041A                     l1059 03F8                     l1147 07C6  
                   l1139 079D                     l1091 066B                     l1077 0448  
                   l1069 041E                     l1149 07D3                     l1093 0670  
                   l1085 065D                     l1079 0451                     l1095 068E  
                   l1087 0662                     l1097 06C1                     l1089 0667  
                   ?_cmd 0070                     l1099 06C7                     _data 031C  
                   cmd@i 0072                     _main 065D                     _init 0460  
                   btemp 007E                     _volt 0024                     start 0000  
                  ??_cmd 0072                    ?_data 0070                    ?_main 0070  
                  ?_init 0070          __end_of___lldiv 0460                    _T2CON 0012  
        __end_of___lwdiv 03B2                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _TXREG 0019  
                  _TXSTA 0098      ___lmul@multiplicand 0074                    _delay 02DF  
                  data@i 0072                    _hival 0028                    _loval 002C  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07E6             __end_of_data 0331             __end_of_main 07E6  
           __end_of_init 04E4                   ??_data 0072                   ??_main 0046  
                 ??_init 0073                   ?_delay 0070                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 _CCPR1L 0015                   ___lmul 03B2                   ___wmul 0349  
      __end_of_UART_init 0309                ??___lldiv 007D                ??___lwdiv 007A  
                 delay@x 0070                   _output 04E4  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 02EC            __end_of_delay 02EC  
                ??_delay 0072               __pbssBANK0 0020               __pmaintext 065D  
                ?___lmul 0070                  ?___wmul 0070                  _CCP1CON 0017  
         ___lmul@product 0079                  ?_output 0039                  ___lldiv 03F8  
                ___lwdiv 036E                  __ptext1 04E4                  __ptext2 031C  
                __ptext3 0349                  __ptext4 036E                  __ptext5 0460  
                __ptext6 0331                  __ptext7 02DF                  __ptext8 03B2  
                __ptext9 03F8            ?_UART_newline 0070                  clrloop0 02D8  
   end_of_initialization 07FC          ___lldiv@divisor 0039          ___lldiv@counter 0045  
                output@n 0039           ??_UART_newline 0070                _UART_init 02FA  
         __end_of___lmul 03F8           __end_of___wmul 036E               ?_UART_init 0070  
         __end_of_output 065D      start_initialization 07E6              __end_of_cmd 0349  
               ??___lmul 0078                 ??___wmul 0074               init_fetch0 0309  
            __pdataBANK0 004E                 ??_output 003B                ___latbits 0002  
          __pcstackBANK0 0039     __end_of_UART_newline 02D7         ___lwdiv@dividend 0078  
               ?___lldiv 0039                 ?___lwdiv 0076              ??_UART_init 0070  
       ___lwdiv@quotient 007A           ___wmul@product 0074                clear_ram0 02D7  
      ___wmul@multiplier 0070        ___lmul@multiplier 0070          ___lwdiv@divisor 0076  
        ___lwdiv@counter 007C                 __ptext10 02D0                 __ptext11 02FA  
           _UART_newline 02D0                 init_ram0 030D         ___lldiv@dividend 003D  
       ___lldiv@quotient 0041  
