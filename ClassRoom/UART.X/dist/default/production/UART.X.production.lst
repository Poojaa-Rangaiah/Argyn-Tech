

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Feb 06 12:50:14 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166                           
   167                           	psect	nvCOMMON
   168     0070                     __pnvCOMMON:
   169     0070                     _val:
   170     0070                     	ds	2
   171     0018                     _RCSTA	set	24
   172     0019                     _TXREG	set	25
   173     0006                     _PORTB	set	6
   174     0099                     _SPBRG	set	153
   175     0098                     _TXSTA	set	152
   176     0081                     _OPTION_REG	set	129
   177     0087                     _TRISC	set	135
   178     0086                     _TRISB	set	134
   179                           
   180                           	psect	cinit
   181     07FC                     start_initialization:	
   182                           ; #config settings
   183                           
   184     07FC                     __initialization:
   185     07FC                     end_of_initialization:	
   186                           ;End of C runtime variable initialization code
   187                           
   188     07FC                     __end_of__initialization:
   189     07FC  0183               	clrf	3
   190     07FD  120A  118A  2FC2   	ljmp	_main	;jump to C main() function
   191                           
   192                           	psect	cstackCOMMON
   193     0072                     __pcstackCOMMON:
   194     0072                     ?_init:
   195     0072                     ??_init:	
   196                           ; 1 bytes @ 0x0
   197                           
   198     0072                     ?_main:	
   199                           ; 1 bytes @ 0x0
   200                           
   201     0072                     ??_main:	
   202                           ; 1 bytes @ 0x0
   203                           
   204                           
   205                           ; 1 bytes @ 0x0
   206     0072                     	ds	2
   207                           
   208                           	psect	maintext
   209     07C2                     __pmaintext:	
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 15 in file "UART.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   224 ;; Tracked objects:
   225 ;;		On entry : B00/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   229 ;;      Params:         0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0
   231 ;;      Temps:          2       0       0       0       0
   232 ;;      Totals:         2       0       0       0       0
   233 ;;Total ram usage:        2 bytes
   234 ;; Hardware stack levels required when called: 1
   235 ;; This function calls:
   236 ;;		_init
   237 ;; This function is called by:
   238 ;;		Startup code after reset
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242     07C2                     _main:	
   243                           ;psect for function _main
   244                           
   245     07C2                     l595:	
   246                           ;incstack = 0
   247                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   248                           
   249                           
   250                           ;UART.c: 16:     init();
   251     07C2  120A  118A  27AA  120A  118A  	fcall	_init
   252     07C7                     l597:
   253                           
   254                           ;UART.c: 18:         val = PORTB;
   255     07C7  1283               	bcf	3,5	;RP0=0, select bank0
   256     07C8  1303               	bcf	3,6	;RP1=0, select bank0
   257     07C9  0806               	movf	6,w	;volatile
   258     07CA  00F2               	movwf	??_main
   259     07CB  01F3               	clrf	??_main+1
   260     07CC  0872               	movf	??_main,w
   261     07CD  00F0               	movwf	_val
   262     07CE  0873               	movf	??_main+1,w
   263     07CF  00F1               	movwf	_val+1
   264                           
   265                           ;UART.c: 19:         switch(val) {
   266     07D0  2FDD               	goto	l609
   267     07D1                     l599:
   268                           
   269                           ;UART.c: 21:                 TXREG = 'A';
   270     07D1  3041               	movlw	65
   271     07D2  0099               	movwf	25	;volatile
   272                           
   273                           ;UART.c: 22:                 break;
   274     07D3  2FF0               	goto	l611
   275     07D4                     l601:
   276                           
   277                           ;UART.c: 24:                 TXREG = 'B';
   278     07D4  3042               	movlw	66
   279     07D5  0099               	movwf	25	;volatile
   280                           
   281                           ;UART.c: 25:                 break;
   282     07D6  2FF0               	goto	l611
   283     07D7                     l603:
   284                           
   285                           ;UART.c: 27:                 TXREG = 'C';
   286     07D7  3043               	movlw	67
   287     07D8  0099               	movwf	25	;volatile
   288                           
   289                           ;UART.c: 28:                 break;
   290     07D9  2FF0               	goto	l611
   291     07DA                     l605:
   292                           
   293                           ;UART.c: 30:                 TXREG = 'D';
   294     07DA  3044               	movlw	68
   295     07DB  0099               	movwf	25	;volatile
   296                           
   297                           ;UART.c: 31:                 break;
   298     07DC  2FF0               	goto	l611
   299     07DD                     l609:
   300                           
   301                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   302                           ; Switch size 1, requested type "simple"
   303                           ; Number of cases is 1, Range of values is 0 to 0
   304                           ; switch strategies available:
   305                           ; Name         Instructions Cycles
   306                           ; simple_byte            4     3 (average)
   307                           ; direct_byte           11     8 (fixed)
   308                           ; jumptable            260     6 (fixed)
   309                           ;	Chosen strategy is simple_byte
   310     07DD  0871               	movf	_val+1,w
   311     07DE  3A00               	xorlw	0	; case 0
   312     07DF  1903               	skipnz
   313     07E0  2FE2               	goto	l637
   314     07E1  2FF0               	goto	l611
   315     07E2                     l637:
   316                           
   317                           ; Switch size 1, requested type "simple"
   318                           ; Number of cases is 4, Range of values is 112 to 224
   319                           ; switch strategies available:
   320                           ; Name         Instructions Cycles
   321                           ; simple_byte           13     7 (average)
   322                           ; jumptable            263     9 (fixed)
   323                           ;	Chosen strategy is simple_byte
   324     07E2  0870               	movf	_val,w
   325     07E3  3A70               	xorlw	112	; case 112
   326     07E4  1903               	skipnz
   327     07E5  2FDA               	goto	l605
   328     07E6  3AC0               	xorlw	192	; case 176
   329     07E7  1903               	skipnz
   330     07E8  2FD7               	goto	l603
   331     07E9  3A60               	xorlw	96	; case 208
   332     07EA  1903               	skipnz
   333     07EB  2FD4               	goto	l601
   334     07EC  3A30               	xorlw	48	; case 224
   335     07ED  1903               	skipnz
   336     07EE  2FD1               	goto	l599
   337     07EF  2FF0               	goto	l611
   338     07F0                     l611:
   339                           
   340                           ;UART.c: 33:         _delay((unsigned long)((100)*(6000000/4000.0)));
   341     07F0  30C3               	movlw	195
   342     07F1  00F3               	movwf	??_main+1
   343     07F2  30CD               	movlw	205
   344     07F3  00F2               	movwf	??_main
   345     07F4                     u17:
   346     07F4  0BF2               	decfsz	??_main,f
   347     07F5  2FF4               	goto	u17
   348     07F6  0BF3               	decfsz	??_main+1,f
   349     07F7  2FF4               	goto	u17
   350     07F8  2FC7               	goto	l597
   351     07F9  120A  118A  2800   	ljmp	start
   352     07FC                     __end_of_main:
   353                           
   354                           	psect	text1
   355     07AA                     __ptext1:	
   356 ;; *************** function _init *****************
   357 ;; Defined at:
   358 ;;		line 36 in file "UART.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;		None
   363 ;; Return value:  Size  Location     Type
   364 ;;                  1    wreg      void 
   365 ;; Registers used:
   366 ;;		wreg, status,2, status,0, btemp+1
   367 ;; Tracked objects:
   368 ;;		On entry : 0/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   372 ;;      Params:         0       0       0       0       0
   373 ;;      Locals:         0       0       0       0       0
   374 ;;      Temps:          0       0       0       0       0
   375 ;;      Totals:         0       0       0       0       0
   376 ;;Total ram usage:        0 bytes
   377 ;; Hardware stack levels used: 1
   378 ;; This function calls:
   379 ;;		Nothing
   380 ;; This function is called by:
   381 ;;		_main
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385     07AA                     _init:	
   386                           ;psect for function _init
   387                           
   388     07AA                     l583:	
   389                           ;incstack = 0
   390                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1]
   391                           
   392                           
   393                           ;UART.c: 37:     TRISB = 0xF0;
   394     07AA  30F0               	movlw	240
   395     07AB  1683               	bsf	3,5	;RP0=1, select bank1
   396     07AC  1303               	bcf	3,6	;RP1=0, select bank1
   397     07AD  0086               	movwf	6	;volatile
   398                           
   399                           ;UART.c: 38:     TRISC = 0xC0;
   400     07AE  30C0               	movlw	192
   401     07AF  0087               	movwf	7	;volatile
   402     07B0                     l585:
   403                           
   404                           ;UART.c: 39:     OPTION_REG &= 0x7F;
   405     07B0  307F               	movlw	127
   406     07B1  00FF               	movwf	btemp+1
   407     07B2  087F               	movf	btemp+1,w
   408     07B3  0581               	andwf	1,f	;volatile
   409     07B4                     l587:
   410                           
   411                           ;UART.c: 40:     TXSTA = 0x24;
   412     07B4  3024               	movlw	36
   413     07B5  0098               	movwf	24	;volatile
   414     07B6                     l589:
   415                           
   416                           ;UART.c: 41:     RCSTA = 0x90;
   417     07B6  3090               	movlw	144
   418     07B7  1283               	bcf	3,5	;RP0=0, select bank0
   419     07B8  1303               	bcf	3,6	;RP1=0, select bank0
   420     07B9  0098               	movwf	24	;volatile
   421     07BA                     l591:
   422                           
   423                           ;UART.c: 42:     SPBRG = 0x38;
   424     07BA  3038               	movlw	56
   425     07BB  1683               	bsf	3,5	;RP0=1, select bank1
   426     07BC  1303               	bcf	3,6	;RP1=0, select bank1
   427     07BD  0099               	movwf	25	;volatile
   428     07BE                     l593:
   429                           
   430                           ;UART.c: 43:     PORTB = 0x00;
   431     07BE  1283               	bcf	3,5	;RP0=0, select bank0
   432     07BF  1303               	bcf	3,6	;RP1=0, select bank0
   433     07C0  0186               	clrf	6	;volatile
   434     07C1                     l39:
   435     07C1  0008               	return
   436     07C2                     __end_of_init:
   437     007E                     btemp	set	126	;btemp
   438     007E                     wtemp0	set	126
   439                           
   440                           	psect	config
   441                           
   442                           ;Config register CONFIG @ 0x2007
   443                           ;	Oscillator Selection bits
   444                           ;	FOSC = EXTRC, RC oscillator
   445                           ;	Watchdog Timer Enable bit
   446                           ;	WDTE = OFF, WDT disabled
   447                           ;	Power-up Timer Enable bit
   448                           ;	PWRTE = OFF, PWRT disabled
   449                           ;	Brown-out Reset Enable bit
   450                           ;	BOREN = OFF, BOR disabled
   451                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   452                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   453                           ;	Data EEPROM Memory Code Protection bit
   454                           ;	CPD = OFF, Data EEPROM code protection off
   455                           ;	Flash Program Memory Write Enable bits
   456                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   457                           ;	In-Circuit Debugger Mode bit
   458                           ;	DEBUG = 0x1, unprogrammed default
   459                           ;	Flash Program Memory Code Protection bit
   460                           ;	CP = OFF, Code protection off
   461     2007                     	org	8199
   462     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMMON     2     2      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Feb 06 12:50:14 2024

                     l39 07C1                       u17 07F4                      l601 07D4  
                    l603 07D7                      l611 07F0                      l605 07DA  
                    l609 07DD                      l637 07E2                      l591 07BA  
                    l583 07AA                      l593 07BE                      l585 07B0  
                    l587 07B4                      l595 07C2                      l589 07B6  
                    l597 07C7                      l599 07D1                      _val 0070  
                   _main 07C2                     _init 07AA                     btemp 007E  
                   start 0000                    ?_main 0072                    ?_init 0072  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTB 0006  
                  _TRISB 0086                    _TRISC 0087                    _TXREG 0019  
                  _TXSTA 0098                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC             __end_of_init 07C2  
                 ??_main 0072                   ??_init 0072  __end_of__initialization 07FC  
         __pcstackCOMMON 0072               __pnvCOMMON 0070               __pmaintext 07C2  
                __ptext1 07AA     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002               _OPTION_REG 0081  
