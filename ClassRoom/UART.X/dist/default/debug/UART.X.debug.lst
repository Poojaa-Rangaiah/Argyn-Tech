

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Feb 05 23:26:22 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166                           
   167                           	psect	nvCOMMON
   168     0073                     __pnvCOMMON:
   169     0073                     _val:
   170     0073                     	ds	2
   171     0018                     _RCSTA	set	24
   172     0019                     _TXREG	set	25
   173     0006                     _PORTB	set	6
   174     0099                     _SPBRG	set	153
   175     0098                     _TXSTA	set	152
   176     0081                     _OPTION_REG	set	129
   177     0087                     _TRISC	set	135
   178     0086                     _TRISB	set	134
   179                           
   180                           	psect	cinit
   181     07FC                     start_initialization:	
   182                           ; #config settings
   183                           
   184     07FC                     __initialization:
   185     07FC                     end_of_initialization:	
   186                           ;End of C runtime variable initialization code
   187                           
   188     07FC                     __end_of__initialization:
   189     07FC  0183               	clrf	3
   190     07FD  120A  118A  2FBD   	ljmp	_main	;jump to C main() function
   191                           
   192                           	psect	cstackCOMMON
   193     0070                     __pcstackCOMMON:
   194     0070                     ?_init:
   195     0070                     ??_init:	
   196                           ; 1 bytes @ 0x0
   197                           
   198     0070                     ?_main:	
   199                           ; 1 bytes @ 0x0
   200                           
   201     0070                     ??_main:	
   202                           ; 1 bytes @ 0x0
   203                           
   204                           
   205                           ; 1 bytes @ 0x0
   206     0070                     	ds	3
   207                           
   208                           	psect	maintext
   209     07BD                     __pmaintext:	
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 15 in file "UART.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   224 ;; Tracked objects:
   225 ;;		On entry : B00/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   229 ;;      Params:         0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0
   231 ;;      Temps:          3       0       0       0       0
   232 ;;      Totals:         3       0       0       0       0
   233 ;;Total ram usage:        3 bytes
   234 ;; Hardware stack levels required when called: 1
   235 ;; This function calls:
   236 ;;		_init
   237 ;; This function is called by:
   238 ;;		Startup code after reset
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242     07BD                     _main:	
   243                           ;psect for function _main
   244                           
   245     07BD                     l595:	
   246                           ;incstack = 0
   247                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   248                           
   249                           
   250                           ;UART.c: 16:     init();
   251     07BD  120A  118A  27A5  120A  118A  	fcall	_init
   252     07C2                     l597:
   253                           
   254                           ;UART.c: 18:         val = PORTB;
   255     07C2  1283               	bcf	3,5	;RP0=0, select bank0
   256     07C3  1303               	bcf	3,6	;RP1=0, select bank0
   257     07C4  0806               	movf	6,w	;volatile
   258     07C5  00F0               	movwf	??_main
   259     07C6  01F1               	clrf	??_main+1
   260     07C7  0870               	movf	??_main,w
   261     07C8  00F3               	movwf	_val
   262     07C9  0871               	movf	??_main+1,w
   263     07CA  00F4               	movwf	_val+1
   264                           
   265                           ;UART.c: 19:         switch(val) {
   266     07CB  2FD8               	goto	l609
   267     07CC                     l599:
   268                           
   269                           ;UART.c: 21:                 TXREG = 'A';
   270     07CC  3041               	movlw	65
   271     07CD  0099               	movwf	25	;volatile
   272                           
   273                           ;UART.c: 22:                 break;
   274     07CE  2FEB               	goto	l611
   275     07CF                     l601:
   276                           
   277                           ;UART.c: 24:                 TXREG = 'B';
   278     07CF  3042               	movlw	66
   279     07D0  0099               	movwf	25	;volatile
   280                           
   281                           ;UART.c: 25:                 break;
   282     07D1  2FEB               	goto	l611
   283     07D2                     l603:
   284                           
   285                           ;UART.c: 27:                 TXREG = 'C';
   286     07D2  3043               	movlw	67
   287     07D3  0099               	movwf	25	;volatile
   288                           
   289                           ;UART.c: 28:                 break;
   290     07D4  2FEB               	goto	l611
   291     07D5                     l605:
   292                           
   293                           ;UART.c: 30:                 TXREG = 'D';
   294     07D5  3044               	movlw	68
   295     07D6  0099               	movwf	25	;volatile
   296                           
   297                           ;UART.c: 31:                 break;
   298     07D7  2FEB               	goto	l611
   299     07D8                     l609:
   300                           
   301                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   302                           ; Switch size 1, requested type "simple"
   303                           ; Number of cases is 1, Range of values is 0 to 0
   304                           ; switch strategies available:
   305                           ; Name         Instructions Cycles
   306                           ; simple_byte            4     3 (average)
   307                           ; direct_byte           11     8 (fixed)
   308                           ; jumptable            260     6 (fixed)
   309                           ;	Chosen strategy is simple_byte
   310     07D8  0874               	movf	_val+1,w
   311     07D9  3A00               	xorlw	0	; case 0
   312     07DA  1903               	skipnz
   313     07DB  2FDD               	goto	l637
   314     07DC  2FEB               	goto	l611
   315     07DD                     l637:
   316                           
   317                           ; Switch size 1, requested type "simple"
   318                           ; Number of cases is 4, Range of values is 112 to 224
   319                           ; switch strategies available:
   320                           ; Name         Instructions Cycles
   321                           ; simple_byte           13     7 (average)
   322                           ; jumptable            263     9 (fixed)
   323                           ;	Chosen strategy is simple_byte
   324     07DD  0873               	movf	_val,w
   325     07DE  3A70               	xorlw	112	; case 112
   326     07DF  1903               	skipnz
   327     07E0  2FD5               	goto	l605
   328     07E1  3AC0               	xorlw	192	; case 176
   329     07E2  1903               	skipnz
   330     07E3  2FD2               	goto	l603
   331     07E4  3A60               	xorlw	96	; case 208
   332     07E5  1903               	skipnz
   333     07E6  2FCF               	goto	l601
   334     07E7  3A30               	xorlw	48	; case 224
   335     07E8  1903               	skipnz
   336     07E9  2FCC               	goto	l599
   337     07EA  2FEB               	goto	l611
   338     07EB                     l611:
   339                           
   340                           ;UART.c: 33:         _delay((unsigned long)((1000)*(6000000/4000.0)));
   341     07EB  3008               	movlw	8
   342     07EC  00F2               	movwf	??_main+2
   343     07ED  309D               	movlw	157
   344     07EE  00F1               	movwf	??_main+1
   345     07EF  3005               	movlw	5
   346     07F0  00F0               	movwf	??_main
   347     07F1                     u17:
   348     07F1  0BF0               	decfsz	??_main,f
   349     07F2  2FF1               	goto	u17
   350     07F3  0BF1               	decfsz	??_main+1,f
   351     07F4  2FF1               	goto	u17
   352     07F5  0BF2               	decfsz	??_main+2,f
   353     07F6  2FF1               	goto	u17
   354     07F7  2FF8               	nop2
   355     07F8  2FC2               	goto	l597
   356     07F9  120A  118A  2800   	ljmp	start
   357     07FC                     __end_of_main:
   358                           
   359                           	psect	text1
   360     07A5                     __ptext1:	
   361 ;; *************** function _init *****************
   362 ;; Defined at:
   363 ;;		line 36 in file "UART.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;		None
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		wreg, status,2, status,0, btemp+1
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   377 ;;      Params:         0       0       0       0       0
   378 ;;      Locals:         0       0       0       0       0
   379 ;;      Temps:          0       0       0       0       0
   380 ;;      Totals:         0       0       0       0       0
   381 ;;Total ram usage:        0 bytes
   382 ;; Hardware stack levels used: 1
   383 ;; This function calls:
   384 ;;		Nothing
   385 ;; This function is called by:
   386 ;;		_main
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390     07A5                     _init:	
   391                           ;psect for function _init
   392                           
   393     07A5                     l583:	
   394                           ;incstack = 0
   395                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1]
   396                           
   397                           
   398                           ;UART.c: 37:     TRISB = 0xF0;
   399     07A5  30F0               	movlw	240
   400     07A6  1683               	bsf	3,5	;RP0=1, select bank1
   401     07A7  1303               	bcf	3,6	;RP1=0, select bank1
   402     07A8  0086               	movwf	6	;volatile
   403                           
   404                           ;UART.c: 38:     TRISC = 0xC0;
   405     07A9  30C0               	movlw	192
   406     07AA  0087               	movwf	7	;volatile
   407     07AB                     l585:
   408                           
   409                           ;UART.c: 39:     OPTION_REG &= 0x7F;
   410     07AB  307F               	movlw	127
   411     07AC  00FF               	movwf	btemp+1
   412     07AD  087F               	movf	btemp+1,w
   413     07AE  0581               	andwf	1,f	;volatile
   414     07AF                     l587:
   415                           
   416                           ;UART.c: 40:     TXSTA = 0x20;
   417     07AF  3020               	movlw	32
   418     07B0  0098               	movwf	24	;volatile
   419     07B1                     l589:
   420                           
   421                           ;UART.c: 41:     RCSTA = 0x90;
   422     07B1  3090               	movlw	144
   423     07B2  1283               	bcf	3,5	;RP0=0, select bank0
   424     07B3  1303               	bcf	3,6	;RP1=0, select bank0
   425     07B4  0098               	movwf	24	;volatile
   426     07B5                     l591:
   427                           
   428                           ;UART.c: 42:     SPBRG = 0x09;
   429     07B5  3009               	movlw	9
   430     07B6  1683               	bsf	3,5	;RP0=1, select bank1
   431     07B7  1303               	bcf	3,6	;RP1=0, select bank1
   432     07B8  0099               	movwf	25	;volatile
   433     07B9                     l593:
   434                           
   435                           ;UART.c: 43:     PORTB = 0x00;
   436     07B9  1283               	bcf	3,5	;RP0=0, select bank0
   437     07BA  1303               	bcf	3,6	;RP1=0, select bank0
   438     07BB  0186               	clrf	6	;volatile
   439     07BC                     l39:
   440     07BC  0008               	return
   441     07BD                     __end_of_init:
   442     007E                     btemp	set	126	;btemp
   443     007E                     wtemp0	set	126
   444                           
   445                           	psect	config
   446                           
   447                           ;Config register CONFIG @ 0x2007
   448                           ;	Oscillator Selection bits
   449                           ;	FOSC = EXTRC, RC oscillator
   450                           ;	Watchdog Timer Enable bit
   451                           ;	WDTE = OFF, WDT disabled
   452                           ;	Power-up Timer Enable bit
   453                           ;	PWRTE = OFF, PWRT disabled
   454                           ;	Brown-out Reset Enable bit
   455                           ;	BOREN = OFF, BOR disabled
   456                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   457                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   458                           ;	Data EEPROM Memory Code Protection bit
   459                           ;	CPD = OFF, Data EEPROM code protection off
   460                           ;	Flash Program Memory Write Enable bits
   461                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   462                           ;	In-Circuit Debugger Mode bit
   463                           ;	DEBUG = 0x1, unprogrammed default
   464                           ;	Flash Program Memory Code Protection bit
   465                           ;	CP = OFF, Code protection off
   466     2007                     	org	8199
   467     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 COMMON     3     3      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Feb 05 23:26:22 2024

                     l39 07BC                       u17 07F1                      l601 07CF  
                    l603 07D2                      l611 07EB                      l605 07D5  
                    l609 07D8                      l637 07DD                      l591 07B5  
                    l583 07A5                      l593 07B9                      l585 07AB  
                    l587 07AF                      l595 07BD                      l589 07B1  
                    l597 07C2                      l599 07CC                      _val 0073  
                   _main 07BD                     _init 07A5                     btemp 007E  
                   start 0000                    ?_main 0070                    ?_init 0070  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTB 0006  
                  _TRISB 0086                    _TRISC 0087                    _TXREG 0019  
                  _TXSTA 0098                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC             __end_of_init 07BD  
                 ??_main 0070                   ??_init 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pnvCOMMON 0073               __pmaintext 07BD  
                __ptext1 07A5     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002               _OPTION_REG 0081  
