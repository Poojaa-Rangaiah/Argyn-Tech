

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Jan 08 19:08:05 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 22/03/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     009F                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     010E                     	;# 
   114     010F                     	;# 
   115     018C                     	;# 
   116     018D                     	;# 
   117     0000                     	;# 
   118     0001                     	;# 
   119     0002                     	;# 
   120     0003                     	;# 
   121     0004                     	;# 
   122     0005                     	;# 
   123     0006                     	;# 
   124     0007                     	;# 
   125     0008                     	;# 
   126     0009                     	;# 
   127     000A                     	;# 
   128     000B                     	;# 
   129     000C                     	;# 
   130     000D                     	;# 
   131     000E                     	;# 
   132     000E                     	;# 
   133     000F                     	;# 
   134     0010                     	;# 
   135     0011                     	;# 
   136     0012                     	;# 
   137     0013                     	;# 
   138     0014                     	;# 
   139     0015                     	;# 
   140     0015                     	;# 
   141     0016                     	;# 
   142     0017                     	;# 
   143     0018                     	;# 
   144     0019                     	;# 
   145     001A                     	;# 
   146     001B                     	;# 
   147     001B                     	;# 
   148     001C                     	;# 
   149     001D                     	;# 
   150     001E                     	;# 
   151     001F                     	;# 
   152     0081                     	;# 
   153     0085                     	;# 
   154     0086                     	;# 
   155     0087                     	;# 
   156     0088                     	;# 
   157     0089                     	;# 
   158     008C                     	;# 
   159     008D                     	;# 
   160     008E                     	;# 
   161     0091                     	;# 
   162     0092                     	;# 
   163     0093                     	;# 
   164     0094                     	;# 
   165     0098                     	;# 
   166     0099                     	;# 
   167     009C                     	;# 
   168     009D                     	;# 
   169     009E                     	;# 
   170     009F                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     018C                     	;# 
   176     018D                     	;# 
   177                           
   178                           	psect	idataBANK0
   179     0562                     __pidataBANK0:
   180                           
   181                           ;initializer for _arr
   182     0562  3453               	retlw	83
   183     0563  3445               	retlw	69
   184     0564  3454               	retlw	84
   185     0565  3420               	retlw	32
   186     0566  3453               	retlw	83
   187     0567  3450               	retlw	80
   188     0568  3444               	retlw	68
   189     0569  343A               	retlw	58
   190     056A  3420               	retlw	32
   191     056B  3420               	retlw	32
   192     056C  3420               	retlw	32
   193     056D  3420               	retlw	32
   194     056E  3472               	retlw	114
   195     056F  3470               	retlw	112
   196     0570  346D               	retlw	109
   197     0571  3400               	retlw	0
   198     0572  3400               	retlw	0
   199     0573  3400               	retlw	0
   200     0574  3400               	retlw	0
   201     0575  3400               	retlw	0
   202     0576  3400               	retlw	0
   203     0577  3400               	retlw	0
   204     0578  3400               	retlw	0
   205     0579  3400               	retlw	0
   206     057A  3400               	retlw	0
   207     057B  3400               	retlw	0
   208     057C  3400               	retlw	0
   209     057D  3400               	retlw	0
   210     057E  3400               	retlw	0
   211     057F  3400               	retlw	0
   212     0008                     _PORTD	set	8
   213     0007                     _PORTC	set	7
   214     0006                     _PORTB	set	6
   215     0081                     _OPTION_REG	set	129
   216     0086                     _TRISB	set	134
   217     0088                     _TRISD	set	136
   218     0087                     _TRISC	set	135
   219                           
   220                           	psect	cinit
   221     07E2                     start_initialization:	
   222                           ; #config settings
   223                           
   224     07E2                     __initialization:
   225                           
   226                           ; Initialize objects allocated to BANK0
   227     07E2  1383               	bcf	3,7	;select IRP bank0
   228     07E3  303E               	movlw	low (__pdataBANK0+30)
   229     07E4  00FD               	movwf	btemp+-1
   230     07E5  3005               	movlw	high __pidataBANK0
   231     07E6  00FE               	movwf	btemp
   232     07E7  3062               	movlw	low __pidataBANK0
   233     07E8  00FF               	movwf	btemp+1
   234     07E9  3020               	movlw	low __pdataBANK0
   235     07EA  0084               	movwf	4
   236     07EB  120A  118A  250F  120A  118A  	fcall	init_ram0
   237                           
   238                           ; Clear objects allocated to BANK0
   239     07F0  01BE               	clrf	__pbssBANK0& (0+127)
   240     07F1  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   241     07F2  01C0               	clrf	(__pbssBANK0+2)& (0+127)
   242     07F3  01C1               	clrf	(__pbssBANK0+3)& (0+127)
   243     07F4  01C2               	clrf	(__pbssBANK0+4)& (0+127)
   244     07F5  01C3               	clrf	(__pbssBANK0+5)& (0+127)
   245     07F6  01C4               	clrf	(__pbssBANK0+6)& (0+127)
   246     07F7  01C5               	clrf	(__pbssBANK0+7)& (0+127)
   247     07F8  01C6               	clrf	(__pbssBANK0+8)& (0+127)
   248     07F9  01C7               	clrf	(__pbssBANK0+9)& (0+127)
   249     07FA  01C8               	clrf	(__pbssBANK0+10)& (0+127)
   250     07FB  01C9               	clrf	(__pbssBANK0+11)& (0+127)
   251     07FC                     end_of_initialization:	
   252                           ;End of C runtime variable initialization code
   253                           
   254     07FC                     __end_of__initialization:
   255     07FC  0183               	clrf	3
   256     07FD  120A  118A  2CF9   	ljmp	_main	;jump to C main() function
   257                           
   258                           	psect	bssBANK0
   259     003E                     __pbssBANK0:
   260     003E                     _j:
   261     003E                     	ds	2
   262     0040                     _d0:
   263     0040                     	ds	2
   264     0042                     _d1:
   265     0042                     	ds	2
   266     0044                     _d2:
   267     0044                     	ds	2
   268     0046                     _d3:
   269     0046                     	ds	2
   270     0048                     _x:
   271     0048                     	ds	1
   272     0049                     _val:
   273     0049                     	ds	1
   274                           
   275                           	psect	dataBANK0
   276     0020                     __pdataBANK0:
   277     0020                     _arr:
   278     0020                     	ds	30
   279                           
   280                           	psect	inittext
   281     050B                     init_fetch0:	
   282                           ;	Called with low address in FSR and high address in W
   283                           
   284     050B  087E               	movf	btemp,w
   285     050C  008A               	movwf	10
   286     050D  087F               	movf	btemp+1,w
   287     050E  0082               	movwf	2
   288     050F                     init_ram0:	
   289                           ;Called with:
   290                           ;	high address of idata address in btemp 
   291                           ;	low address of idata address in btemp+1 
   292                           ;	low address of data in FSR
   293                           ;	high address + 1 of data in btemp-1
   294                           
   295     050F  120A  118A  250B  120A  118A  	fcall	init_fetch0
   296     0514  0080               	movwf	0
   297     0515  0A84               	incf	4,f
   298     0516  0804               	movf	4,w
   299     0517  067D               	xorwf	btemp+-1,w
   300     0518  1903               	btfsc	3,2
   301     0519  3400               	retlw	0
   302     051A  0AFF               	incf	btemp+1,f
   303     051B  1903               	btfsc	3,2
   304     051C  0AFE               	incf	btemp,f
   305     051D  2D0F               	goto	init_ram0
   306                           
   307                           	psect	cstackCOMMON
   308     0070                     __pcstackCOMMON:
   309     0070                     ?_init:
   310     0070                     ?_keyscan:	
   311                           ; 1 bytes @ 0x0
   312                           
   313     0070                     ?_LCD_Comm:	
   314                           ; 1 bytes @ 0x0
   315                           
   316     0070                     ??_LCD_Comm:	
   317                           ; 1 bytes @ 0x0
   318                           
   319     0070                     ?_LCD_Data:	
   320                           ; 1 bytes @ 0x0
   321                           
   322     0070                     ??_LCD_Data:	
   323                           ; 1 bytes @ 0x0
   324                           
   325     0070                     ?_main:	
   326                           ; 1 bytes @ 0x0
   327                           
   328     0070                     ?___bmul:	
   329                           ; 1 bytes @ 0x0
   330                           
   331     0070                     ?___wmul:	
   332                           ; 1 bytes @ 0x0
   333                           
   334     0070                     ___bmul@multiplicand:	
   335                           ; 2 bytes @ 0x0
   336                           
   337     0070                     ___wmul@multiplier:	
   338                           ; 1 bytes @ 0x0
   339                           
   340                           
   341                           ; 2 bytes @ 0x0
   342     0070                     	ds	1
   343     0071                     ??___bmul:
   344     0071                     ___bmul@product:	
   345                           ; 1 bytes @ 0x1
   346                           
   347                           
   348                           ; 1 bytes @ 0x1
   349     0071                     	ds	1
   350     0072                     LCD_Comm@i:
   351     0072                     LCD_Data@i:	
   352                           ; 1 bytes @ 0x2
   353                           
   354     0072                     ___bmul@multiplier:	
   355                           ; 1 bytes @ 0x2
   356                           
   357     0072                     ___wmul@multiplicand:	
   358                           ; 1 bytes @ 0x2
   359                           
   360                           
   361                           ; 2 bytes @ 0x2
   362     0072                     	ds	1
   363     0073                     ??_init:
   364                           
   365                           ; 1 bytes @ 0x3
   366     0073                     	ds	1
   367     0074                     ??___wmul:
   368     0074                     ___wmul@product:	
   369                           ; 1 bytes @ 0x4
   370                           
   371                           
   372                           ; 2 bytes @ 0x4
   373     0074                     	ds	2
   374     0076                     ?___lwdiv:
   375     0076                     ___lwdiv@divisor:	
   376                           ; 2 bytes @ 0x6
   377                           
   378                           
   379                           ; 2 bytes @ 0x6
   380     0076                     	ds	2
   381     0078                     ___lwdiv@dividend:
   382                           
   383                           ; 2 bytes @ 0x8
   384     0078                     	ds	2
   385     007A                     ??___lwdiv:
   386     007A                     ___lwdiv@quotient:	
   387                           ; 1 bytes @ 0xA
   388                           
   389                           
   390                           ; 2 bytes @ 0xA
   391     007A                     	ds	2
   392     007C                     ___lwdiv@counter:
   393                           
   394                           ; 1 bytes @ 0xC
   395     007C                     	ds	1
   396     007D                     ??_main:
   397                           
   398                           	psect	cstackBANK0
   399     004A                     __pcstackBANK0:	
   400                           ; 1 bytes @ 0xD
   401                           
   402     004A                     ?_LCDOutput:
   403     004A                     LCDOutput@i:	
   404                           ; 1 bytes @ 0x0
   405                           
   406                           
   407                           ; 2 bytes @ 0x0
   408     004A                     	ds	2
   409     004C                     ??_LCDOutput:
   410                           
   411                           ; 1 bytes @ 0x2
   412     004C                     	ds	6
   413     0052                     ??_keyscan:
   414                           
   415                           ; 1 bytes @ 0x8
   416     0052                     	ds	2
   417                           
   418                           	psect	maintext
   419     04F9                     __pmaintext:	
   420 ;;
   421 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   422 ;;
   423 ;; *************** function _main *****************
   424 ;; Defined at:
   425 ;;		line 27 in file "LCD_spd.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;		None
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   434 ;; Tracked objects:
   435 ;;		On entry : B00/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   439 ;;      Params:         0       0       0       0       0
   440 ;;      Locals:         0       0       0       0       0
   441 ;;      Temps:          0       0       0       0       0
   442 ;;      Totals:         0       0       0       0       0
   443 ;;Total ram usage:        0 bytes
   444 ;; Hardware stack levels required when called: 3
   445 ;; This function calls:
   446 ;;		_init
   447 ;;		_keyscan
   448 ;; This function is called by:
   449 ;;		Startup code after reset
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453     04F9                     _main:	
   454                           ;psect for function _main
   455                           
   456     04F9                     l1003:	
   457                           ;incstack = 0
   458                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   459                           
   460                           
   461                           ;LCD_spd.c: 28:     init();
   462     04F9  120A  118A  25E9  120A  118A  	fcall	_init
   463     04FE                     l1005:
   464                           
   465                           ;LCD_spd.c: 29:     j=0;
   466     04FE  1283               	bcf	3,5	;RP0=0, select bank0
   467     04FF  1303               	bcf	3,6	;RP1=0, select bank0
   468     0500  01BE               	clrf	_j
   469     0501  01BF               	clrf	_j+1
   470     0502                     l1007:
   471                           
   472                           ;LCD_spd.c: 31:         keyscan();
   473     0502  120A  118A  2656  120A  118A  	fcall	_keyscan
   474     0507  2D02               	goto	l1007
   475     0508  120A  118A  2800   	ljmp	start
   476     050B                     __end_of_main:
   477                           
   478                           	psect	text1
   479     0656                     __ptext1:	
   480 ;; *************** function _keyscan *****************
   481 ;; Defined at:
   482 ;;		line 34 in file "LCD_spd.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   496 ;;      Params:         0       0       0       0       0
   497 ;;      Locals:         0       0       0       0       0
   498 ;;      Temps:          0       2       0       0       0
   499 ;;      Totals:         0       2       0       0       0
   500 ;;Total ram usage:        2 bytes
   501 ;; Hardware stack levels used: 1
   502 ;; Hardware stack levels required when called: 2
   503 ;; This function calls:
   504 ;;		_LCDOutput
   505 ;;		_LCD_Comm
   506 ;;		_LCD_Data
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512     0656                     _keyscan:	
   513                           ;psect for function _keyscan
   514                           
   515     0656                     l939:	
   516                           ;incstack = 0
   517                           ; Regs used in _keyscan: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   518                           
   519                           
   520                           ;LCD_spd.c: 35:     val = PORTB&0xF0;
   521     0656  1283               	bcf	3,5	;RP0=0, select bank0
   522     0657  1303               	bcf	3,6	;RP1=0, select bank0
   523     0658  0806               	movf	6,w	;volatile
   524     0659  39F0               	andlw	240
   525     065A  00C9               	movwf	_val
   526                           
   527                           ;LCD_spd.c: 36:     switch(val) {
   528     065B  2EF2               	goto	l997
   529     065C                     l941:
   530                           
   531                           ;LCD_spd.c: 38:             LCD_Comm(0x80);
   532     065C  3080               	movlw	128
   533     065D  120A  118A  2549  120A  118A  	fcall	_LCD_Comm
   534     0662                     l943:
   535                           
   536                           ;LCD_spd.c: 39:             for(x=0;x<8;x++) {
   537     0662  1283               	bcf	3,5	;RP0=0, select bank0
   538     0663  1303               	bcf	3,6	;RP1=0, select bank0
   539     0664  01C8               	clrf	_x
   540     0665                     l949:
   541                           
   542                           ;LCD_spd.c: 40:                 LCD_Data(arr[x]);
   543     0665  0848               	movf	_x,w
   544     0666  3E20               	addlw	(low (_arr| 0))& (0+255)
   545     0667  0084               	movwf	4
   546     0668  1383               	bcf	3,7	;select IRP bank0
   547     0669  0800               	movf	0,w
   548     066A  120A  118A  2533  120A  118A  	fcall	_LCD_Data
   549     066F                     l951:
   550                           
   551                           ;LCD_spd.c: 41:             }
   552     066F  3001               	movlw	1
   553     0670  00FF               	movwf	btemp+1
   554     0671  087F               	movf	btemp+1,w
   555     0672  1283               	bcf	3,5	;RP0=0, select bank0
   556     0673  1303               	bcf	3,6	;RP1=0, select bank0
   557     0674  07C8               	addwf	_x,f
   558     0675                     l953:
   559     0675  3008               	movlw	8
   560     0676  0248               	subwf	_x,w
   561     0677  1C03               	skipc
   562     0678  2E7A               	goto	u311
   563     0679  2E7B               	goto	u310
   564     067A                     u311:
   565     067A  2E65               	goto	l949
   566     067B                     u310:
   567     067B                     l955:
   568                           
   569                           ;LCD_spd.c: 42:             LCD_Comm(0x8C);
   570     067B  308C               	movlw	140
   571     067C  120A  118A  2549  120A  118A  	fcall	_LCD_Comm
   572     0681                     l957:
   573                           
   574                           ;LCD_spd.c: 43:             for(x=12;x<15;x++) {
   575     0681  300C               	movlw	12
   576     0682  1283               	bcf	3,5	;RP0=0, select bank0
   577     0683  1303               	bcf	3,6	;RP1=0, select bank0
   578     0684  00C8               	movwf	_x
   579     0685                     l963:
   580                           
   581                           ;LCD_spd.c: 44:                 LCD_Data(arr[x]);
   582     0685  0848               	movf	_x,w
   583     0686  3E20               	addlw	(low (_arr| 0))& (0+255)
   584     0687  0084               	movwf	4
   585     0688  1383               	bcf	3,7	;select IRP bank0
   586     0689  0800               	movf	0,w
   587     068A  120A  118A  2533  120A  118A  	fcall	_LCD_Data
   588     068F                     l965:
   589                           
   590                           ;LCD_spd.c: 45:             }
   591     068F  3001               	movlw	1
   592     0690  00FF               	movwf	btemp+1
   593     0691  087F               	movf	btemp+1,w
   594     0692  1283               	bcf	3,5	;RP0=0, select bank0
   595     0693  1303               	bcf	3,6	;RP1=0, select bank0
   596     0694  07C8               	addwf	_x,f
   597     0695                     l967:
   598     0695  300F               	movlw	15
   599     0696  0248               	subwf	_x,w
   600     0697  1C03               	skipc
   601     0698  2E9A               	goto	u321
   602     0699  2E9B               	goto	u320
   603     069A                     u321:
   604     069A  2E85               	goto	l963
   605     069B                     u320:
   606     069B                     l969:
   607                           
   608                           ;LCD_spd.c: 46:             LCD_Comm(0x88);
   609     069B  3088               	movlw	136
   610     069C  120A  118A  2549  120A  118A  	fcall	_LCD_Comm
   611                           
   612                           ;LCD_spd.c: 47:             LCDOutput(j);
   613     06A1  1283               	bcf	3,5	;RP0=0, select bank0
   614     06A2  1303               	bcf	3,6	;RP1=0, select bank0
   615     06A3  083F               	movf	_j+1,w
   616     06A4  00CB               	movwf	LCDOutput@i+1
   617     06A5  083E               	movf	_j,w
   618     06A6  00CA               	movwf	LCDOutput@i
   619     06A7  120A  118A  2709  120A  118A  	fcall	_LCDOutput
   620                           
   621                           ;LCD_spd.c: 48:             break;
   622     06AC  2F08               	goto	l65
   623     06AD                     l971:
   624                           
   625                           ;LCD_spd.c: 50:             j++;
   626     06AD  3001               	movlw	1
   627     06AE  07BE               	addwf	_j,f
   628     06AF  1803               	skipnc
   629     06B0  0ABF               	incf	_j+1,f
   630     06B1  3000               	movlw	0
   631     06B2  07BF               	addwf	_j+1,f
   632                           
   633                           ;LCD_spd.c: 51:             if(j>5000) {
   634     06B3  3013               	movlw	19
   635     06B4  023F               	subwf	_j+1,w
   636     06B5  3089               	movlw	137
   637     06B6  1903               	skipnz
   638     06B7  023E               	subwf	_j,w
   639     06B8  1C03               	skipc
   640     06B9  2EBB               	goto	u331
   641     06BA  2EBC               	goto	u330
   642     06BB                     u331:
   643     06BB  2EC0               	goto	l975
   644     06BC                     u330:
   645     06BC                     l973:
   646                           
   647                           ;LCD_spd.c: 52:                 j=5000;
   648     06BC  3088               	movlw	136
   649     06BD  00BE               	movwf	_j
   650     06BE  3013               	movlw	19
   651     06BF  00BF               	movwf	_j+1
   652     06C0                     l975:
   653                           
   654                           ;LCD_spd.c: 54:             LCD_Comm(0x88);
   655     06C0  3088               	movlw	136
   656     06C1  120A  118A  2549  120A  118A  	fcall	_LCD_Comm
   657     06C6                     l977:
   658                           
   659                           ;LCD_spd.c: 55:             LCDOutput(j);
   660     06C6  1283               	bcf	3,5	;RP0=0, select bank0
   661     06C7  1303               	bcf	3,6	;RP1=0, select bank0
   662     06C8  083F               	movf	_j+1,w
   663     06C9  00CB               	movwf	LCDOutput@i+1
   664     06CA  083E               	movf	_j,w
   665     06CB  00CA               	movwf	LCDOutput@i
   666     06CC  120A  118A  2709  120A  118A  	fcall	_LCDOutput
   667                           
   668                           ;LCD_spd.c: 56:             break;
   669     06D1  2F08               	goto	l65
   670     06D2                     l979:
   671                           
   672                           ;LCD_spd.c: 58:             j--;
   673     06D2  3001               	movlw	1
   674     06D3  02BE               	subwf	_j,f
   675     06D4  3000               	movlw	0
   676     06D5  1C03               	skipc
   677     06D6  03BF               	decf	_j+1,f
   678     06D7  02BF               	subwf	_j+1,f
   679     06D8                     l981:
   680                           
   681                           ;LCD_spd.c: 59:             if(j<1) {
   682     06D8  083E               	movf	_j,w
   683     06D9  043F               	iorwf	_j+1,w
   684     06DA  1D03               	btfss	3,2
   685     06DB  2EDD               	goto	u341
   686     06DC  2EDE               	goto	u340
   687     06DD                     u341:
   688     06DD  2EE2               	goto	l985
   689     06DE                     u340:
   690     06DE                     l983:
   691                           
   692                           ;LCD_spd.c: 60:                 j=1;
   693     06DE  3001               	movlw	1
   694     06DF  00BE               	movwf	_j
   695     06E0  3000               	movlw	0
   696     06E1  00BF               	movwf	_j+1
   697     06E2                     l985:
   698                           
   699                           ;LCD_spd.c: 62:             LCD_Comm(0x88);
   700     06E2  3088               	movlw	136
   701     06E3  120A  118A  2549  120A  118A  	fcall	_LCD_Comm
   702     06E8  2EC6               	goto	l977
   703     06E9                     l989:
   704                           
   705                           ;LCD_spd.c: 66:             j=0;
   706     06E9  01BE               	clrf	_j
   707     06EA  01BF               	clrf	_j+1
   708     06EB                     l991:
   709                           
   710                           ;LCD_spd.c: 67:             LCD_Comm(0x88);
   711     06EB  3088               	movlw	136
   712     06EC  120A  118A  2549  120A  118A  	fcall	_LCD_Comm
   713     06F1  2EC6               	goto	l977
   714     06F2                     l997:
   715     06F2  0849               	movf	_val,w
   716     06F3  00D2               	movwf	??_keyscan
   717     06F4  01D3               	clrf	??_keyscan+1
   718                           
   719                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   720                           ; Switch size 1, requested type "simple"
   721                           ; Number of cases is 1, Range of values is 0 to 0
   722                           ; switch strategies available:
   723                           ; Name         Instructions Cycles
   724                           ; simple_byte            4     3 (average)
   725                           ; direct_byte           11     8 (fixed)
   726                           ; jumptable            260     6 (fixed)
   727                           ;	Chosen strategy is simple_byte
   728     06F5  0853               	movf	??_keyscan+1,w
   729     06F6  3A00               	xorlw	0	; case 0
   730     06F7  1903               	skipnz
   731     06F8  2EFA               	goto	l1029
   732     06F9  2F08               	goto	l65
   733     06FA                     l1029:
   734                           
   735                           ; Switch size 1, requested type "simple"
   736                           ; Number of cases is 4, Range of values is 112 to 224
   737                           ; switch strategies available:
   738                           ; Name         Instructions Cycles
   739                           ; simple_byte           13     7 (average)
   740                           ; jumptable            263     9 (fixed)
   741                           ;	Chosen strategy is simple_byte
   742     06FA  0852               	movf	??_keyscan,w
   743     06FB  3A70               	xorlw	112	; case 112
   744     06FC  1903               	skipnz
   745     06FD  2EE9               	goto	l989
   746     06FE  3AC0               	xorlw	192	; case 176
   747     06FF  1903               	skipnz
   748     0700  2ED2               	goto	l979
   749     0701  3A60               	xorlw	96	; case 208
   750     0702  1903               	skipnz
   751     0703  2EAD               	goto	l971
   752     0704  3A30               	xorlw	48	; case 224
   753     0705  1903               	skipnz
   754     0706  2E5C               	goto	l941
   755     0707  2F08               	goto	l65
   756     0708                     l65:
   757     0708  0008               	return
   758     0709                     __end_of_keyscan:
   759                           
   760                           	psect	text2
   761     0709                     __ptext2:	
   762 ;; *************** function _LCDOutput *****************
   763 ;; Defined at:
   764 ;;		line 92 in file "LCD_spd.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;  i               2    0[BANK0 ] unsigned int 
   767 ;; Auto vars:     Size  Location     Type
   768 ;;		None
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   778 ;;      Params:         0       2       0       0       0
   779 ;;      Locals:         0       0       0       0       0
   780 ;;      Temps:          0       6       0       0       0
   781 ;;      Totals:         0       8       0       0       0
   782 ;;Total ram usage:        8 bytes
   783 ;; Hardware stack levels used: 1
   784 ;; Hardware stack levels required when called: 1
   785 ;; This function calls:
   786 ;;		_LCD_Comm
   787 ;;		_LCD_Data
   788 ;;		___bmul
   789 ;;		___lwdiv
   790 ;;		___wmul
   791 ;; This function is called by:
   792 ;;		_keyscan
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796     0709                     _LCDOutput:	
   797                           ;psect for function _LCDOutput
   798                           
   799     0709                     l903:	
   800                           ;incstack = 0
   801                           ; Regs used in _LCDOutput: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   802                           
   803                           
   804                           ;LCD_spd.c: 93:     d3 = (unsigned char)(i/1000);
   805     0709  30E8               	movlw	232
   806     070A  00F6               	movwf	___lwdiv@divisor
   807     070B  3003               	movlw	3
   808     070C  00F7               	movwf	___lwdiv@divisor+1
   809     070D  1283               	bcf	3,5	;RP0=0, select bank0
   810     070E  1303               	bcf	3,6	;RP1=0, select bank0
   811     070F  084B               	movf	LCDOutput@i+1,w
   812     0710  00F9               	movwf	___lwdiv@dividend+1
   813     0711  084A               	movf	LCDOutput@i,w
   814     0712  00F8               	movwf	___lwdiv@dividend
   815     0713  120A  118A  25A5  120A  118A  	fcall	___lwdiv
   816     0718  0876               	movf	?___lwdiv,w
   817     0719  1283               	bcf	3,5	;RP0=0, select bank0
   818     071A  1303               	bcf	3,6	;RP1=0, select bank0
   819     071B  00CC               	movwf	??_LCDOutput
   820     071C  01CD               	clrf	??_LCDOutput+1
   821     071D  084C               	movf	??_LCDOutput,w
   822     071E  00C6               	movwf	_d3
   823     071F  084D               	movf	??_LCDOutput+1,w
   824     0720  00C7               	movwf	_d3+1
   825                           
   826                           ;LCD_spd.c: 94:     d2 = (unsigned char)((i-(d3*1000))/100);
   827     0721  3064               	movlw	100
   828     0722  00F6               	movwf	___lwdiv@divisor
   829     0723  3000               	movlw	0
   830     0724  00F7               	movwf	___lwdiv@divisor+1
   831     0725  0847               	movf	_d3+1,w
   832     0726  00F1               	movwf	___wmul@multiplier+1
   833     0727  0846               	movf	_d3,w
   834     0728  00F0               	movwf	___wmul@multiplier
   835     0729  3018               	movlw	24
   836     072A  00F2               	movwf	___wmul@multiplicand
   837     072B  30FC               	movlw	252
   838     072C  00F3               	movwf	___wmul@multiplicand+1
   839     072D  120A  118A  2580  120A  118A  	fcall	___wmul
   840     0732  1283               	bcf	3,5	;RP0=0, select bank0
   841     0733  1303               	bcf	3,6	;RP1=0, select bank0
   842     0734  084A               	movf	LCDOutput@i,w
   843     0735  0770               	addwf	?___wmul,w
   844     0736  00F8               	movwf	___lwdiv@dividend
   845     0737  084B               	movf	LCDOutput@i+1,w
   846     0738  1803               	skipnc
   847     0739  0A4B               	incf	LCDOutput@i+1,w
   848     073A  0771               	addwf	?___wmul+1,w
   849     073B  00F9               	movwf	___lwdiv@dividend+1
   850     073C  120A  118A  25A5  120A  118A  	fcall	___lwdiv
   851     0741  0876               	movf	?___lwdiv,w
   852     0742  1283               	bcf	3,5	;RP0=0, select bank0
   853     0743  1303               	bcf	3,6	;RP1=0, select bank0
   854     0744  00CC               	movwf	??_LCDOutput
   855     0745  01CD               	clrf	??_LCDOutput+1
   856     0746  084C               	movf	??_LCDOutput,w
   857     0747  00C4               	movwf	_d2
   858     0748  084D               	movf	??_LCDOutput+1,w
   859     0749  00C5               	movwf	_d2+1
   860                           
   861                           ;LCD_spd.c: 95:     d1 = (unsigned char)((i-(d3*1000)-(d2*100))/10);
   862     074A  300A               	movlw	10
   863     074B  00F6               	movwf	___lwdiv@divisor
   864     074C  3000               	movlw	0
   865     074D  00F7               	movwf	___lwdiv@divisor+1
   866     074E  0847               	movf	_d3+1,w
   867     074F  00F1               	movwf	___wmul@multiplier+1
   868     0750  0846               	movf	_d3,w
   869     0751  00F0               	movwf	___wmul@multiplier
   870     0752  3018               	movlw	24
   871     0753  00F2               	movwf	___wmul@multiplicand
   872     0754  30FC               	movlw	252
   873     0755  00F3               	movwf	___wmul@multiplicand+1
   874     0756  120A  118A  2580  120A  118A  	fcall	___wmul
   875     075B  0870               	movf	?___wmul,w
   876     075C  1283               	bcf	3,5	;RP0=0, select bank0
   877     075D  1303               	bcf	3,6	;RP1=0, select bank0
   878     075E  00CC               	movwf	??_LCDOutput
   879     075F  0871               	movf	?___wmul+1,w
   880     0760  00CD               	movwf	??_LCDOutput+1
   881     0761  0845               	movf	_d2+1,w
   882     0762  00F1               	movwf	___wmul@multiplier+1
   883     0763  0844               	movf	_d2,w
   884     0764  00F0               	movwf	___wmul@multiplier
   885     0765  309C               	movlw	156
   886     0766  00F2               	movwf	___wmul@multiplicand
   887     0767  30FF               	movlw	255
   888     0768  00F3               	movwf	___wmul@multiplicand+1
   889     0769  120A  118A  2580  120A  118A  	fcall	___wmul
   890     076E  0870               	movf	?___wmul,w
   891     076F  1283               	bcf	3,5	;RP0=0, select bank0
   892     0770  1303               	bcf	3,6	;RP1=0, select bank0
   893     0771  074C               	addwf	??_LCDOutput,w
   894     0772  00CE               	movwf	??_LCDOutput+2
   895     0773  0871               	movf	?___wmul+1,w
   896     0774  1803               	skipnc
   897     0775  0A71               	incf	?___wmul+1,w
   898     0776  074D               	addwf	??_LCDOutput+1,w
   899     0777  00CF               	movwf	??_LCDOutput+3
   900     0778  084A               	movf	LCDOutput@i,w
   901     0779  074E               	addwf	??_LCDOutput+2,w
   902     077A  00F8               	movwf	___lwdiv@dividend
   903     077B  084B               	movf	LCDOutput@i+1,w
   904     077C  1803               	skipnc
   905     077D  0A4B               	incf	LCDOutput@i+1,w
   906     077E  074F               	addwf	??_LCDOutput+3,w
   907     077F  00F9               	movwf	___lwdiv@dividend+1
   908     0780  120A  118A  25A5  120A  118A  	fcall	___lwdiv
   909     0785  0876               	movf	?___lwdiv,w
   910     0786  1283               	bcf	3,5	;RP0=0, select bank0
   911     0787  1303               	bcf	3,6	;RP1=0, select bank0
   912     0788  00D0               	movwf	??_LCDOutput+4
   913     0789  01D1               	clrf	??_LCDOutput+5
   914     078A  0850               	movf	??_LCDOutput+4,w
   915     078B  00C2               	movwf	_d1
   916     078C  0851               	movf	??_LCDOutput+5,w
   917     078D  00C3               	movwf	_d1+1
   918                           
   919                           ;LCD_spd.c: 96:     d0 = (unsigned char)(i-(d3*1000)-(d2*100)-(d1*10));
   920     078E  3018               	movlw	24
   921     078F  00F0               	movwf	___bmul@multiplicand
   922     0790  0846               	movf	_d3,w
   923     0791  120A  118A  251E  120A  118A  	fcall	___bmul
   924     0796  1283               	bcf	3,5	;RP0=0, select bank0
   925     0797  1303               	bcf	3,6	;RP1=0, select bank0
   926     0798  00CC               	movwf	??_LCDOutput
   927     0799  309C               	movlw	156
   928     079A  00F0               	movwf	___bmul@multiplicand
   929     079B  0844               	movf	_d2,w
   930     079C  120A  118A  251E  120A  118A  	fcall	___bmul
   931     07A1  1283               	bcf	3,5	;RP0=0, select bank0
   932     07A2  1303               	bcf	3,6	;RP1=0, select bank0
   933     07A3  00CD               	movwf	??_LCDOutput+1
   934     07A4  30F6               	movlw	246
   935     07A5  00F0               	movwf	___bmul@multiplicand
   936     07A6  0842               	movf	_d1,w
   937     07A7  120A  118A  251E  120A  118A  	fcall	___bmul
   938     07AC  1283               	bcf	3,5	;RP0=0, select bank0
   939     07AD  1303               	bcf	3,6	;RP1=0, select bank0
   940     07AE  074D               	addwf	??_LCDOutput+1,w
   941     07AF  074C               	addwf	??_LCDOutput,w
   942     07B0  074A               	addwf	LCDOutput@i,w
   943     07B1  00CE               	movwf	??_LCDOutput+2
   944     07B2  01CF               	clrf	??_LCDOutput+3
   945     07B3  084E               	movf	??_LCDOutput+2,w
   946     07B4  00C0               	movwf	_d0
   947     07B5  084F               	movf	??_LCDOutput+3,w
   948     07B6  00C1               	movwf	_d0+1
   949                           
   950                           ;LCD_spd.c: 97:     LCD_Comm(0x88);
   951     07B7  3088               	movlw	136
   952     07B8  120A  118A  2549  120A  118A  	fcall	_LCD_Comm
   953                           
   954                           ;LCD_spd.c: 98:     LCD_Data(0x30+d3);
   955     07BD  1283               	bcf	3,5	;RP0=0, select bank0
   956     07BE  1303               	bcf	3,6	;RP1=0, select bank0
   957     07BF  0846               	movf	_d3,w
   958     07C0  3E30               	addlw	48
   959     07C1  120A  118A  2533  120A  118A  	fcall	_LCD_Data
   960                           
   961                           ;LCD_spd.c: 99:     LCD_Data(0x30+d2);
   962     07C6  1283               	bcf	3,5	;RP0=0, select bank0
   963     07C7  1303               	bcf	3,6	;RP1=0, select bank0
   964     07C8  0844               	movf	_d2,w
   965     07C9  3E30               	addlw	48
   966     07CA  120A  118A  2533  120A  118A  	fcall	_LCD_Data
   967                           
   968                           ;LCD_spd.c: 100:     LCD_Data(0x30+d1);
   969     07CF  1283               	bcf	3,5	;RP0=0, select bank0
   970     07D0  1303               	bcf	3,6	;RP1=0, select bank0
   971     07D1  0842               	movf	_d1,w
   972     07D2  3E30               	addlw	48
   973     07D3  120A  118A  2533  120A  118A  	fcall	_LCD_Data
   974                           
   975                           ;LCD_spd.c: 101:     LCD_Data(0x30+d0);
   976     07D8  1283               	bcf	3,5	;RP0=0, select bank0
   977     07D9  1303               	bcf	3,6	;RP1=0, select bank0
   978     07DA  0840               	movf	_d0,w
   979     07DB  3E30               	addlw	48
   980     07DC  120A  118A  2533  120A  118A  	fcall	_LCD_Data
   981     07E1                     l71:
   982     07E1  0008               	return
   983     07E2                     __end_of_LCDOutput:
   984                           
   985                           	psect	text3
   986     0580                     __ptext3:	
   987 ;; *************** function ___wmul *****************
   988 ;; Defined at:
   989 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  multiplier      2    0[COMMON] unsigned int 
   992 ;;  multiplicand    2    2[COMMON] unsigned int 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  product         2    4[COMMON] unsigned int 
   995 ;; Return value:  Size  Location     Type
   996 ;;                  2    0[COMMON] unsigned int 
   997 ;; Registers used:
   998 ;;		wreg, status,2, status,0
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1004 ;;      Params:         4       0       0       0       0
  1005 ;;      Locals:         2       0       0       0       0
  1006 ;;      Temps:          0       0       0       0       0
  1007 ;;      Totals:         6       0       0       0       0
  1008 ;;Total ram usage:        6 bytes
  1009 ;; Hardware stack levels used: 1
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_LCDOutput
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017     0580                     ___wmul:	
  1018                           ;psect for function ___wmul
  1019                           
  1020     0580                     l847:	
  1021                           ;incstack = 0
  1022                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1023                           
  1024     0580  01F4               	clrf	___wmul@product
  1025     0581  01F5               	clrf	___wmul@product+1
  1026     0582                     l849:
  1027     0582  1C70               	btfss	___wmul@multiplier,0
  1028     0583  2D85               	goto	u181
  1029     0584  2D86               	goto	u180
  1030     0585                     u181:
  1031     0585  2D8C               	goto	l163
  1032     0586                     u180:
  1033     0586                     l851:
  1034     0586  0872               	movf	___wmul@multiplicand,w
  1035     0587  07F4               	addwf	___wmul@product,f
  1036     0588  1803               	skipnc
  1037     0589  0AF5               	incf	___wmul@product+1,f
  1038     058A  0873               	movf	___wmul@multiplicand+1,w
  1039     058B  07F5               	addwf	___wmul@product+1,f
  1040     058C                     l163:
  1041     058C  3001               	movlw	1
  1042     058D                     u195:
  1043     058D  1003               	clrc
  1044     058E  0DF2               	rlf	___wmul@multiplicand,f
  1045     058F  0DF3               	rlf	___wmul@multiplicand+1,f
  1046     0590  3EFF               	addlw	-1
  1047     0591  1D03               	skipz
  1048     0592  2D8D               	goto	u195
  1049     0593                     l853:
  1050     0593  3001               	movlw	1
  1051     0594                     u205:
  1052     0594  1003               	clrc
  1053     0595  0CF1               	rrf	___wmul@multiplier+1,f
  1054     0596  0CF0               	rrf	___wmul@multiplier,f
  1055     0597  3EFF               	addlw	-1
  1056     0598  1D03               	skipz
  1057     0599  2D94               	goto	u205
  1058     059A                     l855:
  1059     059A  0870               	movf	___wmul@multiplier,w
  1060     059B  0471               	iorwf	___wmul@multiplier+1,w
  1061     059C  1D03               	btfss	3,2
  1062     059D  2D9F               	goto	u211
  1063     059E  2DA0               	goto	u210
  1064     059F                     u211:
  1065     059F  2D82               	goto	l849
  1066     05A0                     u210:
  1067     05A0                     l857:
  1068     05A0  0875               	movf	___wmul@product+1,w
  1069     05A1  00F1               	movwf	?___wmul+1
  1070     05A2  0874               	movf	___wmul@product,w
  1071     05A3  00F0               	movwf	?___wmul
  1072     05A4                     l165:
  1073     05A4  0008               	return
  1074     05A5                     __end_of___wmul:
  1075                           
  1076                           	psect	text4
  1077     05A5                     __ptext4:	
  1078 ;; *************** function ___lwdiv *****************
  1079 ;; Defined at:
  1080 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  divisor         2    6[COMMON] unsigned int 
  1083 ;;  dividend        2    8[COMMON] unsigned int 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  quotient        2   10[COMMON] unsigned int 
  1086 ;;  counter         1   12[COMMON] unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  2    6[COMMON] unsigned int 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0, btemp+1
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         4       0       0       0       0
  1097 ;;      Locals:         3       0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0
  1099 ;;      Totals:         7       0       0       0       0
  1100 ;;Total ram usage:        7 bytes
  1101 ;; Hardware stack levels used: 1
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_LCDOutput
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109     05A5                     ___lwdiv:	
  1110                           ;psect for function ___lwdiv
  1111                           
  1112     05A5                     l877:	
  1113                           ;incstack = 0
  1114                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1115                           
  1116     05A5  01FA               	clrf	___lwdiv@quotient
  1117     05A6  01FB               	clrf	___lwdiv@quotient+1
  1118     05A7                     l879:
  1119     05A7  0876               	movf	___lwdiv@divisor,w
  1120     05A8  0477               	iorwf	___lwdiv@divisor+1,w
  1121     05A9  1903               	btfsc	3,2
  1122     05AA  2DAC               	goto	u241
  1123     05AB  2DAD               	goto	u240
  1124     05AC                     u241:
  1125     05AC  2DE4               	goto	l899
  1126     05AD                     u240:
  1127     05AD                     l881:
  1128     05AD  01FC               	clrf	___lwdiv@counter
  1129     05AE  0AFC               	incf	___lwdiv@counter,f
  1130     05AF  2DBB               	goto	l887
  1131     05B0                     l883:
  1132     05B0  3001               	movlw	1
  1133     05B1                     u255:
  1134     05B1  1003               	clrc
  1135     05B2  0DF6               	rlf	___lwdiv@divisor,f
  1136     05B3  0DF7               	rlf	___lwdiv@divisor+1,f
  1137     05B4  3EFF               	addlw	-1
  1138     05B5  1D03               	skipz
  1139     05B6  2DB1               	goto	u255
  1140     05B7                     l885:
  1141     05B7  3001               	movlw	1
  1142     05B8  00FF               	movwf	btemp+1
  1143     05B9  087F               	movf	btemp+1,w
  1144     05BA  07FC               	addwf	___lwdiv@counter,f
  1145     05BB                     l887:
  1146     05BB  1FF7               	btfss	___lwdiv@divisor+1,7
  1147     05BC  2DBE               	goto	u261
  1148     05BD  2DBF               	goto	u260
  1149     05BE                     u261:
  1150     05BE  2DB0               	goto	l883
  1151     05BF                     u260:
  1152     05BF                     l889:
  1153     05BF  3001               	movlw	1
  1154     05C0                     u275:
  1155     05C0  1003               	clrc
  1156     05C1  0DFA               	rlf	___lwdiv@quotient,f
  1157     05C2  0DFB               	rlf	___lwdiv@quotient+1,f
  1158     05C3  3EFF               	addlw	-1
  1159     05C4  1D03               	skipz
  1160     05C5  2DC0               	goto	u275
  1161     05C6  0877               	movf	___lwdiv@divisor+1,w
  1162     05C7  0279               	subwf	___lwdiv@dividend+1,w
  1163     05C8  1D03               	skipz
  1164     05C9  2DCC               	goto	u285
  1165     05CA  0876               	movf	___lwdiv@divisor,w
  1166     05CB  0278               	subwf	___lwdiv@dividend,w
  1167     05CC                     u285:
  1168     05CC  1C03               	skipc
  1169     05CD  2DCF               	goto	u281
  1170     05CE  2DD0               	goto	u280
  1171     05CF                     u281:
  1172     05CF  2DD7               	goto	l895
  1173     05D0                     u280:
  1174     05D0                     l891:
  1175     05D0  0876               	movf	___lwdiv@divisor,w
  1176     05D1  02F8               	subwf	___lwdiv@dividend,f
  1177     05D2  0877               	movf	___lwdiv@divisor+1,w
  1178     05D3  1C03               	skipc
  1179     05D4  03F9               	decf	___lwdiv@dividend+1,f
  1180     05D5  02F9               	subwf	___lwdiv@dividend+1,f
  1181     05D6                     l893:
  1182     05D6  147A               	bsf	___lwdiv@quotient,0
  1183     05D7                     l895:
  1184     05D7  3001               	movlw	1
  1185     05D8                     u295:
  1186     05D8  1003               	clrc
  1187     05D9  0CF7               	rrf	___lwdiv@divisor+1,f
  1188     05DA  0CF6               	rrf	___lwdiv@divisor,f
  1189     05DB  3EFF               	addlw	-1
  1190     05DC  1D03               	skipz
  1191     05DD  2DD8               	goto	u295
  1192     05DE                     l897:
  1193     05DE  3001               	movlw	1
  1194     05DF  02FC               	subwf	___lwdiv@counter,f
  1195     05E0  1D03               	btfss	3,2
  1196     05E1  2DE3               	goto	u301
  1197     05E2  2DE4               	goto	u300
  1198     05E3                     u301:
  1199     05E3  2DBF               	goto	l889
  1200     05E4                     u300:
  1201     05E4                     l899:
  1202     05E4  087B               	movf	___lwdiv@quotient+1,w
  1203     05E5  00F7               	movwf	?___lwdiv+1
  1204     05E6  087A               	movf	___lwdiv@quotient,w
  1205     05E7  00F6               	movwf	?___lwdiv
  1206     05E8                     l443:
  1207     05E8  0008               	return
  1208     05E9                     __end_of___lwdiv:
  1209                           
  1210                           	psect	text5
  1211     051E                     __ptext5:	
  1212 ;; *************** function ___bmul *****************
  1213 ;; Defined at:
  1214 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  multiplier      1    wreg     unsigned char 
  1217 ;;  multiplicand    1    0[COMMON] unsigned char 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  multiplier      1    2[COMMON] unsigned char 
  1220 ;;  product         1    1[COMMON] unsigned char 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      unsigned char 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0, btemp+1
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1230 ;;      Params:         1       0       0       0       0
  1231 ;;      Locals:         2       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0
  1233 ;;      Totals:         3       0       0       0       0
  1234 ;;Total ram usage:        3 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_LCDOutput
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243     051E                     ___bmul:	
  1244                           ;psect for function ___bmul
  1245                           
  1246                           
  1247                           ;incstack = 0
  1248                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1249                           ;___bmul@multiplier stored from wreg
  1250     051E  00F2               	movwf	___bmul@multiplier
  1251     051F                     l861:
  1252     051F  01F1               	clrf	___bmul@product
  1253     0520                     l863:
  1254     0520  1C72               	btfss	___bmul@multiplier,0
  1255     0521  2D23               	goto	u221
  1256     0522  2D24               	goto	u220
  1257     0523                     u221:
  1258     0523  2D28               	goto	l867
  1259     0524                     u220:
  1260     0524                     l865:
  1261     0524  0870               	movf	___bmul@multiplicand,w
  1262     0525  00FF               	movwf	btemp+1
  1263     0526  087F               	movf	btemp+1,w
  1264     0527  07F1               	addwf	___bmul@product,f
  1265     0528                     l867:
  1266     0528  1003               	clrc
  1267     0529  0DF0               	rlf	___bmul@multiplicand,f
  1268     052A                     l869:
  1269     052A  1003               	clrc
  1270     052B  0CF2               	rrf	___bmul@multiplier,f
  1271     052C                     l871:
  1272     052C  0872               	movf	___bmul@multiplier,w
  1273     052D  1D03               	btfss	3,2
  1274     052E  2D30               	goto	u231
  1275     052F  2D31               	goto	u230
  1276     0530                     u231:
  1277     0530  2D20               	goto	l863
  1278     0531                     u230:
  1279     0531                     l873:
  1280     0531  0871               	movf	___bmul@product,w
  1281     0532                     l189:
  1282     0532  0008               	return
  1283     0533                     __end_of___bmul:
  1284                           
  1285                           	psect	text6
  1286     0533                     __ptext6:	
  1287 ;; *************** function _LCD_Data *****************
  1288 ;; Defined at:
  1289 ;;		line 111 in file "LCD_spd.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  i               1    wreg     unsigned char 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  i               1    2[COMMON] unsigned char 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2, status,0, btemp+1
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1303 ;;      Params:         0       0       0       0       0
  1304 ;;      Locals:         1       0       0       0       0
  1305 ;;      Temps:          2       0       0       0       0
  1306 ;;      Totals:         3       0       0       0       0
  1307 ;;Total ram usage:        3 bytes
  1308 ;; Hardware stack levels used: 1
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_keyscan
  1313 ;;		_LCDOutput
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317     0533                     _LCD_Data:	
  1318                           ;psect for function _LCD_Data
  1319                           
  1320                           
  1321                           ;incstack = 0
  1322                           ; Regs used in _LCD_Data: [wreg+status,2+status,0+btemp+1]
  1323                           ;LCD_Data@i stored from wreg
  1324     0533  00F2               	movwf	LCD_Data@i
  1325     0534                     l839:
  1326                           
  1327                           ;LCD_spd.c: 112:     PORTC|=0x08;
  1328     0534  1283               	bcf	3,5	;RP0=0, select bank0
  1329     0535  1303               	bcf	3,6	;RP1=0, select bank0
  1330     0536  1587               	bsf	7,3	;volatile
  1331     0537                     l841:
  1332                           
  1333                           ;LCD_spd.c: 113:     PORTD = i;
  1334     0537  0872               	movf	LCD_Data@i,w
  1335     0538  0088               	movwf	8	;volatile
  1336     0539                     l843:
  1337                           
  1338                           ;LCD_spd.c: 114:     PORTC|=0x01;
  1339     0539  1407               	bsf	7,0	;volatile
  1340                           
  1341                           ;LCD_spd.c: 115:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1342     053A  30C3               	movlw	195
  1343     053B  00F1               	movwf	??_LCD_Data+1
  1344     053C  30CD               	movlw	205
  1345     053D  00F0               	movwf	??_LCD_Data
  1346     053E                     u357:
  1347     053E  0BF0               	decfsz	??_LCD_Data,f
  1348     053F  2D3E               	goto	u357
  1349     0540  0BF1               	decfsz	??_LCD_Data+1,f
  1350     0541  2D3E               	goto	u357
  1351     0542                     l845:
  1352                           
  1353                           ;LCD_spd.c: 116:     PORTC&=~0x01;
  1354     0542  30FE               	movlw	254
  1355     0543  00FF               	movwf	btemp+1
  1356     0544  087F               	movf	btemp+1,w
  1357     0545  1283               	bcf	3,5	;RP0=0, select bank0
  1358     0546  1303               	bcf	3,6	;RP1=0, select bank0
  1359     0547  0587               	andwf	7,f	;volatile
  1360     0548                     l77:
  1361     0548  0008               	return
  1362     0549                     __end_of_LCD_Data:
  1363                           
  1364                           	psect	text7
  1365     05E9                     __ptext7:	
  1366 ;; *************** function _init *****************
  1367 ;; Defined at:
  1368 ;;		line 72 in file "LCD_spd.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;		None
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;		None
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1382 ;;      Params:         0       0       0       0       0
  1383 ;;      Locals:         0       0       0       0       0
  1384 ;;      Temps:          2       0       0       0       0
  1385 ;;      Totals:         2       0       0       0       0
  1386 ;;Total ram usage:        2 bytes
  1387 ;; Hardware stack levels used: 1
  1388 ;; Hardware stack levels required when called: 1
  1389 ;; This function calls:
  1390 ;;		_LCD_Comm
  1391 ;; This function is called by:
  1392 ;;		_main
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396     05E9                     _init:	
  1397                           ;psect for function _init
  1398                           
  1399     05E9                     l905:	
  1400                           ;incstack = 0
  1401                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1402                           
  1403                           
  1404                           ;LCD_spd.c: 73:     TRISC=0x00;
  1405     05E9  1683               	bsf	3,5	;RP0=1, select bank1
  1406     05EA  1303               	bcf	3,6	;RP1=0, select bank1
  1407     05EB  0187               	clrf	7	;volatile
  1408                           
  1409                           ;LCD_spd.c: 74:     TRISD=0x00;
  1410     05EC  0188               	clrf	8	;volatile
  1411     05ED                     l907:
  1412                           
  1413                           ;LCD_spd.c: 75:     TRISB=0xF0;
  1414     05ED  30F0               	movlw	240
  1415     05EE  0086               	movwf	6	;volatile
  1416     05EF                     l909:
  1417                           
  1418                           ;LCD_spd.c: 76:     OPTION_REG&=0x7F;
  1419     05EF  307F               	movlw	127
  1420     05F0  00FF               	movwf	btemp+1
  1421     05F1  087F               	movf	btemp+1,w
  1422     05F2  0581               	andwf	1,f	;volatile
  1423     05F3                     l911:
  1424                           
  1425                           ;LCD_spd.c: 77:     LCD_Comm(0x38);
  1426     05F3  3038               	movlw	56
  1427     05F4  120A  118A  2549  120A  118A  	fcall	_LCD_Comm
  1428     05F9                     l913:
  1429                           
  1430                           ;LCD_spd.c: 78:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1431     05F9  30C3               	movlw	195
  1432     05FA  00F4               	movwf	??_init+1
  1433     05FB  30CD               	movlw	205
  1434     05FC  00F3               	movwf	??_init
  1435     05FD                     u367:
  1436     05FD  0BF3               	decfsz	??_init,f
  1437     05FE  2DFD               	goto	u367
  1438     05FF  0BF4               	decfsz	??_init+1,f
  1439     0600  2DFD               	goto	u367
  1440     0601                     l915:
  1441                           
  1442                           ;LCD_spd.c: 79:     LCD_Comm(0x38);
  1443     0601  3038               	movlw	56
  1444     0602  120A  118A  2549  120A  118A  	fcall	_LCD_Comm
  1445     0607                     l917:
  1446                           
  1447                           ;LCD_spd.c: 80:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1448     0607  30C3               	movlw	195
  1449     0608  00F4               	movwf	??_init+1
  1450     0609  30CD               	movlw	205
  1451     060A  00F3               	movwf	??_init
  1452     060B                     u377:
  1453     060B  0BF3               	decfsz	??_init,f
  1454     060C  2E0B               	goto	u377
  1455     060D  0BF4               	decfsz	??_init+1,f
  1456     060E  2E0B               	goto	u377
  1457     060F                     l919:
  1458                           
  1459                           ;LCD_spd.c: 81:     LCD_Comm(0x38);
  1460     060F  3038               	movlw	56
  1461     0610  120A  118A  2549  120A  118A  	fcall	_LCD_Comm
  1462     0615                     l921:
  1463                           
  1464                           ;LCD_spd.c: 82:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1465     0615  30C3               	movlw	195
  1466     0616  00F4               	movwf	??_init+1
  1467     0617  30CD               	movlw	205
  1468     0618  00F3               	movwf	??_init
  1469     0619                     u387:
  1470     0619  0BF3               	decfsz	??_init,f
  1471     061A  2E19               	goto	u387
  1472     061B  0BF4               	decfsz	??_init+1,f
  1473     061C  2E19               	goto	u387
  1474     061D                     l923:
  1475                           
  1476                           ;LCD_spd.c: 83:     LCD_Comm(0x38);
  1477     061D  3038               	movlw	56
  1478     061E  120A  118A  2549  120A  118A  	fcall	_LCD_Comm
  1479     0623                     l925:
  1480                           
  1481                           ;LCD_spd.c: 84:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1482     0623  30C3               	movlw	195
  1483     0624  00F4               	movwf	??_init+1
  1484     0625  30CD               	movlw	205
  1485     0626  00F3               	movwf	??_init
  1486     0627                     u397:
  1487     0627  0BF3               	decfsz	??_init,f
  1488     0628  2E27               	goto	u397
  1489     0629  0BF4               	decfsz	??_init+1,f
  1490     062A  2E27               	goto	u397
  1491     062B                     l927:
  1492                           
  1493                           ;LCD_spd.c: 85:     LCD_Comm(0x0E);
  1494     062B  300E               	movlw	14
  1495     062C  120A  118A  2549  120A  118A  	fcall	_LCD_Comm
  1496     0631                     l929:
  1497                           
  1498                           ;LCD_spd.c: 86:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1499     0631  30C3               	movlw	195
  1500     0632  00F4               	movwf	??_init+1
  1501     0633  30CD               	movlw	205
  1502     0634  00F3               	movwf	??_init
  1503     0635                     u407:
  1504     0635  0BF3               	decfsz	??_init,f
  1505     0636  2E35               	goto	u407
  1506     0637  0BF4               	decfsz	??_init+1,f
  1507     0638  2E35               	goto	u407
  1508     0639                     l931:
  1509                           
  1510                           ;LCD_spd.c: 87:     LCD_Comm(0x06);
  1511     0639  3006               	movlw	6
  1512     063A  120A  118A  2549  120A  118A  	fcall	_LCD_Comm
  1513     063F                     l933:
  1514                           
  1515                           ;LCD_spd.c: 88:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1516     063F  30C3               	movlw	195
  1517     0640  00F4               	movwf	??_init+1
  1518     0641  30CD               	movlw	205
  1519     0642  00F3               	movwf	??_init
  1520     0643                     u417:
  1521     0643  0BF3               	decfsz	??_init,f
  1522     0644  2E43               	goto	u417
  1523     0645  0BF4               	decfsz	??_init+1,f
  1524     0646  2E43               	goto	u417
  1525     0647                     l935:
  1526                           
  1527                           ;LCD_spd.c: 89:     LCD_Comm(0x01);
  1528     0647  3001               	movlw	1
  1529     0648  120A  118A  2549  120A  118A  	fcall	_LCD_Comm
  1530     064D                     l937:
  1531                           
  1532                           ;LCD_spd.c: 90:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1533     064D  30C3               	movlw	195
  1534     064E  00F4               	movwf	??_init+1
  1535     064F  30CD               	movlw	205
  1536     0650  00F3               	movwf	??_init
  1537     0651                     u427:
  1538     0651  0BF3               	decfsz	??_init,f
  1539     0652  2E51               	goto	u427
  1540     0653  0BF4               	decfsz	??_init+1,f
  1541     0654  2E51               	goto	u427
  1542     0655                     l68:
  1543     0655  0008               	return
  1544     0656                     __end_of_init:
  1545                           
  1546                           	psect	text8
  1547     0549                     __ptext8:	
  1548 ;; *************** function _LCD_Comm *****************
  1549 ;; Defined at:
  1550 ;;		line 103 in file "LCD_spd.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;  i               1    wreg     unsigned char 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  i               1    2[COMMON] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, status,2, status,0, btemp+1
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1564 ;;      Params:         0       0       0       0       0
  1565 ;;      Locals:         1       0       0       0       0
  1566 ;;      Temps:          2       0       0       0       0
  1567 ;;      Totals:         3       0       0       0       0
  1568 ;;Total ram usage:        3 bytes
  1569 ;; Hardware stack levels used: 1
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_keyscan
  1574 ;;		_init
  1575 ;;		_LCDOutput
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579     0549                     _LCD_Comm:	
  1580                           ;psect for function _LCD_Comm
  1581                           
  1582                           
  1583                           ;incstack = 0
  1584                           ; Regs used in _LCD_Comm: [wreg+status,2+status,0+btemp+1]
  1585                           ;LCD_Comm@i stored from wreg
  1586     0549  00F2               	movwf	LCD_Comm@i
  1587     054A                     l831:
  1588                           
  1589                           ;LCD_spd.c: 104:     PORTC&=0xF7;
  1590     054A  30F7               	movlw	247
  1591     054B  00FF               	movwf	btemp+1
  1592     054C  087F               	movf	btemp+1,w
  1593     054D  1283               	bcf	3,5	;RP0=0, select bank0
  1594     054E  1303               	bcf	3,6	;RP1=0, select bank0
  1595     054F  0587               	andwf	7,f	;volatile
  1596     0550                     l833:
  1597                           
  1598                           ;LCD_spd.c: 105:     PORTD = i;
  1599     0550  0872               	movf	LCD_Comm@i,w
  1600     0551  0088               	movwf	8	;volatile
  1601     0552                     l835:
  1602                           
  1603                           ;LCD_spd.c: 106:     PORTC|=0x01;
  1604     0552  1407               	bsf	7,0	;volatile
  1605     0553                     l837:
  1606                           
  1607                           ;LCD_spd.c: 107:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1608     0553  30C3               	movlw	195
  1609     0554  00F1               	movwf	??_LCD_Comm+1
  1610     0555  30CD               	movlw	205
  1611     0556  00F0               	movwf	??_LCD_Comm
  1612     0557                     u437:
  1613     0557  0BF0               	decfsz	??_LCD_Comm,f
  1614     0558  2D57               	goto	u437
  1615     0559  0BF1               	decfsz	??_LCD_Comm+1,f
  1616     055A  2D57               	goto	u437
  1617                           
  1618                           ;LCD_spd.c: 108:     PORTC&=~0x01;
  1619     055B  30FE               	movlw	254
  1620     055C  00FF               	movwf	btemp+1
  1621     055D  087F               	movf	btemp+1,w
  1622     055E  1283               	bcf	3,5	;RP0=0, select bank0
  1623     055F  1303               	bcf	3,6	;RP1=0, select bank0
  1624     0560  0587               	andwf	7,f	;volatile
  1625     0561                     l74:
  1626     0561  0008               	return
  1627     0562                     __end_of_LCD_Comm:
  1628     007E                     btemp	set	126	;btemp
  1629     007E                     wtemp0	set	126
  1630                           
  1631                           	psect	config
  1632                           
  1633                           ;Config register CONFIG @ 0x2007
  1634                           ;	Oscillator Selection bits
  1635                           ;	FOSC = EXTRC, RC oscillator
  1636                           ;	Watchdog Timer Enable bit
  1637                           ;	WDTE = OFF, WDT disabled
  1638                           ;	Power-up Timer Enable bit
  1639                           ;	PWRTE = OFF, PWRT disabled
  1640                           ;	Brown-out Reset Enable bit
  1641                           ;	BOREN = OFF, BOR disabled
  1642                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1643                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1644                           ;	Data EEPROM Memory Code Protection bit
  1645                           ;	CPD = OFF, Data EEPROM code protection off
  1646                           ;	Flash Program Memory Write Enable bits
  1647                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1648                           ;	In-Circuit Debugger Mode bit
  1649                           ;	DEBUG = 0x1, unprogrammed default
  1650                           ;	Flash Program Memory Code Protection bit
  1651                           ;	CP = OFF, Code protection off
  1652     2007                     	org	8199
  1653     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     10      52
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LCDOutput->___lwdiv
    ___lwdiv->___wmul
    _init->_LCD_Comm

Critical Paths under _main in BANK0

    _main->_keyscan
    _keyscan->_LCDOutput

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1988
                               _init
                            _keyscan
 ---------------------------------------------------------------------------------
 (1) _keyscan                                              2     2      0    1966
                                              8 BANK0      2     2      0
                          _LCDOutput
                           _LCD_Comm
                           _LCD_Data
 ---------------------------------------------------------------------------------
 (2) _LCDOutput                                            8     6      2    1922
                                              0 BANK0      8     6      2
                           _LCD_Comm
                           _LCD_Data
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              6 COMMON     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     320
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _LCD_Data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      22
                                              3 COMMON     2     2      0
                           _LCD_Comm
 ---------------------------------------------------------------------------------
 (2) _LCD_Comm                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _LCD_Comm
   _keyscan
     _LCDOutput
       _LCD_Comm
       _LCD_Data
       ___bmul
       ___lwdiv
         ___wmul (ARG)
       ___wmul
     _LCD_Comm
     _LCD_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      34       5       65.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      41      12        0.0%
ABS                  0      0      41       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Jan 08 19:08:05 2024

                      _j 003E                        _x 0048                        pc 0002  
         ___bmul@product 0071                       l71 07E1                       l65 0708  
                     l74 0561                       l68 0655                       l77 0548  
                     _d0 0040                       _d1 0042                       _d2 0044  
                     _d3 0046                       fsr 0004      ___wmul@multiplicand 0072  
                    l163 058C                      l165 05A4                      l443 05E8  
                    l189 0532                      l831 054A                      l911 05F3  
                    l903 0709                      l833 0550                      l921 0615  
                    l913 05F9                      l905 05E9                      l841 0537  
                    l835 0552                      l931 0639                      l923 061D  
                    l915 0601                      l907 05ED                      l843 0539  
                    l851 0586                      l837 0553                      l933 063F  
                    l925 0623                      l917 0607                      l909 05EF  
                    l845 0542                      l861 051F                      l853 0593  
                    l941 065C                      l935 0647                      l927 062B  
                    l919 060F                      l839 0534                      l871 052C  
                    l863 0520                      l855 059A                      l847 0580  
                    l951 066F                      l943 0662                      l937 064D  
                    l929 0631                      l873 0531                      l865 0524  
                    l881 05AD                      l857 05A0                      l849 0582  
                    l953 0675                      l867 0528                      l891 05D0  
                    l883 05B0                      l971 06AD                      l963 0685  
                    l955 067B                      l939 0656                      l869 052A  
                    l893 05D6                      l885 05B7                      l877 05A5  
                    l981 06D8                      l973 06BC                      l965 068F  
                    l957 0681                      l949 0665                      l895 05D7  
                    l887 05BB                      l879 05A7                      l991 06EB  
                    l983 06DE                      l975 06C0                      l967 0695  
                    l897 05DE                      l889 05BF                      l985 06E2  
                    l977 06C6                      l969 069B                      l899 05E4  
                    l979 06D2                      l989 06E9                      l997 06F2  
                    u210 05A0                      u211 059F                      u220 0524  
                    u300 05E4                      u221 0523                      u301 05E3  
                    u205 0594                      u230 0531                      u310 067B  
                    u231 0530                      u311 067A                      u240 05AD  
                    u320 069B                      u241 05AC                      u321 069A  
                    u330 06BC                      u331 06BB                      u260 05BF  
                    u180 0586                      u340 06DE                      u261 05BE  
                    u181 0585                      u341 06DD                      u407 0635  
                    u255 05B1                      u280 05D0                      u417 0643  
                    u281 05CF                      u427 0651                      u275 05C0  
                    u195 058D                      u437 0557                      u357 053E  
                    u285 05CC                      u367 05FD                      u295 05D8  
                    u377 060B                      u387 0619                      u397 0627  
                    _arr 0020                      _val 0049                      fsr0 0004  
                    indf 0000                     l1003 04F9                     l1005 04FE  
                   l1007 0502                     l1029 06FA                     _main 04F9  
                   _init 05E9                     btemp 007E                     start 0000  
      ___bmul@multiplier 0072         __end_of_LCD_Data 0549         __end_of_LCD_Comm 0562  
                  ?_main 0070                    ?_init 0070          __end_of___lwdiv 05E9  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
        __end_of_keyscan 0709                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07E2             __end_of_main 050B  
           __end_of_init 0656                   ??_main 007D                   ??_init 0073  
      __end_of_LCDOutput 07E2                   ___bmul 051E                   ___wmul 0580  
              ??___lwdiv 007A                ??_keyscan 0052                ?_LCD_Data 0070  
__end_of__initialization 07FC                ?_LCD_Comm 0070                LCD_Data@i 0072  
              LCD_Comm@i 0072      ___bmul@multiplicand 0070           __pcstackCOMMON 0070  
           __pidataBANK0 0562               __pbssBANK0 003E               ??_LCD_Data 0070  
             ??_LCD_Comm 0070               __pmaintext 04F9                  ?___bmul 0070  
                ?___wmul 0070                  ___lwdiv 05A5                  __ptext1 0656  
                __ptext2 0709                  __ptext3 0580                  __ptext4 05A5  
                __ptext5 051E                  __ptext6 0533                  __ptext7 05E9  
                __ptext8 0549                  _keyscan 0656                _LCDOutput 0709  
   end_of_initialization 07FC               ?_LCDOutput 004A           __end_of___bmul 0533  
         __end_of___wmul 05A5               LCDOutput@i 004A      start_initialization 07E2  
               ??___bmul 0071                 ??___wmul 0074               init_fetch0 050B  
            __pdataBANK0 0020                ___latbits 0002            __pcstackBANK0 004A  
            ??_LCDOutput 004C         ___lwdiv@dividend 0078                 ?___lwdiv 0076  
               ?_keyscan 0070         ___lwdiv@quotient 007A                 _LCD_Data 0533  
               _LCD_Comm 0549           ___wmul@product 0074        ___wmul@multiplier 0070  
        ___lwdiv@divisor 0076          ___lwdiv@counter 007C                 init_ram0 050F  
             _OPTION_REG 0081  
