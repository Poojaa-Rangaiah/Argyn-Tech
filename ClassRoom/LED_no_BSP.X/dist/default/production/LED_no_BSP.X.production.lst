

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Feb 12 11:26:38 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 22/03/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0000                     	;# 
    46     0001                     	;# 
    47     0002                     	;# 
    48     0003                     	;# 
    49     0004                     	;# 
    50     0005                     	;# 
    51     0006                     	;# 
    52     0007                     	;# 
    53     0008                     	;# 
    54     0009                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000D                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0015                     	;# 
    69     0016                     	;# 
    70     0017                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001B                     	;# 
    75     001B                     	;# 
    76     001C                     	;# 
    77     001D                     	;# 
    78     001E                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     0087                     	;# 
    84     0088                     	;# 
    85     0089                     	;# 
    86     008C                     	;# 
    87     008D                     	;# 
    88     008E                     	;# 
    89     0091                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0094                     	;# 
    93     0098                     	;# 
    94     0099                     	;# 
    95     009C                     	;# 
    96     009D                     	;# 
    97     009E                     	;# 
    98     009F                     	;# 
    99     010C                     	;# 
   100     010D                     	;# 
   101     010E                     	;# 
   102     010F                     	;# 
   103     018C                     	;# 
   104     018D                     	;# 
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     0007                     	;# 
   113     0008                     	;# 
   114     0009                     	;# 
   115     000A                     	;# 
   116     000B                     	;# 
   117     000C                     	;# 
   118     000D                     	;# 
   119     000E                     	;# 
   120     000E                     	;# 
   121     000F                     	;# 
   122     0010                     	;# 
   123     0011                     	;# 
   124     0012                     	;# 
   125     0013                     	;# 
   126     0014                     	;# 
   127     0015                     	;# 
   128     0015                     	;# 
   129     0016                     	;# 
   130     0017                     	;# 
   131     0018                     	;# 
   132     0019                     	;# 
   133     001A                     	;# 
   134     001B                     	;# 
   135     001B                     	;# 
   136     001C                     	;# 
   137     001D                     	;# 
   138     001E                     	;# 
   139     001F                     	;# 
   140     0081                     	;# 
   141     0085                     	;# 
   142     0086                     	;# 
   143     0087                     	;# 
   144     0088                     	;# 
   145     0089                     	;# 
   146     008C                     	;# 
   147     008D                     	;# 
   148     008E                     	;# 
   149     0091                     	;# 
   150     0092                     	;# 
   151     0093                     	;# 
   152     0094                     	;# 
   153     0098                     	;# 
   154     0099                     	;# 
   155     009C                     	;# 
   156     009D                     	;# 
   157     009E                     	;# 
   158     009F                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165                           
   166                           	psect	nvCOMMON
   167     0070                     __pnvCOMMON:
   168     0070                     _pullup:
   169     0070                     	ds	2
   170     0072                     _dataC:
   171     0072                     	ds	2
   172     0074                     _dirC:
   173     0074                     	ds	2
   174     0076                     _dataB:
   175     0076                     	ds	2
   176     0078                     _dirB:
   177     0078                     	ds	2
   178     007A                     _val:
   179     007A                     	ds	1
   180                           
   181                           	psect	cinit
   182     07FC                     start_initialization:	
   183                           ; #config settings
   184                           
   185     07FC                     __initialization:
   186     07FC                     end_of_initialization:	
   187                           ;End of C runtime variable initialization code
   188                           
   189     07FC                     __end_of__initialization:
   190     07FC  0183               	clrf	3
   191     07FD  120A  118A  2FB7   	ljmp	_main	;jump to C main() function
   192                           
   193                           	psect	cstackCOMMON
   194     007B                     __pcstackCOMMON:
   195     007B                     ?_init:
   196     007B                     ??_init:	
   197                           ; 1 bytes @ 0x0
   198                           
   199     007B                     ?_main:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     007B                     ??_main:	
   203                           ; 1 bytes @ 0x0
   204                           
   205                           
   206                           ; 1 bytes @ 0x0
   207     007B                     	ds	2
   208                           
   209                           	psect	maintext
   210     07B7                     __pmaintext:	
   211 ;;
   212 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   213 ;;
   214 ;; *************** function _main *****************
   215 ;; Defined at:
   216 ;;		line 4 in file "LED_noBSP.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   225 ;; Tracked objects:
   226 ;;		On entry : B00/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   230 ;;      Params:         0       0       0       0       0
   231 ;;      Locals:         0       0       0       0       0
   232 ;;      Temps:          2       0       0       0       0
   233 ;;      Totals:         2       0       0       0       0
   234 ;;Total ram usage:        2 bytes
   235 ;; Hardware stack levels required when called: 1
   236 ;; This function calls:
   237 ;;		_init
   238 ;; This function is called by:
   239 ;;		Startup code after reset
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243     07B7                     _main:	
   244                           ;psect for function _main
   245                           
   246     07B7                     l587:	
   247                           ;incstack = 0
   248                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   249                           
   250                           
   251                           ;LED_noBSP.c: 5:     init();
   252     07B7  120A  118A  278E  120A  118A  	fcall	_init
   253     07BC                     l589:
   254                           
   255                           ;LED_noBSP.c: 7:         val = *dataB;
   256     07BC  0876               	movf	_dataB,w
   257     07BD  0084               	movwf	4
   258     07BE  1783               	bsf	3,7
   259     07BF  1C77               	btfss	_dataB+1,0
   260     07C0  1383               	bcf	3,7
   261     07C1  0800               	movf	0,w
   262     07C2  00FA               	movwf	_val
   263                           
   264                           ;LED_noBSP.c: 8:         switch(val) {
   265     07C3  2FE3               	goto	l601
   266     07C4                     l591:
   267                           
   268                           ;LED_noBSP.c: 10:                 *dataC = 0x02;
   269     07C4  0872               	movf	_dataC,w
   270     07C5  0084               	movwf	4
   271     07C6  1783               	bsf	3,7
   272     07C7  1C73               	btfss	_dataC+1,0
   273     07C8  1383               	bcf	3,7
   274     07C9  3002               	movlw	2
   275     07CA  0080               	movwf	0
   276                           
   277                           ;LED_noBSP.c: 11:                 break;
   278     07CB  2FBC               	goto	l589
   279     07CC                     l593:
   280                           
   281                           ;LED_noBSP.c: 13:                 *dataC = 0x04;
   282     07CC  0872               	movf	_dataC,w
   283     07CD  0084               	movwf	4
   284     07CE  1783               	bsf	3,7
   285     07CF  1C73               	btfss	_dataC+1,0
   286     07D0  1383               	bcf	3,7
   287     07D1  3004               	movlw	4
   288     07D2  0080               	movwf	0
   289                           
   290                           ;LED_noBSP.c: 14:                 break;
   291     07D3  2FBC               	goto	l589
   292     07D4                     l595:
   293                           
   294                           ;LED_noBSP.c: 16:                 *dataC = 0x00;
   295     07D4  0872               	movf	_dataC,w
   296     07D5  0084               	movwf	4
   297     07D6  1783               	bsf	3,7
   298     07D7  1C73               	btfss	_dataC+1,0
   299     07D8  1383               	bcf	3,7
   300     07D9  0180               	clrf	0
   301                           
   302                           ;LED_noBSP.c: 17:                 break;
   303     07DA  2FBC               	goto	l589
   304     07DB                     l597:
   305                           
   306                           ;LED_noBSP.c: 19:                 *dataC = 0x06;
   307     07DB  0872               	movf	_dataC,w
   308     07DC  0084               	movwf	4
   309     07DD  1783               	bsf	3,7
   310     07DE  1C73               	btfss	_dataC+1,0
   311     07DF  1383               	bcf	3,7
   312     07E0  3006               	movlw	6
   313     07E1  0080               	movwf	0
   314                           
   315                           ;LED_noBSP.c: 20:                 break;
   316     07E2  2FBC               	goto	l589
   317     07E3                     l601:
   318     07E3  087A               	movf	_val,w
   319     07E4  00FB               	movwf	??_main
   320     07E5  01FC               	clrf	??_main+1
   321                           
   322                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   323                           ; Switch size 1, requested type "simple"
   324                           ; Number of cases is 1, Range of values is 0 to 0
   325                           ; switch strategies available:
   326                           ; Name         Instructions Cycles
   327                           ; simple_byte            4     3 (average)
   328                           ; direct_byte           11     8 (fixed)
   329                           ; jumptable            260     6 (fixed)
   330                           ;	Chosen strategy is simple_byte
   331     07E6  087C               	movf	??_main+1,w
   332     07E7  3A00               	xorlw	0	; case 0
   333     07E8  1903               	skipnz
   334     07E9  2FEB               	goto	l627
   335     07EA  2FBC               	goto	l589
   336     07EB                     l627:
   337                           
   338                           ; Switch size 1, requested type "simple"
   339                           ; Number of cases is 4, Range of values is 112 to 224
   340                           ; switch strategies available:
   341                           ; Name         Instructions Cycles
   342                           ; simple_byte           13     7 (average)
   343                           ; jumptable            263     9 (fixed)
   344                           ;	Chosen strategy is simple_byte
   345     07EB  087B               	movf	??_main,w
   346     07EC  3A70               	xorlw	112	; case 112
   347     07ED  1903               	skipnz
   348     07EE  2FDB               	goto	l597
   349     07EF  3AC0               	xorlw	192	; case 176
   350     07F0  1903               	skipnz
   351     07F1  2FD4               	goto	l595
   352     07F2  3A60               	xorlw	96	; case 208
   353     07F3  1903               	skipnz
   354     07F4  2FCC               	goto	l593
   355     07F5  3A30               	xorlw	48	; case 224
   356     07F6  1903               	skipnz
   357     07F7  2FC4               	goto	l591
   358     07F8  2FBC               	goto	l589
   359     07F9  120A  118A  2800   	ljmp	start
   360     07FC                     __end_of_main:
   361                           
   362                           	psect	text1
   363     078E                     __ptext1:	
   364 ;; *************** function _init *****************
   365 ;; Defined at:
   366 ;;		line 24 in file "LED_noBSP.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;		None
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		wreg, fsr0l, fsr0h, status,2, btemp+1
   375 ;; Tracked objects:
   376 ;;		On entry : 0/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   380 ;;      Params:         0       0       0       0       0
   381 ;;      Locals:         0       0       0       0       0
   382 ;;      Temps:          0       0       0       0       0
   383 ;;      Totals:         0       0       0       0       0
   384 ;;Total ram usage:        0 bytes
   385 ;; Hardware stack levels used: 1
   386 ;; This function calls:
   387 ;;		Nothing
   388 ;; This function is called by:
   389 ;;		_main
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393     078E                     _init:	
   394                           ;psect for function _init
   395                           
   396     078E                     l575:	
   397                           ;incstack = 0
   398                           ; Regs used in _init: [wreg-fsr0h+status,2+btemp+1]
   399                           
   400                           
   401                           ;LED_noBSP.c: 25:     dirB = (unsigned char *)0x86;
   402     078E  3086               	movlw	134
   403     078F  00F8               	movwf	_dirB
   404     0790  3000               	movlw	0
   405     0791  00F9               	movwf	_dirB+1
   406                           
   407                           ;LED_noBSP.c: 26:     dirC = (unsigned char *)0x87;
   408     0792  3087               	movlw	135
   409     0793  00F4               	movwf	_dirC
   410     0794  3000               	movlw	0
   411     0795  00F5               	movwf	_dirC+1
   412                           
   413                           ;LED_noBSP.c: 27:     dataB = (unsigned char *)0x06;
   414     0796  3006               	movlw	6
   415     0797  00F6               	movwf	_dataB
   416     0798  3000               	movlw	0
   417     0799  00F7               	movwf	_dataB+1
   418                           
   419                           ;LED_noBSP.c: 28:     dataC = (unsigned char *)0x07;
   420     079A  3007               	movlw	7
   421     079B  00F2               	movwf	_dataC
   422     079C  3000               	movlw	0
   423     079D  00F3               	movwf	_dataC+1
   424                           
   425                           ;LED_noBSP.c: 29:     pullup = (unsigned char *)0x81;
   426     079E  3081               	movlw	129
   427     079F  00F0               	movwf	_pullup
   428     07A0  3000               	movlw	0
   429     07A1  00F1               	movwf	_pullup+1
   430     07A2                     l577:
   431                           
   432                           ;LED_noBSP.c: 30:     *pullup = (*pullup)&0x7F;
   433     07A2  1683               	bsf	3,5	;RP0=1, select bank1
   434     07A3  1303               	bcf	3,6	;RP1=0, select bank1
   435     07A4  0801               	movf	1,w
   436     07A5  397F               	andlw	127
   437     07A6  0081               	movwf	1
   438     07A7                     l579:
   439                           
   440                           ;LED_noBSP.c: 31:     *dirB = 0xF0;
   441     07A7  30F0               	movlw	240
   442     07A8  0086               	movwf	6
   443     07A9                     l581:
   444                           
   445                           ;LED_noBSP.c: 32:     *dirC = 0x00;
   446     07A9  0187               	clrf	7
   447     07AA                     l583:
   448                           
   449                           ;LED_noBSP.c: 33:     *dataB = 0x00;
   450     07AA  0876               	movf	_dataB,w
   451     07AB  0084               	movwf	4
   452     07AC  1783               	bsf	3,7
   453     07AD  1C77               	btfss	_dataB+1,0
   454     07AE  1383               	bcf	3,7
   455     07AF  0180               	clrf	0
   456     07B0                     l585:
   457                           
   458                           ;LED_noBSP.c: 34:     *dataC = 0x00;
   459     07B0  0872               	movf	_dataC,w
   460     07B1  0084               	movwf	4
   461     07B2  1783               	bsf	3,7
   462     07B3  1C73               	btfss	_dataC+1,0
   463     07B4  1383               	bcf	3,7
   464     07B5  0180               	clrf	0
   465     07B6                     l31:
   466     07B6  0008               	return
   467     07B7                     __end_of_init:
   468     007E                     btemp	set	126	;btemp
   469     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    dataB	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), NULL(NULL[0]), 

    dataC	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), NULL(NULL[0]), 

    dirB	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), NULL(NULL[0]), 

    dirC	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), NULL(NULL[0]), 

    pullup	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMMON     2     2      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Feb 12 11:26:38 2024

                     l31 07B6                      l601 07E3                      l627 07EB  
                    l581 07A9                      l583 07AA                      l575 078E  
                    l591 07C4                      l585 07B0                      l577 07A2  
                    l593 07CC                      l579 07A7                      l595 07D4  
                    l587 07B7                      l597 07DB                      l589 07BC  
                    _val 007A                      fsr0 0004                      indf 0000  
                   _dirB 0078                     _dirC 0074                     _main 07B7  
                   _init 078E                     btemp 007E                     start 0000  
                  ?_main 007B                    ?_init 007B                    _dataB 0076  
                  _dataC 0072                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC             __end_of_init 07B7  
                 ??_main 007B                   ??_init 007B                   _pullup 0070  
__end_of__initialization 07FC           __pcstackCOMMON 007B               __pnvCOMMON 0070  
             __pmaintext 07B7                  __ptext1 078E     end_of_initialization 07FC  
    start_initialization 07FC                ___latbits 0002  
