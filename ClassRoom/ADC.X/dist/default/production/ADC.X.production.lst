

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Jan 25 10:12:59 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 22/03/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0098                     	;# 
   105     0099                     	;# 
   106     009C                     	;# 
   107     009D                     	;# 
   108     009E                     	;# 
   109     009F                     	;# 
   110     010C                     	;# 
   111     010D                     	;# 
   112     010E                     	;# 
   113     010F                     	;# 
   114     018C                     	;# 
   115     018D                     	;# 
   116     0000                     	;# 
   117     0001                     	;# 
   118     0002                     	;# 
   119     0003                     	;# 
   120     0004                     	;# 
   121     0005                     	;# 
   122     0006                     	;# 
   123     0007                     	;# 
   124     0008                     	;# 
   125     0009                     	;# 
   126     000A                     	;# 
   127     000B                     	;# 
   128     000C                     	;# 
   129     000D                     	;# 
   130     000E                     	;# 
   131     000E                     	;# 
   132     000F                     	;# 
   133     0010                     	;# 
   134     0011                     	;# 
   135     0012                     	;# 
   136     0013                     	;# 
   137     0014                     	;# 
   138     0015                     	;# 
   139     0015                     	;# 
   140     0016                     	;# 
   141     0017                     	;# 
   142     0018                     	;# 
   143     0019                     	;# 
   144     001A                     	;# 
   145     001B                     	;# 
   146     001B                     	;# 
   147     001C                     	;# 
   148     001D                     	;# 
   149     001E                     	;# 
   150     001F                     	;# 
   151     0081                     	;# 
   152     0085                     	;# 
   153     0086                     	;# 
   154     0087                     	;# 
   155     0088                     	;# 
   156     0089                     	;# 
   157     008C                     	;# 
   158     008D                     	;# 
   159     008E                     	;# 
   160     0091                     	;# 
   161     0092                     	;# 
   162     0093                     	;# 
   163     0094                     	;# 
   164     0098                     	;# 
   165     0099                     	;# 
   166     009C                     	;# 
   167     009D                     	;# 
   168     009E                     	;# 
   169     009F                     	;# 
   170     010C                     	;# 
   171     010D                     	;# 
   172     010E                     	;# 
   173     010F                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176     0008                     _PORTD	set	8
   177     0007                     _PORTC	set	7
   178     001E                     _ADRESH	set	30
   179     001F                     _ADCON0	set	31
   180     009F                     _ADCON1	set	159
   181     0088                     _TRISD	set	136
   182     0087                     _TRISC	set	135
   183     0085                     _TRISA	set	133
   184     009E                     _ADRESL	set	158
   185                           
   186                           	psect	cinit
   187     07F3                     start_initialization:	
   188                           ; #config settings
   189                           
   190     07F3                     __initialization:
   191                           
   192                           ; Clear objects allocated to BANK0
   193     07F3  1383               	bcf	3,7	;select IRP bank0
   194     07F4  3020               	movlw	low __pbssBANK0
   195     07F5  0084               	movwf	4
   196     07F6  3030               	movlw	low (__pbssBANK0+16)
   197     07F7  120A  118A  2535  120A  118A  	fcall	clear_ram0
   198     07FC                     end_of_initialization:	
   199                           ;End of C runtime variable initialization code
   200                           
   201     07FC                     __end_of__initialization:
   202     07FC  0183               	clrf	3
   203     07FD  120A  118A  2F52   	ljmp	_main	;jump to C main() function
   204                           
   205                           	psect	bssBANK0
   206     0020                     __pbssBANK0:
   207     0020                     _voltage:
   208     0020                     	ds	4
   209     0024                     _val:
   210     0024                     	ds	4
   211     0028                     _k:
   212     0028                     	ds	2
   213     002A                     _m:
   214     002A                     	ds	2
   215     002C                     _loval:
   216     002C                     	ds	2
   217     002E                     _hival:
   218     002E                     	ds	2
   219                           
   220                           	psect	clrtext
   221     0535                     clear_ram0:	
   222                           ;	Called with FSR containing the base address, and
   223                           ;	W with the last address+1
   224                           
   225     0535  0064               	clrwdt	;clear the watchdog before getting into this loop
   226     0536                     clrloop0:
   227     0536  0180               	clrf	0	;clear RAM location pointed to by FSR
   228     0537  0A84               	incf	4,f	;increment pointer
   229     0538  0604               	xorwf	4,w	;XOR with final address
   230     0539  1903               	btfsc	3,2	;have we reached the end yet?
   231     053A  3400               	retlw	0	;all done for this memory range, return
   232     053B  0604               	xorwf	4,w	;XOR again to restore value
   233     053C  2D36               	goto	clrloop0	;do the next byte
   234                           
   235                           	psect	cstackCOMMON
   236     0070                     __pcstackCOMMON:
   237     0070                     ?_init:
   238     0070                     ?_cmd:	
   239                           ; 1 bytes @ 0x0
   240                           
   241     0070                     ?_data:	
   242                           ; 1 bytes @ 0x0
   243                           
   244     0070                     ?_delay:	
   245                           ; 1 bytes @ 0x0
   246                           
   247     0070                     ?_main:	
   248                           ; 1 bytes @ 0x0
   249                           
   250     0070                     ?___lwdiv:	
   251                           ; 1 bytes @ 0x0
   252                           
   253     0070                     ?___lwmod:	
   254                           ; 2 bytes @ 0x0
   255                           
   256     0070                     ?___lmul:	
   257                           ; 2 bytes @ 0x0
   258                           
   259     0070                     delay@x:	
   260                           ; 4 bytes @ 0x0
   261                           
   262     0070                     ___lwdiv@divisor:	
   263                           ; 2 bytes @ 0x0
   264                           
   265     0070                     ___lwmod@divisor:	
   266                           ; 2 bytes @ 0x0
   267                           
   268     0070                     ___lmul@multiplier:	
   269                           ; 2 bytes @ 0x0
   270                           
   271                           
   272                           ; 4 bytes @ 0x0
   273     0070                     	ds	2
   274     0072                     ??_cmd:
   275     0072                     ??_data:	
   276                           ; 1 bytes @ 0x2
   277                           
   278     0072                     ??_delay:	
   279                           ; 1 bytes @ 0x2
   280                           
   281     0072                     cmd@i:	
   282                           ; 1 bytes @ 0x2
   283                           
   284     0072                     data@i:	
   285                           ; 1 bytes @ 0x2
   286                           
   287     0072                     ___lwdiv@dividend:	
   288                           ; 1 bytes @ 0x2
   289                           
   290     0072                     ___lwmod@dividend:	
   291                           ; 2 bytes @ 0x2
   292                           
   293                           
   294                           ; 2 bytes @ 0x2
   295     0072                     	ds	1
   296     0073                     ??_init:
   297                           
   298                           ; 1 bytes @ 0x3
   299     0073                     	ds	1
   300     0074                     ??___lwdiv:
   301     0074                     ??___lwmod:	
   302                           ; 1 bytes @ 0x4
   303                           
   304     0074                     ___lwmod@counter:	
   305                           ; 1 bytes @ 0x4
   306                           
   307     0074                     ___lwdiv@quotient:	
   308                           ; 1 bytes @ 0x4
   309                           
   310     0074                     ___lmul@multiplicand:	
   311                           ; 2 bytes @ 0x4
   312                           
   313                           
   314                           ; 4 bytes @ 0x4
   315     0074                     	ds	2
   316     0076                     ___lwdiv@counter:
   317                           
   318                           ; 1 bytes @ 0x6
   319     0076                     	ds	1
   320     0077                     ?_output:
   321     0077                     output@i:	
   322                           ; 1 bytes @ 0x7
   323                           
   324                           
   325                           ; 2 bytes @ 0x7
   326     0077                     	ds	1
   327     0078                     ??___lmul:
   328                           
   329                           ; 1 bytes @ 0x8
   330     0078                     	ds	1
   331     0079                     ??_output:
   332     0079                     ___lmul@product:	
   333                           ; 1 bytes @ 0x9
   334                           
   335                           
   336                           ; 4 bytes @ 0x9
   337     0079                     	ds	4
   338     007D                     ??___lldiv:
   339                           
   340                           ; 1 bytes @ 0xD
   341     007D                     	ds	1
   342                           
   343                           	psect	cstackBANK0
   344     0030                     __pcstackBANK0:
   345     0030                     ?___lldiv:
   346     0030                     ___lldiv@divisor:	
   347                           ; 4 bytes @ 0x0
   348                           
   349                           
   350                           ; 4 bytes @ 0x0
   351     0030                     	ds	4
   352     0034                     ___lldiv@dividend:
   353                           
   354                           ; 4 bytes @ 0x4
   355     0034                     	ds	4
   356     0038                     ___lldiv@quotient:
   357                           
   358                           ; 4 bytes @ 0x8
   359     0038                     	ds	4
   360     003C                     ___lldiv@counter:
   361                           
   362                           ; 1 bytes @ 0xC
   363     003C                     	ds	1
   364     003D                     ??_main:
   365                           
   366                           ; 1 bytes @ 0xD
   367     003D                     	ds	2
   368                           
   369                           	psect	maintext
   370     0752                     __pmaintext:	
   371 ;;
   372 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   373 ;;
   374 ;; *************** function _main *****************
   375 ;; Defined at:
   376 ;;		line 29 in file "adc.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;		None
   379 ;; Auto vars:     Size  Location     Type
   380 ;;		None
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : B00/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   390 ;;      Params:         0       0       0       0       0
   391 ;;      Locals:         0       0       0       0       0
   392 ;;      Temps:          0       2       0       0       0
   393 ;;      Totals:         0       2       0       0       0
   394 ;;Total ram usage:        2 bytes
   395 ;; Hardware stack levels required when called: 3
   396 ;; This function calls:
   397 ;;		___lldiv
   398 ;;		___lmul
   399 ;;		_cmd
   400 ;;		_data
   401 ;;		_delay
   402 ;;		_init
   403 ;;		_output
   404 ;; This function is called by:
   405 ;;		Startup code after reset
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409     0752                     _main:	
   410                           ;psect for function _main
   411                           
   412     0752                     l945:	
   413                           ;incstack = 0
   414                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   415                           
   416                           
   417                           ;adc.c: 30:     init();
   418     0752  120A  118A  26DA  120A  118A  	fcall	_init
   419     0757                     l947:
   420                           
   421                           ;adc.c: 33:         ADCON0 |= 0x04;
   422     0757  1283               	bcf	3,5	;RP0=0, select bank0
   423     0758  1303               	bcf	3,6	;RP1=0, select bank0
   424     0759  151F               	bsf	31,2	;volatile
   425     075A                     l46:	
   426                           ;adc.c: 34:         while(ADCON0&0x04);
   427                           
   428     075A  191F               	btfsc	31,2	;volatile
   429     075B  2F5D               	goto	u541
   430     075C  2F5E               	goto	u540
   431     075D                     u541:
   432     075D  2F5A               	goto	l46
   433     075E                     u540:
   434     075E                     l949:
   435                           
   436                           ;adc.c: 35:         hival = ADRESH;
   437     075E  081E               	movf	30,w	;volatile
   438     075F  00BD               	movwf	??_main
   439     0760  01BE               	clrf	??_main+1
   440     0761  083D               	movf	??_main,w
   441     0762  00AE               	movwf	_hival
   442     0763  083E               	movf	??_main+1,w
   443     0764  00AF               	movwf	_hival+1
   444                           
   445                           ;adc.c: 36:         loval = ADRESL;
   446     0765  1683               	bsf	3,5	;RP0=1, select bank1
   447     0766  1303               	bcf	3,6	;RP1=0, select bank1
   448     0767  081E               	movf	30,w	;volatile
   449     0768  1283               	bcf	3,5	;RP0=0, select bank0
   450     0769  1303               	bcf	3,6	;RP1=0, select bank0
   451     076A  00BD               	movwf	??_main
   452     076B  01BE               	clrf	??_main+1
   453     076C  083D               	movf	??_main,w
   454     076D  00AC               	movwf	_loval
   455     076E  083E               	movf	??_main+1,w
   456     076F  00AD               	movwf	_loval+1
   457                           
   458                           ;adc.c: 37:         k = hival;
   459     0770  082F               	movf	_hival+1,w
   460     0771  00A9               	movwf	_k+1
   461     0772  082E               	movf	_hival,w
   462     0773  00A8               	movwf	_k
   463     0774                     l951:
   464                           
   465                           ;adc.c: 38:         val = ((unsigned int)(hival<<8))+(unsigned int)loval;
   466     0774  082E               	movf	_hival,w
   467     0775  00BE               	movwf	??_main+1
   468     0776  01BD               	clrf	??_main
   469     0777  082C               	movf	_loval,w
   470     0778  073D               	addwf	??_main,w
   471     0779  00A4               	movwf	_val
   472     077A  082D               	movf	_loval+1,w
   473     077B  1803               	skipnc
   474     077C  0A2D               	incf	_loval+1,w
   475     077D  073E               	addwf	??_main+1,w
   476     077E  00A5               	movwf	_val+1
   477     077F  01A6               	clrf	_val+2
   478     0780  01A7               	clrf	_val+3
   479     0781                     l953:
   480                           
   481                           ;adc.c: 39:         voltage = (val*48)/1023;
   482     0781  3000               	movlw	0
   483     0782  00B3               	movwf	___lldiv@divisor+3
   484     0783  3000               	movlw	0
   485     0784  00B2               	movwf	___lldiv@divisor+2
   486     0785  3003               	movlw	3
   487     0786  00B1               	movwf	___lldiv@divisor+1
   488     0787  30FF               	movlw	255
   489     0788  00B0               	movwf	___lldiv@divisor
   490     0789  0827               	movf	_val+3,w
   491     078A  00F3               	movwf	___lmul@multiplier+3
   492     078B  0826               	movf	_val+2,w
   493     078C  00F2               	movwf	___lmul@multiplier+2
   494     078D  0825               	movf	_val+1,w
   495     078E  00F1               	movwf	___lmul@multiplier+1
   496     078F  0824               	movf	_val,w
   497     0790  00F0               	movwf	___lmul@multiplier
   498     0791  3000               	movlw	0
   499     0792  00F7               	movwf	___lmul@multiplicand+3
   500     0793  3000               	movlw	0
   501     0794  00F6               	movwf	___lmul@multiplicand+2
   502     0795  3000               	movlw	0
   503     0796  00F5               	movwf	___lmul@multiplicand+1
   504     0797  3030               	movlw	48
   505     0798  00F4               	movwf	___lmul@multiplicand
   506     0799  120A  118A  262C  120A  118A  	fcall	___lmul
   507     079E  0873               	movf	?___lmul+3,w
   508     079F  1283               	bcf	3,5	;RP0=0, select bank0
   509     07A0  1303               	bcf	3,6	;RP1=0, select bank0
   510     07A1  00B7               	movwf	___lldiv@dividend+3
   511     07A2  0872               	movf	?___lmul+2,w
   512     07A3  00B6               	movwf	___lldiv@dividend+2
   513     07A4  0871               	movf	?___lmul+1,w
   514     07A5  00B5               	movwf	___lldiv@dividend+1
   515     07A6  0870               	movf	?___lmul,w
   516     07A7  00B4               	movwf	___lldiv@dividend
   517     07A8  120A  118A  2672  120A  118A  	fcall	___lldiv
   518     07AD  1283               	bcf	3,5	;RP0=0, select bank0
   519     07AE  1303               	bcf	3,6	;RP1=0, select bank0
   520     07AF  0833               	movf	?___lldiv+3,w
   521     07B0  00A3               	movwf	_voltage+3
   522     07B1  0832               	movf	?___lldiv+2,w
   523     07B2  00A2               	movwf	_voltage+2
   524     07B3  0831               	movf	?___lldiv+1,w
   525     07B4  00A1               	movwf	_voltage+1
   526     07B5  0830               	movf	?___lldiv,w
   527     07B6  00A0               	movwf	_voltage
   528     07B7                     l955:
   529                           
   530                           ;adc.c: 40:         cmd(0x80);
   531     07B7  3080               	movlw	128
   532     07B8  120A  118A  255F  120A  118A  	fcall	_cmd
   533     07BD                     l957:
   534                           
   535                           ;adc.c: 41:         output(voltage);
   536     07BD  1283               	bcf	3,5	;RP0=0, select bank0
   537     07BE  1303               	bcf	3,6	;RP1=0, select bank0
   538     07BF  0821               	movf	_voltage+1,w
   539     07C0  00F8               	movwf	output@i+1
   540     07C1  0820               	movf	_voltage,w
   541     07C2  00F7               	movwf	output@i
   542     07C3  120A  118A  2577  120A  118A  	fcall	_output
   543     07C8                     l959:
   544                           
   545                           ;adc.c: 42:         cmd(0xC0);
   546     07C8  30C0               	movlw	192
   547     07C9  120A  118A  255F  120A  118A  	fcall	_cmd
   548     07CE                     l961:
   549                           
   550                           ;adc.c: 43:         data(0x30+k);
   551     07CE  1283               	bcf	3,5	;RP0=0, select bank0
   552     07CF  1303               	bcf	3,6	;RP1=0, select bank0
   553     07D0  0828               	movf	_k,w
   554     07D1  3E30               	addlw	48
   555     07D2  120A  118A  254A  120A  118A  	fcall	_data
   556     07D7                     l963:
   557                           
   558                           ;adc.c: 44:         data(' ');
   559     07D7  3020               	movlw	32
   560     07D8  120A  118A  254A  120A  118A  	fcall	_data
   561     07DD                     l965:
   562                           
   563                           ;adc.c: 45:         data(0x30+loval);
   564     07DD  1283               	bcf	3,5	;RP0=0, select bank0
   565     07DE  1303               	bcf	3,6	;RP1=0, select bank0
   566     07DF  082C               	movf	_loval,w
   567     07E0  3E30               	addlw	48
   568     07E1  120A  118A  254A  120A  118A  	fcall	_data
   569     07E6                     l967:
   570                           
   571                           ;adc.c: 46:         delay(1000);
   572     07E6  30E8               	movlw	232
   573     07E7  00F0               	movwf	delay@x
   574     07E8  3003               	movlw	3
   575     07E9  00F1               	movwf	delay@x+1
   576     07EA  120A  118A  253D  120A  118A  	fcall	_delay
   577     07EF  2F57               	goto	l947
   578     07F0  120A  118A  2800   	ljmp	start
   579     07F3                     __end_of_main:
   580                           
   581                           	psect	text1
   582     0577                     __ptext1:	
   583 ;; *************** function _output *****************
   584 ;; Defined at:
   585 ;;		line 70 in file "adc.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  i               2    7[COMMON] unsigned int 
   588 ;; Auto vars:     Size  Location     Type
   589 ;;		None
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   599 ;;      Params:         2       0       0       0       0
   600 ;;      Locals:         0       0       0       0       0
   601 ;;      Temps:          0       0       0       0       0
   602 ;;      Totals:         2       0       0       0       0
   603 ;;Total ram usage:        2 bytes
   604 ;; Hardware stack levels used: 1
   605 ;; Hardware stack levels required when called: 2
   606 ;; This function calls:
   607 ;;		___lwdiv
   608 ;;		___lwmod
   609 ;;		_data
   610 ;; This function is called by:
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615     0577                     _output:	
   616                           ;psect for function _output
   617                           
   618     0577                     l897:	
   619                           ;incstack = 0
   620                           ; Regs used in _output: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   621                           
   622                           
   623                           ;adc.c: 71:     m = i;
   624     0577  0878               	movf	output@i+1,w
   625     0578  1283               	bcf	3,5	;RP0=0, select bank0
   626     0579  1303               	bcf	3,6	;RP1=0, select bank0
   627     057A  00AB               	movwf	_m+1
   628     057B  0877               	movf	output@i,w
   629     057C  00AA               	movwf	_m
   630     057D                     l899:
   631                           
   632                           ;adc.c: 72:     data(0x30+(m/10));
   633     057D  300A               	movlw	10
   634     057E  00F0               	movwf	___lwdiv@divisor
   635     057F  3000               	movlw	0
   636     0580  00F1               	movwf	___lwdiv@divisor+1
   637     0581  082B               	movf	_m+1,w
   638     0582  00F3               	movwf	___lwdiv@dividend+1
   639     0583  082A               	movf	_m,w
   640     0584  00F2               	movwf	___lwdiv@dividend
   641     0585  120A  118A  25E8  120A  118A  	fcall	___lwdiv
   642     058A  0870               	movf	?___lwdiv,w
   643     058B  3E30               	addlw	48
   644     058C  120A  118A  254A  120A  118A  	fcall	_data
   645     0591                     l901:
   646                           
   647                           ;adc.c: 73:     data(0x30+(m%10));
   648     0591  300A               	movlw	10
   649     0592  00F0               	movwf	___lwmod@divisor
   650     0593  3000               	movlw	0
   651     0594  00F1               	movwf	___lwmod@divisor+1
   652     0595  1283               	bcf	3,5	;RP0=0, select bank0
   653     0596  1303               	bcf	3,6	;RP1=0, select bank0
   654     0597  082B               	movf	_m+1,w
   655     0598  00F3               	movwf	___lwmod@dividend+1
   656     0599  082A               	movf	_m,w
   657     059A  00F2               	movwf	___lwmod@dividend
   658     059B  120A  118A  25AE  120A  118A  	fcall	___lwmod
   659     05A0  0870               	movf	?___lwmod,w
   660     05A1  3E30               	addlw	48
   661     05A2  120A  118A  254A  120A  118A  	fcall	_data
   662     05A7                     l903:
   663                           
   664                           ;adc.c: 84:     data('V');
   665     05A7  3056               	movlw	86
   666     05A8  120A  118A  254A  120A  118A  	fcall	_data
   667     05AD                     l57:
   668     05AD  0008               	return
   669     05AE                     __end_of_output:
   670                           
   671                           	psect	text2
   672     054A                     __ptext2:	
   673 ;; *************** function _data *****************
   674 ;; Defined at:
   675 ;;		line 93 in file "adc.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;  i               1    wreg     unsigned char 
   678 ;; Auto vars:     Size  Location     Type
   679 ;;  i               1    2[COMMON] unsigned char 
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   689 ;;      Params:         0       0       0       0       0
   690 ;;      Locals:         1       0       0       0       0
   691 ;;      Temps:          0       0       0       0       0
   692 ;;      Totals:         1       0       0       0       0
   693 ;;Total ram usage:        1 bytes
   694 ;; Hardware stack levels used: 1
   695 ;; Hardware stack levels required when called: 1
   696 ;; This function calls:
   697 ;;		_delay
   698 ;; This function is called by:
   699 ;;		_main
   700 ;;		_output
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704     054A                     _data:	
   705                           ;psect for function _data
   706                           
   707                           
   708                           ;incstack = 0
   709                           ; Regs used in _data: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   710                           ;data@i stored from wreg
   711     054A  00F2               	movwf	data@i
   712     054B                     l805:
   713                           
   714                           ;adc.c: 94:     PORTC |= 0x08;
   715     054B  1283               	bcf	3,5	;RP0=0, select bank0
   716     054C  1303               	bcf	3,6	;RP1=0, select bank0
   717     054D  1587               	bsf	7,3	;volatile
   718     054E                     l807:
   719                           
   720                           ;adc.c: 95:     PORTD = i;
   721     054E  0872               	movf	data@i,w
   722     054F  0088               	movwf	8	;volatile
   723     0550                     l809:
   724                           
   725                           ;adc.c: 96:     PORTC |= 0x01;
   726     0550  1407               	bsf	7,0	;volatile
   727     0551                     l811:
   728                           
   729                           ;adc.c: 97:     PORTC &= ~(0x01);
   730     0551  30FE               	movlw	254
   731     0552  00FF               	movwf	btemp+1
   732     0553  087F               	movf	btemp+1,w
   733     0554  0587               	andwf	7,f	;volatile
   734     0555                     l813:
   735                           
   736                           ;adc.c: 98:     delay(100);
   737     0555  3064               	movlw	100
   738     0556  00F0               	movwf	delay@x
   739     0557  3000               	movlw	0
   740     0558  00F1               	movwf	delay@x+1
   741     0559  120A  118A  253D  120A  118A  	fcall	_delay
   742     055E                     l63:
   743     055E  0008               	return
   744     055F                     __end_of_data:
   745                           
   746                           	psect	text3
   747     05AE                     __ptext3:	
   748 ;; *************** function ___lwmod *****************
   749 ;; Defined at:
   750 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;  divisor         2    0[COMMON] unsigned int 
   753 ;;  dividend        2    2[COMMON] unsigned int 
   754 ;; Auto vars:     Size  Location     Type
   755 ;;  counter         1    4[COMMON] unsigned char 
   756 ;; Return value:  Size  Location     Type
   757 ;;                  2    0[COMMON] unsigned int 
   758 ;; Registers used:
   759 ;;		wreg, status,2, status,0, btemp+1
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         4       0       0       0       0
   766 ;;      Locals:         1       0       0       0       0
   767 ;;      Temps:          0       0       0       0       0
   768 ;;      Totals:         5       0       0       0       0
   769 ;;Total ram usage:        5 bytes
   770 ;; Hardware stack levels used: 1
   771 ;; This function calls:
   772 ;;		Nothing
   773 ;; This function is called by:
   774 ;;		_output
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778     05AE                     ___lwmod:	
   779                           ;psect for function ___lwmod
   780                           
   781     05AE                     l841:	
   782                           ;incstack = 0
   783                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
   784                           
   785     05AE  0870               	movf	___lwmod@divisor,w
   786     05AF  0471               	iorwf	___lwmod@divisor+1,w
   787     05B0  1903               	btfsc	3,2
   788     05B1  2DB3               	goto	u361
   789     05B2  2DB4               	goto	u360
   790     05B3                     u361:
   791     05B3  2DE3               	goto	l859
   792     05B4                     u360:
   793     05B4                     l843:
   794     05B4  01F4               	clrf	___lwmod@counter
   795     05B5  0AF4               	incf	___lwmod@counter,f
   796     05B6  2DC2               	goto	l849
   797     05B7                     l845:
   798     05B7  3001               	movlw	1
   799     05B8                     u375:
   800     05B8  1003               	clrc
   801     05B9  0DF0               	rlf	___lwmod@divisor,f
   802     05BA  0DF1               	rlf	___lwmod@divisor+1,f
   803     05BB  3EFF               	addlw	-1
   804     05BC  1D03               	skipz
   805     05BD  2DB8               	goto	u375
   806     05BE                     l847:
   807     05BE  3001               	movlw	1
   808     05BF  00FF               	movwf	btemp+1
   809     05C0  087F               	movf	btemp+1,w
   810     05C1  07F4               	addwf	___lwmod@counter,f
   811     05C2                     l849:
   812     05C2  1FF1               	btfss	___lwmod@divisor+1,7
   813     05C3  2DC5               	goto	u381
   814     05C4  2DC6               	goto	u380
   815     05C5                     u381:
   816     05C5  2DB7               	goto	l845
   817     05C6                     u380:
   818     05C6                     l851:
   819     05C6  0871               	movf	___lwmod@divisor+1,w
   820     05C7  0273               	subwf	___lwmod@dividend+1,w
   821     05C8  1D03               	skipz
   822     05C9  2DCC               	goto	u395
   823     05CA  0870               	movf	___lwmod@divisor,w
   824     05CB  0272               	subwf	___lwmod@dividend,w
   825     05CC                     u395:
   826     05CC  1C03               	skipc
   827     05CD  2DCF               	goto	u391
   828     05CE  2DD0               	goto	u390
   829     05CF                     u391:
   830     05CF  2DD6               	goto	l855
   831     05D0                     u390:
   832     05D0                     l853:
   833     05D0  0870               	movf	___lwmod@divisor,w
   834     05D1  02F2               	subwf	___lwmod@dividend,f
   835     05D2  0871               	movf	___lwmod@divisor+1,w
   836     05D3  1C03               	skipc
   837     05D4  03F3               	decf	___lwmod@dividend+1,f
   838     05D5  02F3               	subwf	___lwmod@dividend+1,f
   839     05D6                     l855:
   840     05D6  3001               	movlw	1
   841     05D7                     u405:
   842     05D7  1003               	clrc
   843     05D8  0CF1               	rrf	___lwmod@divisor+1,f
   844     05D9  0CF0               	rrf	___lwmod@divisor,f
   845     05DA  3EFF               	addlw	-1
   846     05DB  1D03               	skipz
   847     05DC  2DD7               	goto	u405
   848     05DD                     l857:
   849     05DD  3001               	movlw	1
   850     05DE  02F4               	subwf	___lwmod@counter,f
   851     05DF  1D03               	btfss	3,2
   852     05E0  2DE2               	goto	u411
   853     05E1  2DE3               	goto	u410
   854     05E2                     u411:
   855     05E2  2DC6               	goto	l851
   856     05E3                     u410:
   857     05E3                     l859:
   858     05E3  0873               	movf	___lwmod@dividend+1,w
   859     05E4  00F1               	movwf	?___lwmod+1
   860     05E5  0872               	movf	___lwmod@dividend,w
   861     05E6  00F0               	movwf	?___lwmod
   862     05E7                     l445:
   863     05E7  0008               	return
   864     05E8                     __end_of___lwmod:
   865                           
   866                           	psect	text4
   867     05E8                     __ptext4:	
   868 ;; *************** function ___lwdiv *****************
   869 ;; Defined at:
   870 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  divisor         2    0[COMMON] unsigned int 
   873 ;;  dividend        2    2[COMMON] unsigned int 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  quotient        2    4[COMMON] unsigned int 
   876 ;;  counter         1    6[COMMON] unsigned char 
   877 ;; Return value:  Size  Location     Type
   878 ;;                  2    0[COMMON] unsigned int 
   879 ;; Registers used:
   880 ;;		wreg, status,2, status,0, btemp+1
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   886 ;;      Params:         4       0       0       0       0
   887 ;;      Locals:         3       0       0       0       0
   888 ;;      Temps:          0       0       0       0       0
   889 ;;      Totals:         7       0       0       0       0
   890 ;;Total ram usage:        7 bytes
   891 ;; Hardware stack levels used: 1
   892 ;; This function calls:
   893 ;;		Nothing
   894 ;; This function is called by:
   895 ;;		_output
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899     05E8                     ___lwdiv:	
   900                           ;psect for function ___lwdiv
   901                           
   902     05E8                     l815:	
   903                           ;incstack = 0
   904                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
   905                           
   906     05E8  01F4               	clrf	___lwdiv@quotient
   907     05E9  01F5               	clrf	___lwdiv@quotient+1
   908     05EA                     l817:
   909     05EA  0870               	movf	___lwdiv@divisor,w
   910     05EB  0471               	iorwf	___lwdiv@divisor+1,w
   911     05EC  1903               	btfsc	3,2
   912     05ED  2DEF               	goto	u291
   913     05EE  2DF0               	goto	u290
   914     05EF                     u291:
   915     05EF  2E27               	goto	l837
   916     05F0                     u290:
   917     05F0                     l819:
   918     05F0  01F6               	clrf	___lwdiv@counter
   919     05F1  0AF6               	incf	___lwdiv@counter,f
   920     05F2  2DFE               	goto	l825
   921     05F3                     l821:
   922     05F3  3001               	movlw	1
   923     05F4                     u305:
   924     05F4  1003               	clrc
   925     05F5  0DF0               	rlf	___lwdiv@divisor,f
   926     05F6  0DF1               	rlf	___lwdiv@divisor+1,f
   927     05F7  3EFF               	addlw	-1
   928     05F8  1D03               	skipz
   929     05F9  2DF4               	goto	u305
   930     05FA                     l823:
   931     05FA  3001               	movlw	1
   932     05FB  00FF               	movwf	btemp+1
   933     05FC  087F               	movf	btemp+1,w
   934     05FD  07F6               	addwf	___lwdiv@counter,f
   935     05FE                     l825:
   936     05FE  1FF1               	btfss	___lwdiv@divisor+1,7
   937     05FF  2E01               	goto	u311
   938     0600  2E02               	goto	u310
   939     0601                     u311:
   940     0601  2DF3               	goto	l821
   941     0602                     u310:
   942     0602                     l827:
   943     0602  3001               	movlw	1
   944     0603                     u325:
   945     0603  1003               	clrc
   946     0604  0DF4               	rlf	___lwdiv@quotient,f
   947     0605  0DF5               	rlf	___lwdiv@quotient+1,f
   948     0606  3EFF               	addlw	-1
   949     0607  1D03               	skipz
   950     0608  2E03               	goto	u325
   951     0609  0871               	movf	___lwdiv@divisor+1,w
   952     060A  0273               	subwf	___lwdiv@dividend+1,w
   953     060B  1D03               	skipz
   954     060C  2E0F               	goto	u335
   955     060D  0870               	movf	___lwdiv@divisor,w
   956     060E  0272               	subwf	___lwdiv@dividend,w
   957     060F                     u335:
   958     060F  1C03               	skipc
   959     0610  2E12               	goto	u331
   960     0611  2E13               	goto	u330
   961     0612                     u331:
   962     0612  2E1A               	goto	l833
   963     0613                     u330:
   964     0613                     l829:
   965     0613  0870               	movf	___lwdiv@divisor,w
   966     0614  02F2               	subwf	___lwdiv@dividend,f
   967     0615  0871               	movf	___lwdiv@divisor+1,w
   968     0616  1C03               	skipc
   969     0617  03F3               	decf	___lwdiv@dividend+1,f
   970     0618  02F3               	subwf	___lwdiv@dividend+1,f
   971     0619                     l831:
   972     0619  1474               	bsf	___lwdiv@quotient,0
   973     061A                     l833:
   974     061A  3001               	movlw	1
   975     061B                     u345:
   976     061B  1003               	clrc
   977     061C  0CF1               	rrf	___lwdiv@divisor+1,f
   978     061D  0CF0               	rrf	___lwdiv@divisor,f
   979     061E  3EFF               	addlw	-1
   980     061F  1D03               	skipz
   981     0620  2E1B               	goto	u345
   982     0621                     l835:
   983     0621  3001               	movlw	1
   984     0622  02F6               	subwf	___lwdiv@counter,f
   985     0623  1D03               	btfss	3,2
   986     0624  2E26               	goto	u351
   987     0625  2E27               	goto	u350
   988     0626                     u351:
   989     0626  2E02               	goto	l827
   990     0627                     u350:
   991     0627                     l837:
   992     0627  0875               	movf	___lwdiv@quotient+1,w
   993     0628  00F1               	movwf	?___lwdiv+1
   994     0629  0874               	movf	___lwdiv@quotient,w
   995     062A  00F0               	movwf	?___lwdiv
   996     062B                     l435:
   997     062B  0008               	return
   998     062C                     __end_of___lwdiv:
   999                           
  1000                           	psect	text5
  1001     06DA                     __ptext5:	
  1002 ;; *************** function _init *****************
  1003 ;; Defined at:
  1004 ;;		line 49 in file "adc.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;		None
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;		None
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1018 ;;      Params:         0       0       0       0       0
  1019 ;;      Locals:         0       0       0       0       0
  1020 ;;      Temps:          0       0       0       0       0
  1021 ;;      Totals:         0       0       0       0       0
  1022 ;;Total ram usage:        0 bytes
  1023 ;; Hardware stack levels used: 1
  1024 ;; Hardware stack levels required when called: 2
  1025 ;; This function calls:
  1026 ;;		_cmd
  1027 ;;		_delay
  1028 ;; This function is called by:
  1029 ;;		_main
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033     06DA                     _init:	
  1034                           ;psect for function _init
  1035                           
  1036     06DA                     l863:	
  1037                           ;incstack = 0
  1038                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1039                           
  1040                           
  1041                           ;adc.c: 50:     TRISA = 0x01;
  1042     06DA  3001               	movlw	1
  1043     06DB  1683               	bsf	3,5	;RP0=1, select bank1
  1044     06DC  1303               	bcf	3,6	;RP1=0, select bank1
  1045     06DD  0085               	movwf	5	;volatile
  1046     06DE                     l865:
  1047                           
  1048                           ;adc.c: 51:     TRISC = 0x00;
  1049     06DE  0187               	clrf	7	;volatile
  1050     06DF                     l867:
  1051                           
  1052                           ;adc.c: 52:     TRISD = 0x00;
  1053     06DF  0188               	clrf	8	;volatile
  1054                           
  1055                           ;adc.c: 53:     ADCON0 = 0x81;
  1056     06E0  3081               	movlw	129
  1057     06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1058     06E2  1303               	bcf	3,6	;RP1=0, select bank0
  1059     06E3  009F               	movwf	31	;volatile
  1060                           
  1061                           ;adc.c: 54:     ADCON1 = 0x8E;
  1062     06E4  308E               	movlw	142
  1063     06E5  1683               	bsf	3,5	;RP0=1, select bank1
  1064     06E6  1303               	bcf	3,6	;RP1=0, select bank1
  1065     06E7  009F               	movwf	31	;volatile
  1066     06E8                     l869:
  1067                           
  1068                           ;adc.c: 55:     cmd(0x38);
  1069     06E8  3038               	movlw	56
  1070     06E9  120A  118A  255F  120A  118A  	fcall	_cmd
  1071     06EE                     l871:
  1072                           
  1073                           ;adc.c: 56:     delay(100);
  1074     06EE  3064               	movlw	100
  1075     06EF  00F0               	movwf	delay@x
  1076     06F0  3000               	movlw	0
  1077     06F1  00F1               	movwf	delay@x+1
  1078     06F2  120A  118A  253D  120A  118A  	fcall	_delay
  1079     06F7                     l873:
  1080                           
  1081                           ;adc.c: 57:     cmd(0x38);
  1082     06F7  3038               	movlw	56
  1083     06F8  120A  118A  255F  120A  118A  	fcall	_cmd
  1084     06FD                     l875:
  1085                           
  1086                           ;adc.c: 58:     delay(100);
  1087     06FD  3064               	movlw	100
  1088     06FE  00F0               	movwf	delay@x
  1089     06FF  3000               	movlw	0
  1090     0700  00F1               	movwf	delay@x+1
  1091     0701  120A  118A  253D  120A  118A  	fcall	_delay
  1092     0706                     l877:
  1093                           
  1094                           ;adc.c: 59:     cmd(0x38);
  1095     0706  3038               	movlw	56
  1096     0707  120A  118A  255F  120A  118A  	fcall	_cmd
  1097     070C                     l879:
  1098                           
  1099                           ;adc.c: 60:     delay(100);
  1100     070C  3064               	movlw	100
  1101     070D  00F0               	movwf	delay@x
  1102     070E  3000               	movlw	0
  1103     070F  00F1               	movwf	delay@x+1
  1104     0710  120A  118A  253D  120A  118A  	fcall	_delay
  1105     0715                     l881:
  1106                           
  1107                           ;adc.c: 61:     cmd(0x38);
  1108     0715  3038               	movlw	56
  1109     0716  120A  118A  255F  120A  118A  	fcall	_cmd
  1110     071B                     l883:
  1111                           
  1112                           ;adc.c: 62:     delay(100);
  1113     071B  3064               	movlw	100
  1114     071C  00F0               	movwf	delay@x
  1115     071D  3000               	movlw	0
  1116     071E  00F1               	movwf	delay@x+1
  1117     071F  120A  118A  253D  120A  118A  	fcall	_delay
  1118     0724                     l885:
  1119                           
  1120                           ;adc.c: 63:     cmd(0x0C);
  1121     0724  300C               	movlw	12
  1122     0725  120A  118A  255F  120A  118A  	fcall	_cmd
  1123     072A                     l887:
  1124                           
  1125                           ;adc.c: 64:     delay(100);
  1126     072A  3064               	movlw	100
  1127     072B  00F0               	movwf	delay@x
  1128     072C  3000               	movlw	0
  1129     072D  00F1               	movwf	delay@x+1
  1130     072E  120A  118A  253D  120A  118A  	fcall	_delay
  1131     0733                     l889:
  1132                           
  1133                           ;adc.c: 65:     cmd(0x06);
  1134     0733  3006               	movlw	6
  1135     0734  120A  118A  255F  120A  118A  	fcall	_cmd
  1136     0739                     l891:
  1137                           
  1138                           ;adc.c: 66:     delay(100);
  1139     0739  3064               	movlw	100
  1140     073A  00F0               	movwf	delay@x
  1141     073B  3000               	movlw	0
  1142     073C  00F1               	movwf	delay@x+1
  1143     073D  120A  118A  253D  120A  118A  	fcall	_delay
  1144     0742                     l893:
  1145                           
  1146                           ;adc.c: 67:     cmd(0x01);
  1147     0742  3001               	movlw	1
  1148     0743  120A  118A  255F  120A  118A  	fcall	_cmd
  1149     0748                     l895:
  1150                           
  1151                           ;adc.c: 68:     delay(100);
  1152     0748  3064               	movlw	100
  1153     0749  00F0               	movwf	delay@x
  1154     074A  3000               	movlw	0
  1155     074B  00F1               	movwf	delay@x+1
  1156     074C  120A  118A  253D  120A  118A  	fcall	_delay
  1157     0751                     l54:
  1158     0751  0008               	return
  1159     0752                     __end_of_init:
  1160                           
  1161                           	psect	text6
  1162     055F                     __ptext6:	
  1163 ;; *************** function _cmd *****************
  1164 ;; Defined at:
  1165 ;;		line 86 in file "adc.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  i               1    wreg     unsigned char 
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;  i               1    2[COMMON] unsigned char 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1179 ;;      Params:         0       0       0       0       0
  1180 ;;      Locals:         1       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0
  1182 ;;      Totals:         1       0       0       0       0
  1183 ;;Total ram usage:        1 bytes
  1184 ;; Hardware stack levels used: 1
  1185 ;; Hardware stack levels required when called: 1
  1186 ;; This function calls:
  1187 ;;		_delay
  1188 ;; This function is called by:
  1189 ;;		_main
  1190 ;;		_init
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194     055F                     _cmd:	
  1195                           ;psect for function _cmd
  1196                           
  1197                           
  1198                           ;incstack = 0
  1199                           ; Regs used in _cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1200                           ;cmd@i stored from wreg
  1201     055F  00F2               	movwf	cmd@i
  1202     0560                     l795:
  1203                           
  1204                           ;adc.c: 87:     PORTC &= 0xF7;
  1205     0560  30F7               	movlw	247
  1206     0561  00FF               	movwf	btemp+1
  1207     0562  087F               	movf	btemp+1,w
  1208     0563  1283               	bcf	3,5	;RP0=0, select bank0
  1209     0564  1303               	bcf	3,6	;RP1=0, select bank0
  1210     0565  0587               	andwf	7,f	;volatile
  1211     0566                     l797:
  1212                           
  1213                           ;adc.c: 88:     PORTD = i;
  1214     0566  0872               	movf	cmd@i,w
  1215     0567  0088               	movwf	8	;volatile
  1216     0568                     l799:
  1217                           
  1218                           ;adc.c: 89:     PORTC |= 0x01;
  1219     0568  1407               	bsf	7,0	;volatile
  1220     0569                     l801:
  1221                           
  1222                           ;adc.c: 90:     PORTC &= ~(0x01);
  1223     0569  30FE               	movlw	254
  1224     056A  00FF               	movwf	btemp+1
  1225     056B  087F               	movf	btemp+1,w
  1226     056C  0587               	andwf	7,f	;volatile
  1227     056D                     l803:
  1228                           
  1229                           ;adc.c: 91:     delay(100);
  1230     056D  3064               	movlw	100
  1231     056E  00F0               	movwf	delay@x
  1232     056F  3000               	movlw	0
  1233     0570  00F1               	movwf	delay@x+1
  1234     0571  120A  118A  253D  120A  118A  	fcall	_delay
  1235     0576                     l60:
  1236     0576  0008               	return
  1237     0577                     __end_of_cmd:
  1238                           
  1239                           	psect	text7
  1240     053D                     __ptext7:	
  1241 ;; *************** function _delay *****************
  1242 ;; Defined at:
  1243 ;;		line 100 in file "adc.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  x               2    0[COMMON] unsigned int 
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;		None
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      void 
  1250 ;; Registers used:
  1251 ;;		wreg, status,2, status,0
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1257 ;;      Params:         2       0       0       0       0
  1258 ;;      Locals:         0       0       0       0       0
  1259 ;;      Temps:          0       0       0       0       0
  1260 ;;      Totals:         2       0       0       0       0
  1261 ;;Total ram usage:        2 bytes
  1262 ;; Hardware stack levels used: 1
  1263 ;; This function calls:
  1264 ;;		Nothing
  1265 ;; This function is called by:
  1266 ;;		_main
  1267 ;;		_init
  1268 ;;		_cmd
  1269 ;;		_data
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273     053D                     _delay:	
  1274                           ;psect for function _delay
  1275                           
  1276     053D                     l791:	
  1277                           ;incstack = 0
  1278                           ; Regs used in _delay: [wreg+status,2+status,0]
  1279                           
  1280     053D                     l793:	
  1281                           ;adc.c: 101:     while(--x);
  1282                           
  1283     053D  3001               	movlw	1
  1284     053E  02F0               	subwf	delay@x,f
  1285     053F  3000               	movlw	0
  1286     0540  1C03               	skipc
  1287     0541  03F1               	decf	delay@x+1,f
  1288     0542  02F1               	subwf	delay@x+1,f
  1289     0543  0870               	movf	delay@x,w
  1290     0544  0471               	iorwf	delay@x+1,w
  1291     0545  1D03               	btfss	3,2
  1292     0546  2D48               	goto	u281
  1293     0547  2D49               	goto	u280
  1294     0548                     u281:
  1295     0548  2D3D               	goto	l793
  1296     0549                     u280:
  1297     0549                     l69:
  1298     0549  0008               	return
  1299     054A                     __end_of_delay:
  1300                           
  1301                           	psect	text8
  1302     062C                     __ptext8:	
  1303 ;; *************** function ___lmul *****************
  1304 ;; Defined at:
  1305 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  multiplier      4    0[COMMON] unsigned long 
  1308 ;;  multiplicand    4    4[COMMON] unsigned long 
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;  product         4    9[COMMON] unsigned long 
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  4    0[COMMON] unsigned long 
  1313 ;; Registers used:
  1314 ;;		wreg, status,2, status,0
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1320 ;;      Params:         8       0       0       0       0
  1321 ;;      Locals:         4       0       0       0       0
  1322 ;;      Temps:          1       0       0       0       0
  1323 ;;      Totals:        13       0       0       0       0
  1324 ;;Total ram usage:       13 bytes
  1325 ;; Hardware stack levels used: 1
  1326 ;; This function calls:
  1327 ;;		Nothing
  1328 ;; This function is called by:
  1329 ;;		_main
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333     062C                     ___lmul:	
  1334                           ;psect for function ___lmul
  1335                           
  1336     062C                     l905:	
  1337                           ;incstack = 0
  1338                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1339                           
  1340     062C  3000               	movlw	0
  1341     062D  00FC               	movwf	___lmul@product+3
  1342     062E  3000               	movlw	0
  1343     062F  00FB               	movwf	___lmul@product+2
  1344     0630  3000               	movlw	0
  1345     0631  00FA               	movwf	___lmul@product+1
  1346     0632  3000               	movlw	0
  1347     0633  00F9               	movwf	___lmul@product
  1348     0634                     l907:
  1349     0634  1C70               	btfss	___lmul@multiplier,0
  1350     0635  2E37               	goto	u421
  1351     0636  2E38               	goto	u420
  1352     0637                     u421:
  1353     0637  2E4F               	goto	l911
  1354     0638                     u420:
  1355     0638                     l909:
  1356     0638  0874               	movf	___lmul@multiplicand,w
  1357     0639  07F9               	addwf	___lmul@product,f
  1358     063A  0875               	movf	___lmul@multiplicand+1,w
  1359     063B  1103               	clrz
  1360     063C  1803               	skipnc
  1361     063D  3E01               	addlw	1
  1362     063E  1903               	skipnz
  1363     063F  2E41               	goto	u431
  1364     0640  07FA               	addwf	___lmul@product+1,f
  1365     0641                     u431:
  1366     0641  0876               	movf	___lmul@multiplicand+2,w
  1367     0642  1103               	clrz
  1368     0643  1803               	skipnc
  1369     0644  3E01               	addlw	1
  1370     0645  1903               	skipnz
  1371     0646  2E48               	goto	u432
  1372     0647  07FB               	addwf	___lmul@product+2,f
  1373     0648                     u432:
  1374     0648  0877               	movf	___lmul@multiplicand+3,w
  1375     0649  1103               	clrz
  1376     064A  1803               	skipnc
  1377     064B  3E01               	addlw	1
  1378     064C  1903               	skipnz
  1379     064D  2E4F               	goto	u433
  1380     064E  07FC               	addwf	___lmul@product+3,f
  1381     064F                     u433:
  1382     064F                     l911:
  1383     064F  3001               	movlw	1
  1384     0650  00F8               	movwf	??___lmul
  1385     0651                     u445:
  1386     0651  1003               	clrc
  1387     0652  0DF4               	rlf	___lmul@multiplicand,f
  1388     0653  0DF5               	rlf	___lmul@multiplicand+1,f
  1389     0654  0DF6               	rlf	___lmul@multiplicand+2,f
  1390     0655  0DF7               	rlf	___lmul@multiplicand+3,f
  1391     0656  0BF8               	decfsz	??___lmul,f
  1392     0657  2E51               	goto	u445
  1393     0658                     l913:
  1394     0658  3001               	movlw	1
  1395     0659                     u455:
  1396     0659  1003               	clrc
  1397     065A  0CF3               	rrf	___lmul@multiplier+3,f
  1398     065B  0CF2               	rrf	___lmul@multiplier+2,f
  1399     065C  0CF1               	rrf	___lmul@multiplier+1,f
  1400     065D  0CF0               	rrf	___lmul@multiplier,f
  1401     065E  3EFF               	addlw	-1
  1402     065F  1D03               	skipz
  1403     0660  2E59               	goto	u455
  1404     0661  0873               	movf	___lmul@multiplier+3,w
  1405     0662  0472               	iorwf	___lmul@multiplier+2,w
  1406     0663  0471               	iorwf	___lmul@multiplier+1,w
  1407     0664  0470               	iorwf	___lmul@multiplier,w
  1408     0665  1D03               	skipz
  1409     0666  2E68               	goto	u461
  1410     0667  2E69               	goto	u460
  1411     0668                     u461:
  1412     0668  2E34               	goto	l907
  1413     0669                     u460:
  1414     0669                     l915:
  1415     0669  087C               	movf	___lmul@product+3,w
  1416     066A  00F3               	movwf	?___lmul+3
  1417     066B  087B               	movf	___lmul@product+2,w
  1418     066C  00F2               	movwf	?___lmul+2
  1419     066D  087A               	movf	___lmul@product+1,w
  1420     066E  00F1               	movwf	?___lmul+1
  1421     066F  0879               	movf	___lmul@product,w
  1422     0670  00F0               	movwf	?___lmul
  1423     0671                     l169:
  1424     0671  0008               	return
  1425     0672                     __end_of___lmul:
  1426                           
  1427                           	psect	text9
  1428     0672                     __ptext9:	
  1429 ;; *************** function ___lldiv *****************
  1430 ;; Defined at:
  1431 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  divisor         4    0[BANK0 ] unsigned long 
  1434 ;;  dividend        4    4[BANK0 ] unsigned long 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  quotient        4    8[BANK0 ] unsigned long 
  1437 ;;  counter         1   12[BANK0 ] unsigned char 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  4    0[BANK0 ] unsigned long 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, status,0, btemp+1
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1447 ;;      Params:         0       8       0       0       0
  1448 ;;      Locals:         0       5       0       0       0
  1449 ;;      Temps:          1       0       0       0       0
  1450 ;;      Totals:         1      13       0       0       0
  1451 ;;Total ram usage:       14 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460     0672                     ___lldiv:	
  1461                           ;psect for function ___lldiv
  1462                           
  1463     0672                     l919:	
  1464                           ;incstack = 0
  1465                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1466                           
  1467     0672  3000               	movlw	0
  1468     0673  1283               	bcf	3,5	;RP0=0, select bank0
  1469     0674  1303               	bcf	3,6	;RP1=0, select bank0
  1470     0675  00BB               	movwf	___lldiv@quotient+3
  1471     0676  3000               	movlw	0
  1472     0677  00BA               	movwf	___lldiv@quotient+2
  1473     0678  3000               	movlw	0
  1474     0679  00B9               	movwf	___lldiv@quotient+1
  1475     067A  3000               	movlw	0
  1476     067B  00B8               	movwf	___lldiv@quotient
  1477     067C  0833               	movf	___lldiv@divisor+3,w
  1478     067D  0432               	iorwf	___lldiv@divisor+2,w
  1479     067E  0431               	iorwf	___lldiv@divisor+1,w
  1480     067F  0430               	iorwf	___lldiv@divisor,w
  1481     0680  1903               	skipnz
  1482     0681  2E83               	goto	u471
  1483     0682  2E84               	goto	u470
  1484     0683                     u471:
  1485     0683  2ED1               	goto	l941
  1486     0684                     u470:
  1487     0684                     l921:
  1488     0684  01BC               	clrf	___lldiv@counter
  1489     0685  0ABC               	incf	___lldiv@counter,f
  1490     0686  2E94               	goto	l927
  1491     0687                     l923:
  1492     0687  3001               	movlw	1
  1493     0688  00FD               	movwf	??___lldiv
  1494     0689                     u485:
  1495     0689  1003               	clrc
  1496     068A  0DB0               	rlf	___lldiv@divisor,f
  1497     068B  0DB1               	rlf	___lldiv@divisor+1,f
  1498     068C  0DB2               	rlf	___lldiv@divisor+2,f
  1499     068D  0DB3               	rlf	___lldiv@divisor+3,f
  1500     068E  0BFD               	decfsz	??___lldiv,f
  1501     068F  2E89               	goto	u485
  1502     0690                     l925:
  1503     0690  3001               	movlw	1
  1504     0691  00FF               	movwf	btemp+1
  1505     0692  087F               	movf	btemp+1,w
  1506     0693  07BC               	addwf	___lldiv@counter,f
  1507     0694                     l927:
  1508     0694  1FB3               	btfss	___lldiv@divisor+3,7
  1509     0695  2E97               	goto	u491
  1510     0696  2E98               	goto	u490
  1511     0697                     u491:
  1512     0697  2E87               	goto	l923
  1513     0698                     u490:
  1514     0698                     l929:
  1515     0698  3001               	movlw	1
  1516     0699  00FD               	movwf	??___lldiv
  1517     069A                     u505:
  1518     069A  1003               	clrc
  1519     069B  0DB8               	rlf	___lldiv@quotient,f
  1520     069C  0DB9               	rlf	___lldiv@quotient+1,f
  1521     069D  0DBA               	rlf	___lldiv@quotient+2,f
  1522     069E  0DBB               	rlf	___lldiv@quotient+3,f
  1523     069F  0BFD               	decfsz	??___lldiv,f
  1524     06A0  2E9A               	goto	u505
  1525     06A1                     l931:
  1526     06A1  0833               	movf	___lldiv@divisor+3,w
  1527     06A2  0237               	subwf	___lldiv@dividend+3,w
  1528     06A3  1D03               	skipz
  1529     06A4  2EAF               	goto	u515
  1530     06A5  0832               	movf	___lldiv@divisor+2,w
  1531     06A6  0236               	subwf	___lldiv@dividend+2,w
  1532     06A7  1D03               	skipz
  1533     06A8  2EAF               	goto	u515
  1534     06A9  0831               	movf	___lldiv@divisor+1,w
  1535     06AA  0235               	subwf	___lldiv@dividend+1,w
  1536     06AB  1D03               	skipz
  1537     06AC  2EAF               	goto	u515
  1538     06AD  0830               	movf	___lldiv@divisor,w
  1539     06AE  0234               	subwf	___lldiv@dividend,w
  1540     06AF                     u515:
  1541     06AF  1C03               	skipc
  1542     06B0  2EB2               	goto	u511
  1543     06B1  2EB3               	goto	u510
  1544     06B2                     u511:
  1545     06B2  2EC2               	goto	l937
  1546     06B3                     u510:
  1547     06B3                     l933:
  1548     06B3  0830               	movf	___lldiv@divisor,w
  1549     06B4  02B4               	subwf	___lldiv@dividend,f
  1550     06B5  0831               	movf	___lldiv@divisor+1,w
  1551     06B6  1C03               	skipc
  1552     06B7  0F31               	incfsz	___lldiv@divisor+1,w
  1553     06B8  02B5               	subwf	___lldiv@dividend+1,f
  1554     06B9  0832               	movf	___lldiv@divisor+2,w
  1555     06BA  1C03               	skipc
  1556     06BB  0F32               	incfsz	___lldiv@divisor+2,w
  1557     06BC  02B6               	subwf	___lldiv@dividend+2,f
  1558     06BD  0833               	movf	___lldiv@divisor+3,w
  1559     06BE  1C03               	skipc
  1560     06BF  0F33               	incfsz	___lldiv@divisor+3,w
  1561     06C0  02B7               	subwf	___lldiv@dividend+3,f
  1562     06C1                     l935:
  1563     06C1  1438               	bsf	___lldiv@quotient,0
  1564     06C2                     l937:
  1565     06C2  3001               	movlw	1
  1566     06C3                     u525:
  1567     06C3  1003               	clrc
  1568     06C4  0CB3               	rrf	___lldiv@divisor+3,f
  1569     06C5  0CB2               	rrf	___lldiv@divisor+2,f
  1570     06C6  0CB1               	rrf	___lldiv@divisor+1,f
  1571     06C7  0CB0               	rrf	___lldiv@divisor,f
  1572     06C8  3EFF               	addlw	-1
  1573     06C9  1D03               	skipz
  1574     06CA  2EC3               	goto	u525
  1575     06CB                     l939:
  1576     06CB  3001               	movlw	1
  1577     06CC  02BC               	subwf	___lldiv@counter,f
  1578     06CD  1D03               	btfss	3,2
  1579     06CE  2ED0               	goto	u531
  1580     06CF  2ED1               	goto	u530
  1581     06D0                     u531:
  1582     06D0  2E98               	goto	l929
  1583     06D1                     u530:
  1584     06D1                     l941:
  1585     06D1  083B               	movf	___lldiv@quotient+3,w
  1586     06D2  00B3               	movwf	?___lldiv+3
  1587     06D3  083A               	movf	___lldiv@quotient+2,w
  1588     06D4  00B2               	movwf	?___lldiv+2
  1589     06D5  0839               	movf	___lldiv@quotient+1,w
  1590     06D6  00B1               	movwf	?___lldiv+1
  1591     06D7  0838               	movf	___lldiv@quotient,w
  1592     06D8  00B0               	movwf	?___lldiv
  1593     06D9                     l191:
  1594     06D9  0008               	return
  1595     06DA                     __end_of___lldiv:
  1596     007E                     btemp	set	126	;btemp
  1597     007E                     wtemp0	set	126
  1598                           
  1599                           	psect	config
  1600                           
  1601                           ;Config register CONFIG @ 0x2007
  1602                           ;	Oscillator Selection bits
  1603                           ;	FOSC = EXTRC, RC oscillator
  1604                           ;	Watchdog Timer Enable bit
  1605                           ;	WDTE = OFF, WDT disabled
  1606                           ;	Power-up Timer Enable bit
  1607                           ;	PWRTE = OFF, PWRT disabled
  1608                           ;	Brown-out Reset Enable bit
  1609                           ;	BOREN = OFF, BOR disabled
  1610                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1611                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1612                           ;	Data EEPROM Memory Code Protection bit
  1613                           ;	CPD = OFF, Data EEPROM code protection off
  1614                           ;	Flash Program Memory Write Enable bits
  1615                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1616                           ;	In-Circuit Debugger Mode bit
  1617                           ;	DEBUG = 0x1, unprogrammed default
  1618                           ;	Flash Program Memory Code Protection bit
  1619                           ;	CP = OFF, Code protection off
  1620     2007                     	org	8199
  1621     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     15      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lldiv
    _output->___lwdiv
    _data->_delay
    _init->_cmd
    _cmd->_delay
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    _main->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6061
                                             13 BANK0      2     2      0
                            ___lldiv
                             ___lmul
                                _cmd
                               _data
                              _delay
                               _init
                             _output
 ---------------------------------------------------------------------------------
 (1) _output                                               2     0      2    1527
                                              7 COMMON     2     0      2
                            ___lwdiv
                            ___lwmod
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 1     1      0     804
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    1586
                                _cmd
                              _delay
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  1     1      0     804
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     0      2     782
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     314
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _cmd
     _delay
   _data
     _delay
   _delay
   _init
     _cmd
     _delay
   _output
     ___lwdiv
     ___lwmod
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      1F       5       38.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2D      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Jan 25 10:12:59 2024

                      _k 0028                        _m 002A                       l60 0576  
                     l54 0751                       l46 075A                       l63 055E  
                     l57 05AD                       l69 0549                       fsr 0004  
                    l191 06D9                      l169 0671                      l435 062B  
                    l445 05E7                      l801 0569                      l803 056D  
                    l811 0551                      l821 05F3                      l813 0555  
                    l805 054B                      l901 0591                      l911 064F  
                    l831 0619                      l823 05FA                      l815 05E8  
                    l807 054E                      l903 05A7                      l921 0684  
                    l913 0658                      l905 062C                      l833 061A  
                    l825 05FE                      l817 05EA                      l841 05AE  
                    l809 0550                      l931 06A1                      l923 0687  
                    l915 0669                      l907 0634                      l835 0621  
                    l827 0602                      l819 05F0                      l851 05C6  
                    l843 05B4                      l933 06B3                      l925 0690  
                    l941 06D1                      l909 0638                      l829 0613  
                    l837 0627                      l853 05D0                      l845 05B7  
                    l935 06C1                      l927 0694                      l919 0672  
                    l791 053D                      l871 06EE                      l863 06DA  
                    l855 05D6                      l847 05BE                      l951 0774  
                    l937 06C2                      l929 0698                      l793 053D  
                    l881 0715                      l873 06F7                      l865 06DE  
                    l857 05DD                      l849 05C2                      l961 07CE  
                    l953 0781                      l945 0752                      l939 06CB  
                    l795 0560                      l891 0739                      l883 071B  
                    l875 06FD                      l867 06DF                      l859 05E3  
                    l963 07D7                      l955 07B7                      l947 0757  
                    l797 0566                      l893 0742                      l885 0724  
                    l877 0706                      l869 06E8                      l965 07DD  
                    l957 07BD                      l949 075E                      l799 0568  
                    l895 0748                      l887 072A                      l879 070C  
                    l967 07E6                      l959 07C8                      l889 0733  
                    l897 0577                      l899 057D                      u310 0602  
                    u311 0601                      u305 05F4                      u330 0613  
                    u410 05E3                      u331 0612                      u411 05E2  
                    u420 0638                      u421 0637                      u325 0603  
                    u405 05D7                      u510 06B3                      u350 0627  
                    u511 06B2                      u431 0641                      u351 0626  
                    u335 060F                      u432 0648                      u280 0549  
                    u360 05B4                      u505 069A                      u433 064F  
                    u281 0548                      u345 061B                      u361 05B3  
                    u530 06D1                      u290 05F0                      u531 06D0  
                    u515 06AF                      u291 05EF                      u460 0669  
                    u380 05C6                      u540 075E                      u525 06C3  
                    u461 0668                      u445 0651                      u381 05C5  
                    u541 075D                      u470 0684                      u390 05D0  
                    u471 0683                      u455 0659                      u391 05CF  
                    u375 05B8                      u490 0698                      u491 0697  
                    u395 05CC                      u485 0689                      _cmd 055F  
                    _val 0024                      indf 0000                     ?_cmd 0070  
                   _data 054A                     cmd@i 0072                     _main 0752  
                   _init 06DA                     btemp 007E                     start 0000  
                  ??_cmd 0072                    ?_data 0070                    ?_main 0070  
                  ?_init 0070          __end_of___lldiv 06DA          __end_of___lwdiv 062C  
        __end_of___lwmod 05E8                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
    ___lmul@multiplicand 0074                    _delay 053D                    data@i 0072  
                  _hival 002E                    _loval 002C                    status 0003  
                  wtemp0 007E          __initialization 07F3             __end_of_data 055F  
           __end_of_main 07F3             __end_of_init 0752                   ??_data 0072  
                 ??_main 003D                   ??_init 0073                   ?_delay 0070  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E                   ___lmul 062C                ??___lldiv 007D  
              ??___lwdiv 0074                ??___lwmod 0074                   delay@x 0070  
                 _output 0577  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_delay 054A                  ??_delay 0072               __pbssBANK0 0020  
             __pmaintext 0752                  ?___lmul 0070           ___lmul@product 0079  
                ?_output 0077                  ___lldiv 0672                  ___lwdiv 05E8  
                ___lwmod 05AE                  __ptext1 0577                  __ptext2 054A  
                __ptext3 05AE                  __ptext4 05E8                  __ptext5 06DA  
                __ptext6 055F                  __ptext7 053D                  __ptext8 062C  
                __ptext9 0672                  clrloop0 0536                  _voltage 0020  
   end_of_initialization 07FC          ___lldiv@divisor 0030          ___lldiv@counter 003C  
                output@i 0077           __end_of___lmul 0672           __end_of_output 05AE  
    start_initialization 07F3              __end_of_cmd 0577                 ??___lmul 0078  
               ??_output 0079                ___latbits 0002            __pcstackBANK0 0030  
       ___lwdiv@dividend 0072                 ?___lldiv 0030                 ?___lwdiv 0070  
               ?___lwmod 0070         ___lwdiv@quotient 0074                clear_ram0 0535  
      ___lmul@multiplier 0070          ___lwdiv@divisor 0070          ___lwdiv@counter 0076  
       ___lwmod@dividend 0072         ___lldiv@dividend 0034         ___lldiv@quotient 0038  
        ___lwmod@divisor 0070          ___lwmod@counter 0074  
