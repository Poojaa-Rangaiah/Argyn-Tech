

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Feb 28 19:45:09 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     000B                     _INTCON	set	11
   167     0008                     _PORTD	set	8
   168     0007                     _PORTC	set	7
   169     0006                     _PORTB	set	6
   170     0081                     _OPTION_REG	set	129
   171     0088                     _TRISD	set	136
   172     0087                     _TRISC	set	135
   173     0086                     _TRISB	set	134
   174                           
   175                           	psect	cinit
   176     0011                     start_initialization:	
   177                           ; #config settings
   178                           
   179     0011                     __initialization:
   180                           
   181                           ; Clear objects allocated to COMMON
   182     0011  01F5               	clrf	__pbssCOMMON& (0+127)
   183     0012                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186     0012                     __end_of__initialization:
   187     0012  0183               	clrf	3
   188     0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	bssCOMMON
   191     0075                     __pbssCOMMON:
   192     0075                     _val:
   193     0075                     	ds	1
   194                           
   195                           	psect	cstackCOMMON
   196     0070                     __pcstackCOMMON:
   197     0070                     ?_main:
   198     0070                     ?_isr:	
   199                           ; 1 bytes @ 0x0
   200                           
   201     0070                     ??_isr:	
   202                           ; 1 bytes @ 0x0
   203                           
   204                           
   205                           ; 1 bytes @ 0x0
   206     0070                     	ds	3
   207     0073                     ??_main:
   208                           
   209                           ; 1 bytes @ 0x3
   210     0073                     	ds	2
   211                           
   212                           	psect	maintext
   213     0016                     __pmaintext:	
   214 ;;
   215 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   216 ;;
   217 ;; *************** function _main *****************
   218 ;; Defined at:
   219 ;;		line 5 in file "INT.c"
   220 ;; Parameters:    Size  Location     Type
   221 ;;		None
   222 ;; Auto vars:     Size  Location     Type
   223 ;;		None
   224 ;; Return value:  Size  Location     Type
   225 ;;                  1    wreg      void 
   226 ;; Registers used:
   227 ;;		wreg, status,2, status,0, btemp+1
   228 ;; Tracked objects:
   229 ;;		On entry : B00/0
   230 ;;		On exit  : 0/0
   231 ;;		Unchanged: 0/0
   232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   233 ;;      Params:         0       0       0       0       0
   234 ;;      Locals:         0       0       0       0       0
   235 ;;      Temps:          2       0       0       0       0
   236 ;;      Totals:         2       0       0       0       0
   237 ;;Total ram usage:        2 bytes
   238 ;; Hardware stack levels required when called: 1
   239 ;; This function calls:
   240 ;;		Nothing
   241 ;; This function is called by:
   242 ;;		Startup code after reset
   243 ;; This function uses a non-reentrant model
   244 ;;
   245                           
   246     0016                     _main:	
   247                           ;psect for function _main
   248                           
   249     0016                     l579:	
   250                           ;incstack = 0
   251                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   252                           
   253                           
   254                           ;INT.c: 6:     TRISB = 0xF0;
   255     0016  30F0               	movlw	240
   256     0017  1683               	bsf	3,5	;RP0=1, select bank1
   257     0018  1303               	bcf	3,6	;RP1=0, select bank1
   258     0019  0086               	movwf	6	;volatile
   259     001A                     l581:
   260                           
   261                           ;INT.c: 7:     PORTB = 0x00;
   262     001A  1283               	bcf	3,5	;RP0=0, select bank0
   263     001B  1303               	bcf	3,6	;RP1=0, select bank0
   264     001C  0186               	clrf	6	;volatile
   265     001D                     l583:
   266                           
   267                           ;INT.c: 8:     TRISC = 0x00;
   268     001D  1683               	bsf	3,5	;RP0=1, select bank1
   269     001E  1303               	bcf	3,6	;RP1=0, select bank1
   270     001F  0187               	clrf	7	;volatile
   271     0020                     l585:
   272                           
   273                           ;INT.c: 9:     PORTC = 0x00;
   274     0020  1283               	bcf	3,5	;RP0=0, select bank0
   275     0021  1303               	bcf	3,6	;RP1=0, select bank0
   276     0022  0187               	clrf	7	;volatile
   277     0023                     l587:
   278                           
   279                           ;INT.c: 10:     TRISD = 0x00;
   280     0023  1683               	bsf	3,5	;RP0=1, select bank1
   281     0024  1303               	bcf	3,6	;RP1=0, select bank1
   282     0025  0188               	clrf	8	;volatile
   283     0026                     l589:
   284                           
   285                           ;INT.c: 11:     PORTD = 0x00;
   286     0026  1283               	bcf	3,5	;RP0=0, select bank0
   287     0027  1303               	bcf	3,6	;RP1=0, select bank0
   288     0028  0188               	clrf	8	;volatile
   289     0029                     l591:
   290                           
   291                           ;INT.c: 12:     OPTION_REG &= 0x7F;
   292     0029  307F               	movlw	127
   293     002A  00FF               	movwf	btemp+1
   294     002B  087F               	movf	btemp+1,w
   295     002C  1683               	bsf	3,5	;RP0=1, select bank1
   296     002D  1303               	bcf	3,6	;RP1=0, select bank1
   297     002E  0581               	andwf	1,f	;volatile
   298     002F                     l593:
   299                           
   300                           ;INT.c: 13:     INTCON = 0x88;
   301     002F  3088               	movlw	136
   302     0030  008B               	movwf	11	;volatile
   303     0031                     l595:
   304                           
   305                           ;INT.c: 15:         PORTD = ~PORTD;
   306     0031  1283               	bcf	3,5	;RP0=0, select bank0
   307     0032  1303               	bcf	3,6	;RP1=0, select bank0
   308     0033  0988               	comf	8,f	;volatile
   309     0034                     l597:
   310                           
   311                           ;INT.c: 16:         _delay((unsigned long)((100)*(6000000/4000.0)));
   312     0034  30C3               	movlw	195
   313     0035  00F4               	movwf	??_main+1
   314     0036  30CD               	movlw	205
   315     0037  00F3               	movwf	??_main
   316     0038                     u37:
   317     0038  0BF3               	decfsz	??_main,f
   318     0039  2838               	goto	u37
   319     003A  0BF4               	decfsz	??_main+1,f
   320     003B  2838               	goto	u37
   321     003C  2831               	goto	l595
   322     003D  120A  118A  280E   	ljmp	start
   323     0040                     __end_of_main:
   324                           
   325                           	psect	text1
   326     0040                     __ptext1:	
   327 ;; *************** function _isr *****************
   328 ;; Defined at:
   329 ;;		line 19 in file "INT.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;		None
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, status,2, status,0, btemp+1
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   343 ;;      Params:         0       0       0       0       0
   344 ;;      Locals:         0       0       0       0       0
   345 ;;      Temps:          3       0       0       0       0
   346 ;;      Totals:         3       0       0       0       0
   347 ;;Total ram usage:        3 bytes
   348 ;; Hardware stack levels used: 1
   349 ;; This function calls:
   350 ;;		Nothing
   351 ;; This function is called by:
   352 ;;		Interrupt level 1
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356     0040                     _isr:	
   357                           ;psect for function _isr
   358                           
   359     0040                     i1l599:
   360                           
   361                           ;INT.c: 20:     if (INTCON & 0x01) {
   362     0040  1C0B               	btfss	11,0	;volatile
   363     0041  2843               	goto	u1_21
   364     0042  2844               	goto	u1_20
   365     0043                     u1_21:
   366     0043  2853               	goto	i1l35
   367     0044                     u1_20:
   368     0044                     i1l601:
   369                           
   370                           ;INT.c: 21:         val = PORTB;
   371     0044  1283               	bcf	3,5	;RP0=0, select bank0
   372     0045  1303               	bcf	3,6	;RP1=0, select bank0
   373     0046  0806               	movf	6,w	;volatile
   374     0047  00F5               	movwf	_val
   375     0048                     i1l603:
   376                           
   377                           ;INT.c: 22:         if (val == 0xB0) {
   378     0048  30B0               	movlw	176
   379     0049  0675               	xorwf	_val,w
   380     004A  1D03               	btfss	3,2
   381     004B  284D               	goto	u2_21
   382     004C  284E               	goto	u2_20
   383     004D                     u2_21:
   384     004D  284F               	goto	i1l607
   385     004E                     u2_20:
   386     004E                     i1l605:
   387                           
   388                           ;INT.c: 23:             PORTC = ~PORTC;
   389     004E  0987               	comf	7,f	;volatile
   390     004F                     i1l607:
   391                           
   392                           ;INT.c: 25:         INTCON &= 0xFE;
   393     004F  30FE               	movlw	254
   394     0050  00FF               	movwf	btemp+1
   395     0051  087F               	movf	btemp+1,w
   396     0052  058B               	andwf	11,f	;volatile
   397     0053                     i1l35:
   398     0053  0872               	movf	??_isr+2,w
   399     0054  00FF               	movwf	btemp+1
   400     0055  0871               	movf	??_isr+1,w
   401     0056  008A               	movwf	10
   402     0057  0E70               	swapf	??_isr,w
   403     0058  0083               	movwf	3
   404     0059  0EFE               	swapf	btemp,f
   405     005A  0E7E               	swapf	btemp,w
   406     005B  0009               	retfie
   407     005C                     __end_of_isr:
   408     007E                     btemp	set	126	;btemp
   409     007E                     wtemp0	set	126
   410                           
   411                           	psect	intentry
   412     0004                     __pintentry:	
   413                           ;incstack = 0
   414                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1]
   415                           
   416     0004                     interrupt_function:
   417     007E                     saved_w	set	btemp
   418     0004  00FE               	movwf	btemp
   419     0005  0E03               	swapf	3,w
   420     0006  00F0               	movwf	??_isr
   421     0007  080A               	movf	10,w
   422     0008  00F1               	movwf	??_isr+1
   423     0009  087F               	movf	btemp+1,w
   424     000A  00F2               	movwf	??_isr+2
   425     000B  120A  118A  2840   	ljmp	_isr

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Feb 28 19:45:09 2024

                     u37 0038                      l581 001A                      l591 0029  
                    l583 001D                      l593 002F                      l585 0020  
                    l595 0031                      l587 0023                      l579 0016  
                    l597 0034                      l589 0026                      _isr 0040  
                    _val 0075                     ?_isr 0070                     i1l35 0053  
                   u1_20 0044                     u1_21 0043                     u2_20 004E  
                   u2_21 004D                     _main 0016                     btemp 007E  
                   start 000E                    ??_isr 0070                    ?_main 0070  
                  i1l601 0044                    i1l603 0048                    i1l605 004E  
                  i1l607 004F                    i1l599 0040                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 0040                   ??_main 0073                   _INTCON 000B  
                 saved_w 007E  __end_of__initialization 0012           __pcstackCOMMON 0070  
             __pmaintext 0016               __pintentry 0004                  __ptext1 0040  
   end_of_initialization 0012      start_initialization 0011              __end_of_isr 005C  
            __pbssCOMMON 0075                ___latbits 0002        interrupt_function 0004  
               intlevel1 0000               _OPTION_REG 0081  
